{"version":3,"sources":["Components/StateDetailsSlider/StateDetails.js","Components/StateDetailsSlider/StateChart.js","Components/TabPanel/Tabs.js","Components/CountryStats/CountryStat.js","utils/commom-functions.js","Components/ApplastUpdated/AppUpdated.js","Components/CovidQuotes/Covidquotes.js","Components/GlobalStats/GlobalStat.js","Components/WorldMap/Worldmap.js","Components/IndiaCovidNews/DaliyCovidNews.js","Components/NavBar/NavBar.js","App.js","serviceWorker.js","Reducers/index.js","store.js","index.js"],"names":["StateDetails","props","state","dynamicClassname","sliderLog","clearhandleautoslide","StateWiseData","StateTotalCases","this","fetchStatesDetails","fetch","then","res","json","statewisedetails","setState","statesTotalCount","Districts","stateDistCountKerala","stateDistCountDelhi","stateDistCountTelangana","stateDistCountRajasthan","stateDistCountHaryana","UttarPradesh","Ladakh","TamilNadu","JammuandKashmir","Karnataka","Maharashtra","Punjab","AndhraPradesh","Uttarakhand","Odisha","Puducherry","WestBengal","Chandigarh","Gujarat","HimachalPradesh","MadhyaPradesh","Bihar","Manipur","Mizoram","Goa","AndamanandNicobarIslands","Jharkhand","Assam","ArunachalPradesh","DadraandNagarHaveli","Tripura","Nagaland","Meghalaya","push","districtData","i","length","district","confirmed","StateArray","totalcases","topStates","total","map","item","Fragment","Grid","container","justify","alignItems","md","Card","variant","CardContent","spacing","stateWiseDetails","index","xs","key","className","Typography","end","duration","separator","Component","StateChart","isVertical","data","labels","datasets","label","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","handelGraphToggle","bind","chartlabels","id","type","onChange","htmlFor","width","height","options","maintainAspectRatio","React","TabPanel","children","value","other","component","role","hidden","aria-labelledby","Box","p","a11yProps","useStyles","makeStyles","theme","root","flexGrow","palette","background","paper","ScrollableTabsButtonForce","classes","useState","setValue","AppBar","position","color","Tabs","event","newValue","scrollButtons","indicatorColor","textColor","centered","aria-label","Tab","icon","confirm","fontFamily","fontWeight","textTransform","fontSize","confirmChild1","textAlign","alignItem","justifyContent","marginTop","confirmChild2","active","breakpoints","up","marginLeft","activeChild1","activeChild2","recovered","recoveredChild1","recoveredChild2","deceased","deceasedChild1","deceasedChild2","FirstGridRow","SecondGridRow","ThirdGridRow","FourthGridRow","statewisedata","marginRight","statechild","statechild2","covidsymbol","highsysmbol","padding","avgsysmbol","lowsysmbol","stateTotal","CountryStat","countryStat","setCountryStat","ConfirmCount","setConfirmCount","ActivityCount","setActivityCount","RecoveredCount","setRecoveredCount","DeceasedCount","setDeceasedCount","useEffect","stat","statewise","parseInt","deaths","gutterBottom","deltaconfirmed","deltarecovered","deltadeaths","sm","lg","xl","style","months","formatDate","unformattedDate","day","slice","month","year","time","appUpdateDiv","appUpdateFont1","appUpdateFont2","appUpdateFont3","appUpdateFont4","appUpdateFont5","ApplastUpdated","setStates","fetched","setFetched","lastUpdated","setLastUpdated","getStates","a","Promise","all","axios","get","response","lastupdatedtime","console","log","isNaN","Date","parse","formatDistance","formatDateAbsolute","banner_parent","banner","margin","banner_text","Covidquotes","Quotes","setQuotes","setInterval","quotes","randomNum","Math","abs","floor","random","factoids","onClick","GlobalStat","isModelVisible","WorldCountries","WorldCountriesCopy","getWorldCountryCases","nextProp","isCountryModalVisible","catch","err","error","e","target","searchedResult","filter","country","toLowerCase","includes","Paper","InputBase","handleCountrySearch","placeholder","inputProps","IconButton","Divider","orientation","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","eachCountry","scope","countryInfo","iso2","countryCode","svg","todayCases","todayDeaths","cases","WorldMap","isMapModalVisible","DailyCovidNews","DailyCovid19News","getCovidNews","isNewsModalVisible","myHeaders","Headers","append","method","headers","redirect","news","List","News","ListItem","ListItemAvatar","Avatar","alt","src","ListItemText","primary","title","secondary","excerpt","href","ampWebUrl","navbar","boxShadow","globalstat","cursor","globalmap","grow","display","text","inherit","sectionDesktop","sectionMobile","PrimarySearchAppBar","NewsCount","setNewsCount","setModalVisible","setNewsModalVisible","mobileMoreAnchorEl","setMobileMoreAnchorEl","isMobileMenuOpen","Boolean","handleCountryRecords","handleCovidNews","renderMobileMenu","Menu","anchorEl","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","open","onClose","MenuItem","Badge","badgeContent","Toolbar","noWrap","aria-controls","aria-haspopup","currentTarget","App","NavBar","window","location","hostname","match","combineReducers","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.5031e727.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './StateDetails.css';\r\nimport $ from 'jquery';\r\nimport Card from '@material-ui/core/Card';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport _ from 'lodash';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CountUp from 'react-countup';\r\n\r\n\r\nclass StateDetails extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      dynamicClassname:'extraCls',\r\n      sliderLog:'',\r\n      clearhandleautoslide:'',\r\n      StateWiseData:[],\r\n      StateTotalCases:[]\r\n    }\r\n  }\r\n  componentDidMount(){\r\n    this.fetchStatesDetails();\r\n  }\r\n  fetchStatesDetails(){\r\n    fetch('https://api.covid19india.org/state_district_wise.json')\r\n    .then(res => res.json())\r\n    .then(statewisedetails =>{ \r\n      this.setState({ StateWiseData : {...statewisedetails} })\r\n      const statesTotalCount = [\r\n        {\r\n          state: '',\r\n          Districts:{}\r\n        }\r\n      ];\r\n      const stateTotalCases = [\r\n        {\r\n          state:'',\r\n          TotalCases:0\r\n        }\r\n      ]\r\n      let stateDistCountKerala = 0;\r\n      let stateDistCountDelhi = 0;\r\n      let stateDistCountTelangana = 0;\r\n      let stateDistCountRajasthan = 0;\r\n      let stateDistCountHaryana =0;\r\n      let UttarPradesh =0;\r\n      let Ladakh =0;\r\n      let TamilNadu =0;\r\n      let JammuandKashmir =0;\r\n      let Karnataka =0;\r\n      let Maharashtra =0;\r\n      let Punjab =0;\r\n      let AndhraPradesh =0;\r\n      let Uttarakhand =0;\r\n      let Odisha =0;\r\n      let Puducherry =0;\r\n      let WestBengal =0;\r\n      let Chandigarh =0;\r\n      let Gujarat =0;\r\n      let HimachalPradesh =0;\r\n      let MadhyaPradesh =0;\r\n      let Bihar =0;\r\n      let Manipur =0;\r\n      let Mizoram =0;\r\n      let Goa =0;\r\n      let AndamanandNicobarIslands =0;\r\n      let Jharkhand =0;\r\n      let Assam =0;\r\n      let ArunachalPradesh =0;\r\n      let DadraandNagarHaveli =0;\r\n      let Tripura =0;\r\n      let Nagaland =0;\r\n      let Meghalaya =0;\r\n\r\n      for(let state in statewisedetails){\r\n        statesTotalCount.push({state:state,Districts:statewisedetails[state].districtData})\r\n      }\r\n      for(let i=1; i<statesTotalCount.length; i++){\r\n        for(let district in statesTotalCount[i].Districts){\r\n          if(statesTotalCount[i].state == statesTotalCount[i].state){\r\n              if(statesTotalCount[i].state == 'Kerala'){\r\n                stateDistCountKerala += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'Delhi'){\r\n                stateDistCountDelhi += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'Telangana'){\r\n                stateDistCountTelangana += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'Rajasthan'){\r\n                stateDistCountRajasthan += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'Haryana'){\r\n                stateDistCountHaryana += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'Uttar Pradesh'){\r\n                UttarPradesh += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'Ladakh'){\r\n                Ladakh += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'Tamil Nadu'){\r\n                TamilNadu += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'Jammu and Kashmir'){\r\n                JammuandKashmir += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'Karnataka'){\r\n                Karnataka += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'Maharashtra'){\r\n                Maharashtra += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'Punjab'){\r\n                Punjab += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'Andhra Pradesh'){\r\n                AndhraPradesh += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'Uttarakhand'){\r\n                Uttarakhand += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'Odisha'){\r\n                Odisha += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'Puducherry'){\r\n                Puducherry += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'West Bengal'){\r\n                WestBengal += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'Chandigarh'){\r\n                Chandigarh += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'Gujarat'){\r\n                Gujarat += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'Himachal Pradesh'){\r\n                HimachalPradesh += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'Madhya Pradesh'){\r\n                MadhyaPradesh += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'Bihar'){\r\n                Bihar += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'Manipur'){\r\n                Manipur += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'Mizoram'){\r\n                Mizoram += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'Goa'){\r\n                Goa += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'Andaman and Nicobar Islands'){\r\n                AndamanandNicobarIslands += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'Jharkhand'){\r\n                Jharkhand += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'Assam'){\r\n                Assam += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'Arunachal Pradesh'){\r\n                ArunachalPradesh += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'Dadra and Nagar Haveli'){\r\n                DadraandNagarHaveli += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'Tripura'){\r\n                Tripura += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'Nagaland'){\r\n                Nagaland += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'Meghalaya'){\r\n                Meghalaya += statesTotalCount[i].Districts[district].confirmed\r\n              }\r\n          }\r\n        }\r\n      }\r\n\r\n      const StateArray = [\r\n        {state:'Kerala',totalcases:stateDistCountKerala},\r\n        {state:'Delhi',totalcases:stateDistCountDelhi},\r\n        {state:'Telangana',totalcases:stateDistCountTelangana},\r\n        {state:'Rajasthan',totalcases:stateDistCountRajasthan},\r\n        {state:'Haryana',totalcases:stateDistCountHaryana},\r\n        {state:'UttarPradesh',totalcases:UttarPradesh},\r\n        {state:'Ladakh',totalcases:Ladakh},\r\n        {state:'TamilNadu',totalcases:TamilNadu},\r\n        {state:'JammuandKashmir',totalcases:JammuandKashmir},\r\n        {state:'Karnataka',totalcases:Karnataka},\r\n        {state:'Maharashtra',totalcases:Maharashtra},\r\n        {state:'Punjab',totalcases:Punjab},\r\n        {state:'AndhraPradesh',totalcases:AndhraPradesh},\r\n        {state:'Uttarakhand',totalcases:Uttarakhand},\r\n        {state:'Odisha',totalcases:Odisha},\r\n        {state:'Puducherry',totalcases:Puducherry},\r\n        {state:'WestBengal',totalcases:WestBengal},\r\n        {state:'Chandigarh',totalcases:Chandigarh},\r\n        {state:'Gujarat',totalcases:Gujarat},\r\n        {state:'HimachalPradesh',totalcases:HimachalPradesh},\r\n        {state:'MadhyaPradesh',totalcases:MadhyaPradesh},\r\n        {state:'Bihar',totalcases:Bihar},\r\n        {state:'Manipur',totalcases:Manipur},\r\n        {state:'Mizoram',totalcases:Mizoram},\r\n        {state:'Goa',totalcases:Goa},\r\n        {state:'AndamanandNicobarIslands',totalcases:AndamanandNicobarIslands},\r\n        {state:'Jharkhand',totalcases:Jharkhand},\r\n        {state:'Assam',totalcases:Assam},\r\n        {state:'ArunachalPradesh',totalcases:ArunachalPradesh},\r\n        {state:'DadraandNagarHaveli',totalcases:DadraandNagarHaveli},\r\n        {state:'Tripura',totalcases:Tripura},\r\n        {state:'Nagaland',totalcases:Nagaland},\r\n        {state:'Meghalaya',totalcases:Meghalaya},\r\n      ]\r\n      const topStates = [\r\n        {\r\n        state:'',\r\n        total:0\r\n        }\r\n      ];\r\n      this.setState({ StateTotalCases: StateArray})\r\n      this.state.StateTotalCases.map((item) =>{\r\n         if(item.totalcases > 1000)\r\n         {\r\n          topStates.push({state:item.state,total:item.totalcases})\r\n         }\r\n      })\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Grid container\r\n        justify=\"space-evenly\"\r\n        alignItems=\"center\"\r\n        >\r\n          <Grid item md={11}>\r\n            <Card variant=\"outlined\">\r\n              <CardContent>\r\n                <Grid container  spacing={2}>\r\n\r\n                  {\r\n                    this.state.StateTotalCases.map((stateWiseDetails, index) =>{\r\n                        return <Grid item xs={4} md={2} key={index}>\r\n                                  <Card variant=\"outlined\">\r\n                                    <CardContent className={(stateWiseDetails.totalcases > 1000 )? 'highCases': (stateWiseDetails.totalcases < 100)? 'safeZone' : 'avrageCases'}>\r\n                                      <div>\r\n                                      <Typography  className='stateCards'>\r\n                                        {stateWiseDetails.state}\r\n                                      </Typography>\r\n                                      </div>\r\n                                      <div>\r\n                                      <Typography  className='statetotal'>\r\n                                      <CountUp end={stateWiseDetails.totalcases} duration={3.75} separator=\",\"></CountUp> \r\n                                      </Typography>\r\n                                      </div>\r\n                                    </CardContent>\r\n                                  </Card>\r\n                                </Grid>\r\n                    })\r\n                  }\r\n                </Grid>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default StateDetails;","import React from 'react';\r\nimport './StateDetails.css';\r\nimport { HorizontalBar,Bar } from 'react-chartjs-2';\r\n\r\nclass StateChart extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n          isVertical: true,\r\n          data : {\r\n            labels: [],\r\n            datasets: [\r\n              {\r\n                label: 'States',\r\n                backgroundColor: 'rgba(255,99,132,0.2)',\r\n                borderColor: 'rgba(255,99,132,1)',\r\n                borderWidth: 1,\r\n                hoverBackgroundColor: 'rgba(255,99,132,0.4)',\r\n                hoverBorderColor: 'rgba(255,99,132,1)',\r\n                data: []\r\n              }\r\n            ]\r\n          }\r\n        }\r\n        this.handelGraphToggle = this.handelGraphToggle.bind(this);\r\n    }\r\n    componentDidMount(){\r\n      this.fetchStatesDetails();\r\n    }\r\n    handelGraphToggle(){\r\n      if(this.state.isVertical == true){\r\n        this.setState({ isVertical: false })\r\n      }else if(this.state.isVertical == false){\r\n        this.setState({ isVertical: true })\r\n      }\r\n    }\r\n    fetchStatesDetails(){\r\n      fetch('https://api.covid19india.org/state_district_wise.json')\r\n      .then(res => res.json())\r\n      .then(statewisedetails =>{ \r\n        this.setState({ StateWiseData : {...statewisedetails} })\r\n        const statesTotalCount = [\r\n          {\r\n            state: '',\r\n            Districts:{}\r\n          }\r\n        ];\r\n        const stateTotalCases = [\r\n          {\r\n            state:'',\r\n            TotalCases:0\r\n          }\r\n        ]\r\n        let stateDistCountKerala = 0;\r\n        let stateDistCountDelhi = 0;\r\n        let stateDistCountTelangana = 0;\r\n        let stateDistCountRajasthan = 0;\r\n        let stateDistCountHaryana =0;\r\n        let UttarPradesh =0;\r\n        let Ladakh =0;\r\n        let TamilNadu =0;\r\n        let JammuandKashmir =0;\r\n        let Karnataka =0;\r\n        let Maharashtra =0;\r\n        let Punjab =0;\r\n        let AndhraPradesh =0;\r\n        let Uttarakhand =0;\r\n        let Odisha =0;\r\n        let Puducherry =0;\r\n        let WestBengal =0;\r\n        let Chandigarh =0;\r\n        let Gujarat =0;\r\n        let HimachalPradesh =0;\r\n        let MadhyaPradesh =0;\r\n        let Bihar =0;\r\n        let Manipur =0;\r\n        let Mizoram =0;\r\n        let Goa =0;\r\n        let AndamanandNicobarIslands =0;\r\n        let Jharkhand =0;\r\n        let Assam =0;\r\n        let ArunachalPradesh =0;\r\n        let DadraandNagarHaveli =0;\r\n        let Tripura =0;\r\n        let Nagaland =0;\r\n        let Meghalaya =0;\r\n  \r\n        for(let state in statewisedetails){\r\n          statesTotalCount.push({state:state,Districts:statewisedetails[state].districtData})\r\n        }\r\n        for(let i=1; i<statesTotalCount.length; i++){\r\n          for(let district in statesTotalCount[i].Districts){\r\n            if(statesTotalCount[i].state == statesTotalCount[i].state){\r\n                if(statesTotalCount[i].state == 'Kerala'){\r\n                  stateDistCountKerala += statesTotalCount[i].Districts[district].confirmed\r\n                }else if(statesTotalCount[i].state == 'Delhi'){\r\n                  stateDistCountDelhi += statesTotalCount[i].Districts[district].confirmed\r\n                }else if(statesTotalCount[i].state == 'Telangana'){\r\n                  stateDistCountTelangana += statesTotalCount[i].Districts[district].confirmed\r\n                }else if(statesTotalCount[i].state == 'Rajasthan'){\r\n                  stateDistCountRajasthan += statesTotalCount[i].Districts[district].confirmed\r\n                }else if(statesTotalCount[i].state == 'Haryana'){\r\n                  stateDistCountHaryana += statesTotalCount[i].Districts[district].confirmed\r\n                }else if(statesTotalCount[i].state == 'Uttar Pradesh'){\r\n                  UttarPradesh += statesTotalCount[i].Districts[district].confirmed\r\n                }else if(statesTotalCount[i].state == 'Ladakh'){\r\n                  Ladakh += statesTotalCount[i].Districts[district].confirmed\r\n                }else if(statesTotalCount[i].state == 'Tamil Nadu'){\r\n                  TamilNadu += statesTotalCount[i].Districts[district].confirmed\r\n                }else if(statesTotalCount[i].state == 'Jammu and Kashmir'){\r\n                  JammuandKashmir += statesTotalCount[i].Districts[district].confirmed\r\n                }else if(statesTotalCount[i].state == 'Karnataka'){\r\n                  Karnataka += statesTotalCount[i].Districts[district].confirmed\r\n                }else if(statesTotalCount[i].state == 'Maharashtra'){\r\n                  Maharashtra += statesTotalCount[i].Districts[district].confirmed\r\n                }else if(statesTotalCount[i].state == 'Punjab'){\r\n                  Punjab += statesTotalCount[i].Districts[district].confirmed\r\n                }else if(statesTotalCount[i].state == 'Andhra Pradesh'){\r\n                  AndhraPradesh += statesTotalCount[i].Districts[district].confirmed\r\n                }else if(statesTotalCount[i].state == 'Uttarakhand'){\r\n                  Uttarakhand += statesTotalCount[i].Districts[district].confirmed\r\n                }else if(statesTotalCount[i].state == 'Odisha'){\r\n                  Odisha += statesTotalCount[i].Districts[district].confirmed\r\n                }else if(statesTotalCount[i].state == 'Puducherry'){\r\n                  Puducherry += statesTotalCount[i].Districts[district].confirmed\r\n                }else if(statesTotalCount[i].state == 'West Bengal'){\r\n                  WestBengal += statesTotalCount[i].Districts[district].confirmed\r\n                }else if(statesTotalCount[i].state == 'Chandigarh'){\r\n                  Chandigarh += statesTotalCount[i].Districts[district].confirmed\r\n                }else if(statesTotalCount[i].state == 'Gujarat'){\r\n                  Gujarat += statesTotalCount[i].Districts[district].confirmed\r\n                }else if(statesTotalCount[i].state == 'Himachal Pradesh'){\r\n                  HimachalPradesh += statesTotalCount[i].Districts[district].confirmed\r\n                }else if(statesTotalCount[i].state == 'Madhya Pradesh'){\r\n                  MadhyaPradesh += statesTotalCount[i].Districts[district].confirmed\r\n                }else if(statesTotalCount[i].state == 'Bihar'){\r\n                  Bihar += statesTotalCount[i].Districts[district].confirmed\r\n                }else if(statesTotalCount[i].state == 'Manipur'){\r\n                  Manipur += statesTotalCount[i].Districts[district].confirmed\r\n                }else if(statesTotalCount[i].state == 'Mizoram'){\r\n                  Mizoram += statesTotalCount[i].Districts[district].confirmed\r\n                }else if(statesTotalCount[i].state == 'Goa'){\r\n                  Goa += statesTotalCount[i].Districts[district].confirmed\r\n                }else if(statesTotalCount[i].state == 'Andaman and Nicobar Islands'){\r\n                  AndamanandNicobarIslands += statesTotalCount[i].Districts[district].confirmed\r\n                }else if(statesTotalCount[i].state == 'Jharkhand'){\r\n                  Jharkhand += statesTotalCount[i].Districts[district].confirmed\r\n                }else if(statesTotalCount[i].state == 'Assam'){\r\n                  Assam += statesTotalCount[i].Districts[district].confirmed\r\n                }else if(statesTotalCount[i].state == 'Arunachal Pradesh'){\r\n                  ArunachalPradesh += statesTotalCount[i].Districts[district].confirmed\r\n                }else if(statesTotalCount[i].state == 'Dadra and Nagar Haveli'){\r\n                  DadraandNagarHaveli += statesTotalCount[i].Districts[district].confirmed\r\n                }else if(statesTotalCount[i].state == 'Tripura'){\r\n                  Tripura += statesTotalCount[i].Districts[district].confirmed\r\n                }else if(statesTotalCount[i].state == 'Nagaland'){\r\n                  Nagaland += statesTotalCount[i].Districts[district].confirmed\r\n                }else if(statesTotalCount[i].state == 'Meghalaya'){\r\n                  Meghalaya += statesTotalCount[i].Districts[district].confirmed\r\n                }\r\n            }\r\n          }\r\n        }\r\n  \r\n        const StateArray = [\r\n          {state:'Kerala',totalcases:stateDistCountKerala},\r\n          {state:'Delhi',totalcases:stateDistCountDelhi},\r\n          {state:'Telangana',totalcases:stateDistCountTelangana},\r\n          {state:'Rajasthan',totalcases:stateDistCountRajasthan},\r\n          {state:'Haryana',totalcases:stateDistCountHaryana},\r\n          {state:'UttarPradesh',totalcases:UttarPradesh},\r\n          {state:'Ladakh',totalcases:Ladakh},\r\n          {state:'TamilNadu',totalcases:TamilNadu},\r\n          {state:'JammuandKashmir',totalcases:JammuandKashmir},\r\n          {state:'Karnataka',totalcases:Karnataka},\r\n          {state:'Maharashtra',totalcases:Maharashtra},\r\n          {state:'Punjab',totalcases:Punjab},\r\n          {state:'AndhraPradesh',totalcases:AndhraPradesh},\r\n          {state:'Uttarakhand',totalcases:Uttarakhand},\r\n          {state:'Odisha',totalcases:Odisha},\r\n          {state:'Puducherry',totalcases:Puducherry},\r\n          {state:'WestBengal',totalcases:WestBengal},\r\n          {state:'Chandigarh',totalcases:Chandigarh},\r\n          {state:'Gujarat',totalcases:Gujarat},\r\n          {state:'HimachalPradesh',totalcases:HimachalPradesh},\r\n          {state:'MadhyaPradesh',totalcases:MadhyaPradesh},\r\n          {state:'Bihar',totalcases:Bihar},\r\n          {state:'Manipur',totalcases:Manipur},\r\n          {state:'Mizoram',totalcases:Mizoram},\r\n          {state:'Goa',totalcases:Goa},\r\n          {state:'AndamanandNicobarIslands',totalcases:AndamanandNicobarIslands},\r\n          {state:'Jharkhand',totalcases:Jharkhand},\r\n          {state:'Assam',totalcases:Assam},\r\n          {state:'ArunachalPradesh',totalcases:ArunachalPradesh},\r\n          {state:'DadraandNagarHaveli',totalcases:DadraandNagarHaveli},\r\n          {state:'Tripura',totalcases:Tripura},\r\n          {state:'Nagaland',totalcases:Nagaland},\r\n          {state:'Meghalaya',totalcases:Meghalaya},\r\n        ]\r\n        const topStates = [\r\n          {\r\n          state:'',\r\n          total:0\r\n          }\r\n        ];\r\n        let labels = [];\r\n        let totalcases = [];\r\n        StateArray.map((state) =>{\r\n          labels.push(state.state);\r\n          totalcases.push(state.totalcases);\r\n        })\r\n        var chartlabels = {...this.state.data}\r\n        chartlabels.labels = [...labels]\r\n        chartlabels.datasets[0].data = [...totalcases]\r\n        this.setState({ data : chartlabels})\r\n      })\r\n    }\r\n    render() {\r\n        return (\r\n          <React.Fragment>\r\n          <span className='switch1'>Vertical</span><div className=\"switch\">\r\n            <input id=\"switch-1\" type=\"checkbox\" className=\"switch-input\" onChange={this.handelGraphToggle} />\r\n              <label htmlFor=\"switch-1\" className=\"switch-label\">Switch</label>\r\n              </div><span className='switch2'>Horizontal</span>\r\n              {\r\n                (this.state.isVertical)?\r\n                 <div className=\"BarGraph\">\r\n                {/*  */}\r\n                <Bar\r\n                  data={this.state.data}\r\n                  width={1000}\r\n                  height={300}\r\n                  options={{\r\n                    maintainAspectRatio: false\r\n                  }}\r\n            />\r\n              </div> : <div className=\"BarGraph\"> <HorizontalBar data={this.state.data} /> </div>\r\n              }\r\n        \r\n          </React.Fragment>\r\n        );\r\n      }\r\n}\r\n\r\nexport default StateChart;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport NewReleasesIcon from '@material-ui/icons/NewReleases';\r\nimport NetworkCellIcon from '@material-ui/icons/NetworkCell';\r\nimport SignalCellularAltIcon from '@material-ui/icons/SignalCellularAlt';\r\nimport StateDetails from '../StateDetailsSlider/StateDetails.js';\r\nimport StateChart from '../StateDetailsSlider/StateChart.js';\r\nimport './Tab.css';\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <Typography\r\n      component=\"div\"\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`scrollable-force-tabpanel-${index}`}\r\n      aria-labelledby={`scrollable-force-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && <Box p={3}>{children}</Box>}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `scrollable-force-tab-${index}`,\r\n    'aria-controls': `scrollable-force-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    width: '100%',\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n}));\r\n\r\nexport default function ScrollableTabsButtonForce() {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(0);\r\n  const [ishorizontal, setHorizontal] = React.useState(false);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\" color=\"default\">\r\n        <Tabs\r\n          value={value}\r\n          onChange={handleChange}\r\n          scrollButtons=\"on\"\r\n          indicatorColor=\"primary\"\r\n          textColor=\"primary\"\r\n          centered\r\n          aria-label=\"scrollable force tabs example\"\r\n        >\r\n          <Tab label=\"Demographic\" icon={<NetworkCellIcon />} {...a11yProps(0)} />\r\n          <Tab label=\"Statistical\" icon={<SignalCellularAltIcon />} {...a11yProps(1)} />\r\n          <Tab label=\"Comming Soon...\" icon={<NewReleasesIcon />} {...a11yProps(2)} />\r\n        </Tabs>\r\n      </AppBar>\r\n      <TabPanel value={value} index={0}>\r\n        <StateChart />\r\n      </TabPanel>\r\n      <TabPanel value={value} index={1}>\r\n        <StateDetails />\r\n      </TabPanel>\r\n      <TabPanel value={value} index={2}>\r\n        Comming Soon...\r\n      </TabPanel>\r\n    </div>\r\n  );\r\n}","import React, { useState, useEffect } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport StateDetails from '../StateDetailsSlider/StateDetails.js';\r\nimport CountUp from 'react-countup';\r\nimport Tabs from '../TabPanel/Tabs.js';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  confirm: {\r\n    color: 'rgba(255,7,58,.6)',\r\n    fontFamily: 'archia',\r\n    fontWeight: '900',\r\n    textTransform: 'uppercase',\r\n    fontSize: '12px !important',\r\n  },\r\n  confirmChild1: {\r\n    textAlign: 'center',\r\n    alignItem: 'center',\r\n    justifyContent: 'center',\r\n    marginTop: '.5rem',\r\n    color: 'rgba(255,7,58,.6)',\r\n    fontFamily: 'archia',\r\n    fontWeight: 900,\r\n    fontSize: '12px !important',\r\n    textTransform: 'uppercase'\r\n  },\r\n  confirmChild2: {\r\n    color: '#ff073a',\r\n    fontWeight: '600',\r\n    textAlign: 'center',\r\n    fontFamily: 'archia',\r\n    fontSize: '24px !important',\r\n    fontWeight: '900',\r\n    textTransform: 'uppercase'\r\n\r\n  },\r\n  active: {\r\n    color: 'rgba(0,123,255,.6)',\r\n    fontFamily: 'archia',\r\n    fontWeight: '900',\r\n    textTransform: 'uppercase',\r\n    fontSize: '12px !important',\r\n    [theme.breakpoints.up('xs')]: {\r\n      marginLeft: '20px'\r\n    }\r\n  },\r\n  activeChild1: {\r\n    textAlign: 'center',\r\n    alignItem: 'center',\r\n    justifyContent: 'center',\r\n    marginTop: '.5rem',\r\n    color: '#ffffff',\r\n    fontFamily: 'archia',\r\n    fontWeight: 900,\r\n    fontSize: '12px !important',\r\n    textTransform: 'uppercase'\r\n  },\r\n  activeChild2: {\r\n    color: '#007bff',\r\n    fontWeight: '600',\r\n    textAlign: 'center',\r\n    fontFamily: 'archia',\r\n    fontSize: '24px !important',\r\n    fontWeight: '900',\r\n    textTransform: 'uppercase'\r\n  },\r\n  recovered: {\r\n    color: 'rgba(40,167,69,.6)',\r\n    fontFamily: 'archia',\r\n    fontWeight: '900',\r\n    textTransform: 'uppercase',\r\n    fontSize: '12px !important',\r\n  },\r\n  recoveredChild1: {\r\n    textAlign: 'center',\r\n    alignItem: 'center',\r\n    justifyContent: 'center',\r\n    marginTop: '.5rem',\r\n    color: 'rgba(40,167,69,.6)',\r\n    fontFamily: 'archia',\r\n    fontWeight: 900,\r\n    fontSize: '12px !important',\r\n    textTransform: 'uppercase'\r\n  },\r\n  recoveredChild2: {\r\n    color: '#28a745',\r\n    fontWeight: '600',\r\n    textAlign: 'center',\r\n    fontFamily: 'archia',\r\n    fontSize: '24px !important',\r\n    fontWeight: '900',\r\n    textTransform: 'uppercase'\r\n\r\n  },\r\n  deceased: {\r\n    color: 'rgba(108,117,125,.6)',\r\n    fontFamily: 'archia',\r\n    fontWeight: '900',\r\n    textTransform: 'uppercase',\r\n    fontSize: '12px !important',\r\n  },\r\n  deceasedChild1: {\r\n    textAlign: 'center',\r\n    alignItem: 'center',\r\n    justifyContent: 'center',\r\n    marginTop: '.5rem',\r\n    color: 'rgba(108,117,125,.6)',\r\n    fontFamily: 'archia',\r\n    fontWeight: 900,\r\n    fontSize: '12px !important',\r\n    textTransform: 'uppercase'\r\n  },\r\n  deceasedChild2: {\r\n    color: '#6c757d',\r\n    fontWeight: '600',\r\n    textAlign: 'center',\r\n    fontFamily: 'archia',\r\n    fontSize: '24px !important',\r\n    fontWeight: '900',\r\n    textTransform: 'uppercase'\r\n\r\n  },\r\n  FirstGridRow: {\r\n    marginTop: '40px !important'\r\n  },\r\n  SecondGridRow: {\r\n    marginTop: '40px !important'\r\n  },\r\n  ThirdGridRow: {\r\n    marginTop: '40px !important'\r\n  },\r\n  FourthGridRow: {\r\n    marginTop: '0px',\r\n    [theme.breakpoints.up('xs')]: {\r\n      marginTop: '10px'\r\n    }\r\n  },\r\n  statewisedata:{\r\n      marginRight: '40px',\r\n      textAlign: 'center',\r\n      fontFamily: 'archia !important',\r\n      fontWeight: '900',\r\n      fontSize: '24px !important',\r\n      textTransform: 'uppercase',\r\n      color: '#343a40',\r\n      [theme.breakpoints.up('xs')]: {\r\n          marginTop: '20px'\r\n      }\r\n  },\r\n  statechild:{\r\n    color: 'rgba(108,117,125,.6)',\r\n    fontSize: '12px !important',\r\n    fontFamily: 'archia',\r\n    fontWeight: '900',\r\n    textTransform: 'uppercase',\r\n    marginLeft: '37px'\r\n  },\r\n  statechild2:{\r\n    color: '#4c75f2',\r\n    fontSize: '12px',\r\n    fontFamily: 'archia',\r\n    fontWeight: '900',\r\n    textTransform: 'uppercase',\r\n    marginLeft: '37px',\r\n    [theme.breakpoints.up('xs')]: {\r\n      marginLeft: '0px',\r\n      fontSize:'10px'\r\n  }\r\n  },\r\n  covidsymbol:{\r\n    fontSize: '10px'\r\n  },\r\n  highsysmbol:{\r\n    padding: '0px 6px 0px 6px',\r\n    background: '#FF9999',\r\n    marginRight: '6px'\r\n  },\r\n  avgsysmbol:{\r\n    padding: '0px 6px 0px 6px',\r\n    background: '#FCC88C',\r\n    marginRight: '6px'\r\n  },\r\n  lowsysmbol:{\r\n    padding: '0px 6px 0px 6px',\r\n    background: '#B1DC88',\r\n    marginRight: '6px'\r\n  },\r\n  stateTotal:{\r\n    color: '#46A4D1'\r\n  }\r\n}));\r\n\r\nconst CountryStat = () => {\r\n  const classes = useStyles();\r\n  const [countryStat, setCountryStat] = useState(0);\r\n  const [ConfirmCount, setConfirmCount] = useState(0);\r\n  const [ActivityCount, setActivityCount] = useState(0);\r\n  const [RecoveredCount, setRecoveredCount] = useState(0);\r\n  const [DeceasedCount, setDeceasedCount] = useState(0);\r\n\r\n  useEffect(() => {\r\n    fetch('https://api.covid19india.org/data.json')\r\n      .then(res => res.json())\r\n      .then((stat) =>{\r\n          setCountryStat(stat.statewise[0]);\r\n          setConfirmCount((function () {\r\n            let confirm = parseInt(stat.statewise[0].confirmed);\r\n              return confirm\r\n              // return stat.statewise[0].confirmed.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\r\n          })())\r\n          setActivityCount((function () {\r\n            let active = parseInt(stat.statewise[0].active);\r\n              return active\r\n          })())\r\n          setRecoveredCount((function () {\r\n            let recovered = parseInt(stat.statewise[0].recovered);\r\n              return recovered\r\n          })())\r\n          setDeceasedCount((function () {\r\n            let deaths = parseInt(stat.statewise[0].deaths);\r\n              return deaths\r\n          })())\r\n      })\r\n  }, []);\r\n  return (\r\n    <React.Fragment>\r\n      <Grid container\r\n        justify=\"space-evenly\"\r\n        alignItems=\"center\"\r\n        className={classes.FirstGridRow}\r\n      >\r\n        <Grid item>\r\n          <Typography variant=\"subtitle1\" className={classes.confirm} gutterBottom>\r\n            Confirmed\r\n          </Typography>\r\n          <div>\r\n            <Typography variant=\"subtitle1\" className={classes.confirmChild1} gutterBottom>\r\n              {'[' + '+' + countryStat.deltaconfirmed + ']'}\r\n            </Typography>\r\n          </div>\r\n          <div>\r\n            <Typography variant=\"subtitle1\" className={classes.confirmChild2} gutterBottom>\r\n             <CountUp end={ConfirmCount} duration={3.75} separator=\",\"></CountUp> \r\n            </Typography>\r\n          </div>\r\n        </Grid>\r\n        <Grid item>\r\n          <Typography variant=\"subtitle1\" className={classes.active} gutterBottom>\r\n            Active\r\n                </Typography>\r\n          <div>\r\n            <Typography variant=\"subtitle1\" className={classes.activeChild1} gutterBottom>\r\n              0\r\n                    </Typography>\r\n          </div>\r\n          <div>\r\n            <Typography variant=\"subtitle1\" className={classes.activeChild2} gutterBottom>\r\n              <CountUp end={ActivityCount} duration={3.75} separator=\",\"></CountUp> \r\n            </Typography>\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Grid container\r\n        justify=\"space-evenly\"\r\n        alignItems=\"center\"\r\n        className={classes.SecondGridRow}\r\n      >\r\n        <Grid item>\r\n          <Typography variant=\"subtitle1\" className={classes.recovered} gutterBottom>\r\n            Recovered\r\n                </Typography>\r\n          <div>\r\n            <Typography variant=\"subtitle1\" className={classes.recoveredChild1} gutterBottom>\r\n              {'[' + '+' + countryStat.deltarecovered + ']'}\r\n            </Typography>\r\n          </div>\r\n          <div>\r\n            <Typography variant=\"subtitle1\" className={classes.recoveredChild2} gutterBottom>\r\n              <CountUp end={RecoveredCount} duration={3.75} separator=\",\"></CountUp> \r\n            </Typography>\r\n          </div>\r\n        </Grid>\r\n        <Grid item>\r\n          <Typography variant=\"subtitle1\" className={classes.deceased} gutterBottom>\r\n            Deceased\r\n                </Typography>\r\n          <div>\r\n            <Typography variant=\"subtitle1\" className={classes.deceasedChild1} gutterBottom>\r\n              {'[' + '+' + countryStat.deltadeaths + ']'}\r\n            </Typography>\r\n          </div>\r\n          <div>\r\n            <Typography variant=\"subtitle1\" className={classes.deceasedChild2} gutterBottom>\r\n              <CountUp end={DeceasedCount} duration={3.75} separator=\",\"></CountUp> \r\n            </Typography>\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid container\r\n      className={classes.FourthGridRow}\r\n      >\r\n        <Grid item xs={12} sm={12} md={8} lg={12} xl={12}>  \r\n        <Typography variant=\"subtitle1\" className={classes.statewisedata}  gutterBottom>\r\n            <div>State Wise Data</div>\r\n            <div className={classes.statechild}>COMPILED FROM STATE GOVT. NUMBERS\r\n            <div className={classes.statechild2}>CLICK ON ANY BELOW STATE TO KNOW MORE.</div>\r\n            <div style={{'display':'grid'}}>\r\n            <span style={{'width': '101%'}} className={classes.covidsymbol}><span className={classes.highsysmbol}></span>States above <big  className={classes.stateTotal}>1000</big> covid cases.</span>\r\n            </div>\r\n            <div>\r\n            <span className={classes.covidsymbol}><span className={classes.avgsysmbol}></span>States above <big className={classes.stateTotal}>500</big> covid cases.</span></div>\r\n            <div>\r\n            <span className={classes.covidsymbol}><span className={classes.lowsysmbol}></span>States below <big className={classes.stateTotal}>100</big> covid cases.</span></div>\r\n            </div>\r\n        </Typography>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid container className={classes.ThirdGridRow}>\r\n        <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n          <Tabs />\r\n        </Grid>\r\n      </Grid>\r\n      {/* <Grid container className={classes.ThirdGridRow}>\r\n        <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n          <StateDetails />\r\n        </Grid>\r\n      </Grid> */}\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default CountryStat;","import moment from 'moment';\r\n\r\nconst months = {\r\n  '01': 'Jan',\r\n  '02': 'Feb',\r\n  '03': 'Mar',\r\n  '04': 'Apr',\r\n  '05': 'May',\r\n  '06': 'Jun',\r\n  '07': 'Jul',\r\n  '08': 'Aug',\r\n  '09': 'Sep',\r\n  '10': 'Oct',\r\n  '11': 'Nov',\r\n  '12': 'Dec',\r\n};\r\n\r\nconst stateCodes = {\r\n  AP: 'Andhra Pradesh',\r\n  AR: 'Arunachal Pradesh',\r\n  AS: 'Assam',\r\n  BR: 'Bihar',\r\n  CT: 'Chhattisgarh',\r\n  GA: 'Goa',\r\n  GJ: 'Gujarat',\r\n  HR: 'Haryana',\r\n  HP: 'Himachal Pradesh',\r\n  JH: 'Jharkhand',\r\n  KA: 'Karnataka',\r\n  KL: 'Kerala',\r\n  MP: 'Madhya Pradesh',\r\n  MH: 'Maharashtra',\r\n  MN: 'Manipur',\r\n  ML: 'Meghalaya',\r\n  MZ: 'Mizoram',\r\n  NL: 'Nagaland',\r\n  OR: 'Odisha',\r\n  PB: 'Punjab',\r\n  RJ: 'Rajasthan',\r\n  SK: 'Sikkim',\r\n  TN: 'Tamil Nadu',\r\n  TG: 'Telangana',\r\n  TR: 'Tripura',\r\n  UT: 'Uttarakhand',\r\n  UP: 'Uttar Pradesh',\r\n  WB: 'West Bengal',\r\n  AN: 'Andaman and Nicobar Islands',\r\n  CH: 'Chandigarh',\r\n  DN: 'Dadra and Nagar Haveli',\r\n  DD: 'Daman and Diu',\r\n  DL: 'Delhi',\r\n  JK: 'Jammu and Kashmir',\r\n  LA: 'Ladakh',\r\n  LD: 'Lakshadweep',\r\n  PY: 'Puducherry',\r\n};\r\n\r\nexport const getStateName = (code) => {\r\n  return stateCodes[code.toUpperCase()];\r\n};\r\n\r\nexport const formatDate = (unformattedDate) => {\r\n  const day = unformattedDate.slice(0, 2);\r\n  const month = unformattedDate.slice(3, 5);\r\n  const year = unformattedDate.slice(6, 10);\r\n  const time = unformattedDate.slice(11);\r\n  return `${year}-${month}-${day}T${time}+05:30`;\r\n};\r\n\r\nexport const formatDateAbsolute = (unformattedDate) => {\r\n  const day = unformattedDate.slice(0, 2);\r\n  const month = unformattedDate.slice(3, 5);\r\n  const time = unformattedDate.slice(11);\r\n  return `${day} ${months[month]}, ${time.slice(0, 5)} IST`;\r\n};\r\n\r\nconst validateCTS = (data = []) => {\r\n  const today = new Date();\r\n  today.setHours(0, 0, 0, 0);\r\n  const dataTypes = [\r\n    'dailyconfirmed',\r\n    'dailydeceased',\r\n    'dailyrecovered',\r\n    'totalconfirmed',\r\n    'totaldeceased',\r\n    'totalrecovered',\r\n  ];\r\n  return data\r\n    .filter((d) => dataTypes.every((dt) => d[dt]) && d.date)\r\n    .filter((d) => dataTypes.every((dt) => Number(d[dt]) >= 0))\r\n    .filter((d) => {\r\n      const year = today.getFullYear();\r\n      return new Date(d.date + year) < today;\r\n    });\r\n};\r\n\r\nexport const preprocessTimeseries = (timeseries) => {\r\n  return validateCTS(timeseries).map((stat) => ({\r\n    date: new Date(stat.date + ' 2020'),\r\n    totalconfirmed: +stat.totalconfirmed,\r\n    totalrecovered: +stat.totalrecovered,\r\n    totaldeceased: +stat.totaldeceased,\r\n    dailyconfirmed: +stat.dailyconfirmed,\r\n    dailyrecovered: +stat.dailyrecovered,\r\n    dailydeceased: +stat.dailydeceased,\r\n  }));\r\n};\r\n\r\n/**\r\n * Returns the last `days` entries\r\n * @param {Array<Object>} timeseries\r\n * @param {number} days\r\n *\r\n * @return {Array<Object>}\r\n */\r\nexport function sliceTimeseriesFromEnd(timeseries, days) {\r\n  return timeseries.slice(-days);\r\n}\r\n\r\nexport const formatNumber = (value) => {\r\n  const numberFormatter = new Intl.NumberFormat('en-IN');\r\n  return isNaN(value) ? '-' : numberFormatter.format(value);\r\n};\r\n\r\nexport const parseStateTimeseries = ({states_daily: data}) => {\r\n  const statewiseSeries = Object.keys(stateCodes).reduce((a, c) => {\r\n    a[c] = [];\r\n    return a;\r\n  }, {});\r\n\r\n  const today = moment();\r\n  for (let i = 0; i < data.length; i += 3) {\r\n    const date = moment(data[i].date, 'DD-MMM-YY');\r\n    // Skip data from the current day\r\n    if (date.isBefore(today, 'Date')) {\r\n      Object.entries(statewiseSeries).forEach(([k, v]) => {\r\n        const stateCode = k.toLowerCase();\r\n        const prev = v[v.length - 1] || {};\r\n        v.push({\r\n          date: date.toDate(),\r\n          dailyconfirmed: +data[i][stateCode] || 0,\r\n          dailyrecovered: +data[i + 1][stateCode] || 0,\r\n          dailydeceased: +data[i + 2][stateCode] || 0,\r\n          totalconfirmed: +data[i][stateCode] + (prev.totalconfirmed || 0),\r\n          totalrecovered: +data[i + 1][stateCode] + (prev.totalrecovered || 0),\r\n          totaldeceased: +data[i + 2][stateCode] + (prev.totaldeceased || 0),\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n  return statewiseSeries;\r\n};","import React, {useState, useEffect, useRef, useCallback} from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport CountryStat from '../CountryStats/CountryStat.js';\r\nimport axios from 'axios';\r\nimport {formatDistance, format} from 'date-fns';\r\n\r\nimport {\r\n    formatDate,\r\n    formatDateAbsolute,\r\n  } from '../../utils/commom-functions.js';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    appUpdateDiv:{\r\n        alignItems: 'center',\r\n        justifyContent: 'center'\r\n    },\r\n    appUpdateFont1:{\r\n        fontFamily: 'archia !important',\r\n        fontWeight: '900',\r\n        textTransform: 'uppercase',\r\n        color: '#343a40',\r\n        [theme.breakpoints.up('xs')]: {\r\n            marginTop: '20px'\r\n          }\r\n    },\r\n    appUpdateFont2:{\r\n        fontFamily: 'archia !important',\r\n        fontWeight: '600',\r\n        fontSize: '11px!important',\r\n        textTransform: 'uppercase',\r\n        color: '#6c757d'\r\n    },\r\n    appUpdateFont3:{\r\n        fontFamily: 'archia !important',\r\n        color: 'rgba(40,167,69,.6) !important',\r\n        fontWeight: '900',\r\n        fontSize: '12px !important',\r\n        textTransform: 'uppercase',\r\n        [theme.breakpoints.up('md')]: {\r\n            marginLeft: '81px !important',\r\n            marginTop: '40px !important'\r\n          },\r\n        [theme.breakpoints.up('xs')]: {\r\n            marginTop: '5px',\r\n            marginLeft: '25px'\r\n          }\r\n    },\r\n    appUpdateFont4:{\r\n        fontFamily: 'archia !important',\r\n        color: 'rgb(40, 167, 69)',\r\n        fontWeight: '900',\r\n        fontSize: '14px !important',\r\n        textTransform: 'uppercase',\r\n        fontSize: '11px !important',\r\n        [theme.breakpoints.up('md')]: {\r\n            marginLeft: '74px !important',\r\n          },\r\n        [theme.breakpoints.up('xs')]: {\r\n            marginLeft: '-4px',\r\n            fontSize: '10px',\r\n          }\r\n    },\r\n    appUpdateFont5:{\r\n        fontFamily: 'archia !important',\r\n        color: 'rgb(40, 167, 69)',\r\n        fontWeight: '900',\r\n        textTransform: 'uppercase',\r\n        fontSize: '12px !important',\r\n        [theme.breakpoints.up('md')]: {\r\n            marginLeft: '68px !important'\r\n          },\r\n        [theme.breakpoints.up('xs')]: {\r\n            marginLeft: '10px',\r\n            fontSize: '10px',\r\n          }\r\n    }\r\n}));\r\n\r\nconst ApplastUpdated = () => {\r\n  const [states, setStates] = useState([]);\r\n  const [fetched, setFetched] = useState(false);\r\n  const [lastUpdated, setLastUpdated] = useState('');\r\n\r\n  useEffect(() => {\r\n    if (fetched === false) {\r\n      getStates();\r\n    }\r\n  }, [fetched]);\r\n\r\n  const getStates = async () => {\r\n    try {\r\n      const [\r\n        response,\r\n      ] = await Promise.all([\r\n        axios.get('https://api.covid19india.org/data.json'),\r\n      ]);\r\n      setStates(response.data.statewise);\r\n      setLastUpdated(response.data.statewise[0].lastupdatedtime);\r\n      setFetched(true);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n    const classes = useStyles();\r\n    return ( \r\n        <React.Fragment>\r\n            <Grid container className={classes.appUpdateDiv}>\r\n                <Grid item xs={7} sm={6} md={4} lg={6} xl={6}\r\n                >\r\n                    <Typography variant=\"h5\" className={classes.appUpdateFont1}>\r\n                        India COVID-19 Tracker\r\n                    </Typography>\r\n                    <Typography variant=\"h6\" className={classes.appUpdateFont2}>\r\n                        A Crowdsourced Initiative\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item xs={4} sm={6} md={3} lg={6} xl={6}> \r\n                    <Typography variant=\"h5\" className={classes.appUpdateFont3}>\r\n                        Last Updated\r\n                    </Typography>\r\n                    <Typography variant=\"h6\" className={classes.appUpdateFont4}>\r\n                    {isNaN(Date.parse(formatDate(lastUpdated)))\r\n                    ? ''\r\n                    : formatDistance(\r\n                        new Date(formatDate(lastUpdated)),\r\n                        new Date()\r\n                      ) + ' Ago'}\r\n                    </Typography>\r\n                    <Typography variant=\"h6\" className={classes.appUpdateFont5}>\r\n                    {isNaN(Date.parse(formatDate(lastUpdated)))\r\n                    ? ''\r\n                    : formatDateAbsolute(lastUpdated)}\r\n                    </Typography>\r\n                </Grid>\r\n            </Grid>\r\n            <CountryStat />\r\n        </React.Fragment>\r\n    );\r\n}\r\n \r\nexport default ApplastUpdated;","import React, { useState, useEffect } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ApplastUpdated from '../ApplastUpdated/AppUpdated.js';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    banner_parent:{\r\n        background: 'rgba(32,26,162,.12549)',\r\n        height: 'auto !important',\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    banner: {\r\n        textAlign: 'center',\r\n        margin: theme.spacing(3),\r\n    },\r\n    banner_text:{\r\n        fontFamily: 'archia !important',\r\n        fontSize: '.8rem !important',\r\n        fontWeight: '600',\r\n        color: 'rgba(32,26,162,.866667)'\r\n    }\r\n}));\r\nconst Covidquotes = (props) => {\r\n    const classes = useStyles();\r\n    const [Quotes, setQuotes] = useState('Stay Home, Stay Safe.');\r\n\r\n    useEffect(() =>{\r\n        setInterval(() =>{\r\n            fetch('https://api.covid19india.org/website_data.json')\r\n            .then(res => res.json())\r\n            .then(quotes => {\r\n                let randomNum = Math.abs(Math.floor(Math.random() * (1 - quotes.factoids.length) + 1));\r\n                setQuotes(quotes.factoids[randomNum].banner)})\r\n        },4000)\r\n    },[]);\r\n    const setNewQuote = () =>{\r\n        fetch('https://api.covid19india.org/website_data.json')\r\n            .then(res => res.json())\r\n            .then(quotes => {\r\n            let randomNum = Math.abs(Math.floor(Math.random() * (1 - quotes.factoids.length) + 1));\r\n            setQuotes(quotes.factoids[randomNum].banner)\r\n        })\r\n    }\r\n    return ( \r\n        <React.Fragment>\r\n            <Grid container className={classes.banner_parent} onClick={() => setNewQuote()}>\r\n                <Grid item xs={12} sm={12} md={12} lg={12} xl={12} className={classes.banner}>\r\n                    <Typography className={classes.banner_text}>\r\n                       {Quotes}\r\n                    </Typography>\r\n                </Grid>\r\n            </Grid>\r\n            <ApplastUpdated />\r\n        </React.Fragment>\r\n     );\r\n}\r\n\r\nexport default Covidquotes;","import React, { Component } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport './GlobalStat.css';\r\nimport ReactCountryFlag from \"react-country-flag\";\r\nimport CountUp from 'react-countup';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\n\r\n\r\n\r\nclass GlobalStat extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isModelVisible: false,\r\n            WorldCountries:[],\r\n            WorldCountriesCopy:[]\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        this.getWorldCountryCases()\r\n    }\r\n    componentWillReceiveProps(nextProp) {\r\n        if (nextProp.isCountryModalVisible) {\r\n            this.setState({ isModelVisible: nextProp.isCountryModalVisible })\r\n        } else {\r\n            this.setState({ isModelVisible: nextProp.isCountryModalVisible })\r\n        }\r\n    }\r\n    getWorldCountryCases(){\r\n        fetch('https://corona.lmao.ninja/v2/countries?sort=country')\r\n        .then(res => res.json())\r\n        .then((data) =>{\r\n            this.setState({ WorldCountries: data})\r\n            this.setState({ WorldCountriesCopy: data})\r\n        }).catch((err) =>{\r\n            console.error('Global Countries Records',err)\r\n        })\r\n    }\r\n    handleCountrySearch(e){\r\n        if(e.target.value !== ''){\r\n            let searchedResult = this.state.WorldCountries.filter((item) =>{\r\n                return item.country.toLowerCase().includes(e.target.value.toLowerCase())\r\n            })\r\n            this.setState({ WorldCountries:searchedResult})\r\n        }else{\r\n            this.setState({ WorldCountries:this.state.WorldCountriesCopy})\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <div className={(this.state.isModelVisible) ? 'CountriesModal ShowModal' : 'CountriesModal HideModal'}>\r\n                    <Grid container\r\n                        justify=\"space-evenly\"\r\n                        alignItems=\"center\"\r\n                    >\r\n                            <Paper component=\"form\" className='root'>\r\n                                <InputBase\r\n                                    onChange={this.handleCountrySearch.bind(this)}\r\n                                    className='input'\r\n                                    placeholder=\"Search Countries...\"\r\n                                    inputProps={{ 'aria-label': 'Search Countries...' }}\r\n                                />\r\n                                <IconButton className='iconButton' aria-label=\"search\">\r\n                                    <SearchIcon />\r\n                                </IconButton>\r\n                                <Divider className='divider' orientation=\"vertical\" />\r\n                            </Paper>\r\n                        <Grid item xs={12} md={12}>\r\n                        <TableContainer component={Paper} >\r\n                            <Table className='table' aria-label=\"simple table\">\r\n                                <TableHead>\r\n                                <TableRow xs={12}>\r\n                                    <TableCell style={{'fontFamily': 'archia'}} className='TableHead'>Sr.No</TableCell>\r\n                                    <TableCell style={{'fontFamily': 'archia'}} className='TableHead'>Countries</TableCell>\r\n                                    <TableCell style={{'fontFamily': 'archia'}} className='TableHead'>Name</TableCell>\r\n                                    <TableCell style={{'fontFamily': 'archia'}} className='TableHead countryTodaycases'>TodayCases</TableCell>\r\n                                    <TableCell style={{'fontFamily': 'archia'}} className='TableHead countryTodaydeathth'>TodayDeaths</TableCell>\r\n                                    <TableCell style={{'fontFamily': 'archia'}} className='TableHead countryConfirmed'>Confirmed</TableCell>\r\n                                    <TableCell style={{'fontFamily': 'archia'}} className='TableHead countryActive'>Active</TableCell>\r\n                                    <TableCell style={{'fontFamily': 'archia'}} style={{'fontFamily': 'archia'}}  className='TableHead countryRecovered'>Recovered</TableCell>\r\n                                    <TableCell style={{'fontFamily': 'archia'}} className='TableHead'>Dead</TableCell>\r\n                                </TableRow>\r\n                                </TableHead>\r\n                                <TableBody>\r\n                                {this.state.WorldCountries.map((eachCountry, index) => (\r\n                                    <TableRow key={index}>\r\n                                    <TableCell style={{'fontFamily': 'archia'}} className='countryNames'>{index + 1}</TableCell>\r\n                                    <TableCell component=\"th\" scope=\"row\">\r\n                                    { (!!eachCountry.countryInfo.iso2)?\r\n                                    <ReactCountryFlag\r\n                                        countryCode={eachCountry.countryInfo.iso2 || ''}\r\n                                        svg\r\n                                        style={{\r\n                                            width: '6em',\r\n                                            height: '1.8em',\r\n                                        }}\r\n                                    /> : <span className='Notavailable'>Not Available</span>\r\n                                    } \r\n                                    </TableCell>\r\n                                    <TableCell style={{'fontFamily': 'archia'}} className='countryNames'>{eachCountry.country}</TableCell>\r\n                                    <TableCell style={{'fontFamily': 'archia'}} className='countryTodaycase        textCenter'>{eachCountry.todayCases}</TableCell>\r\n                                    <TableCell style={{'fontFamily': 'archia'}} className='countryTodaydeath textCenter'>{eachCountry.todayDeaths}</TableCell>\r\n                                    <TableCell style={{'fontFamily': 'archia'}} className='confirmed textCenter'><CountUp end={eachCountry.cases} duration={3.75} separator=\",\"></CountUp></TableCell>\r\n                                    <TableCell style={{'fontFamily': 'archia'}} className='active textCenter'><CountUp end={eachCountry.active} duration={3.75} separator=\",\"></CountUp></TableCell>\r\n                                    <TableCell style={{'fontFamily': 'archia'}} className='recovered textCenter'><CountUp end={eachCountry.recovered} duration={3.75} separator=\",\"></CountUp></TableCell>\r\n                                    <TableCell style={{'fontFamily': 'archia'}} className='dead textCenter'><CountUp end={eachCountry.deaths} duration={3.75} separator=\",\"></CountUp></TableCell>\r\n                                    </TableRow>\r\n                                ))}\r\n                                </TableBody>\r\n                            </Table>\r\n                            </TableContainer>\r\n                        </Grid>\r\n                    </Grid>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default GlobalStat;","import React, { Component } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\n\r\n\r\nclass WorldMap extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            isModelVisible: false,\r\n         }\r\n    }\r\n    componentWillReceiveProps(nextProp){\r\n        if (nextProp.isMapModalVisible) {\r\n            this.setState({ isModelVisible: nextProp.isMapModalVisible })\r\n        } else {\r\n            this.setState({ isModelVisible: nextProp.isMapModalVisible })\r\n        }\r\n    }\r\n    render() { \r\n        return ( \r\n            <React.Fragment>\r\n                <div className={(this.state.isModelVisible) ? 'CountriesModal ShowModal' : 'CountriesModal HideModal'}>\r\n                    <Grid container\r\n                    justify=\"space-evenly\"\r\n                    alignItems=\"center\"\r\n                    >\r\n                        <Grid item xs={12} sm={12} md={11} lg={11} xl={11} >\r\n                            <Card variant=\"outlined\">\r\n                                <CardContent>\r\n                                   WorldMap\r\n                                </CardContent>\r\n                            </Card>\r\n                        </Grid>\r\n                    </Grid>\r\n                </div>\r\n            </React.Fragment>\r\n         );\r\n    }\r\n}\r\n \r\nexport default WorldMap;\r\n","import React, { Component } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport './DailyCovidNews.css';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { FixedSizeList } from 'react-window';\r\n\r\nclass DailyCovidNews extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isModelVisible: false,\r\n            DailyCovid19News:[]\r\n          }\r\n    }\r\n    componentDidMount(){\r\n        this.getCovidNews()\r\n    }\r\n    componentWillReceiveProps(nextProp){\r\n        if (nextProp.isNewsModalVisible) {\r\n            this.setState({ isModelVisible: nextProp.isNewsModalVisible })\r\n        } else {\r\n            this.setState({ isModelVisible: nextProp.isNewsModalVisible })\r\n        }\r\n    }\r\n    getCovidNews(){\r\n        var myHeaders = new Headers();\r\n        myHeaders.append(\"Subscription-Key\", \"3009d4ccc29e4808af1ccc25c69b4d5d\");\r\n\r\n        var requestOptions = {\r\n            method: 'GET',\r\n            headers: myHeaders,\r\n            redirect: 'follow'\r\n        };\r\n\r\n        fetch(\"https://api.smartable.ai/coronavirus/news/IN\", requestOptions)\r\n        .then(response => response.json())\r\n        .then((data) =>{\r\n            this.setState({ DailyCovid19News: data.news})\r\n        })\r\n        .catch(error => console.log('error', error));\r\n\r\n    }\r\n    render() { \r\n        return ( \r\n            <React.Fragment>\r\n                <div className={(this.state.isModelVisible) ? 'CountriesModal ShowModal' : 'CountriesModal HideModal'}>\r\n                    <Grid container \r\n                    justify=\"flex-end\"\r\n                    alignItems=\"center\"\r\n                    >\r\n                        <Grid item xs={12} sm={12} md={5} lg={11} xl={11} >\r\n                            <Card variant=\"outlined\" style={{'marginRight': '45px'}}>\r\n                                <CardContent>\r\n                                    <Typography className='cardheading' variant=\"subtitle2\" gutterBottom color=\"textSecondary\">\r\n                                        Daily Covid19 News.\r\n                                    </Typography>\r\n                                    <Divider />\r\n                                    <List className='root Newscard'  >\r\n                                        {(this.state.DailyCovid19News.length > 0)?\r\n                                            this.state.DailyCovid19News.map((News, index) =>(\r\n                                                <span key={index} >\r\n                                                <ListItem key={index} alignItems=\"flex-start\">\r\n                                                    <ListItemAvatar>\r\n                                                        <Avatar alt=\"Remy Sharp\" src=\"https://media1.s-nbcnews.com/j/newscms/2020_16/331…16p_23fe61bb653e3f82510a4d7face3a142.fit-560w.jpg\" />\r\n                                                    </ListItemAvatar>\r\n                                                    <ListItemText className='NewsTitle'\r\n                                                        primary={News.title}\r\n                                                        secondary={\r\n                                                            <React.Fragment>\r\n                                                                <Typography\r\n                                                                    component=\"span\"\r\n                                                                    variant=\"body2\"\r\n                                                                    className='inline'\r\n                                                                    color=\"textPrimary\"\r\n                                                                >\r\n                                                                    Excerpt\r\n                                                                </Typography>\r\n                                                                <span className='MainNews'>{' - '+News.excerpt}</span>\r\n                                                                <span className='NewsSource'>Sourcses -</span>\r\n                                                                <span><a href={News.ampWebUrl}>{(!!News.ampWebUrl)? News.ampWebUrl:'Not available'}</a></span>\r\n                                                            </React.Fragment>\r\n                                                        }\r\n                                                        \r\n                                                    />\r\n                                                </ListItem>\r\n                                                <Divider variant=\"inset\" component=\"li\" />\r\n                                                </span>\r\n                                            )) : <span>New not Available</span>\r\n                                        }\r\n                                    </List>\r\n                                </CardContent>\r\n                            </Card>\r\n                        </Grid>\r\n                    </Grid>\r\n                </div>\r\n            </React.Fragment>\r\n         );\r\n    }\r\n}\r\n \r\nexport default DailyCovidNews;\r\n\r\n\r\n","import React, { useState,useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport MoreIcon from '@material-ui/icons/MoreVert';\r\nimport Covidquotes from '../CovidQuotes/Covidquotes.js';\r\nimport LanguageSharpIcon from '@material-ui/icons/LanguageSharp';\r\nimport GlobalStat from '../../Components/GlobalStats/GlobalStat.js';\r\nimport PublicIcon from '@material-ui/icons/Public';\r\nimport WorldMap from '../../Components/WorldMap/Worldmap.js';\r\nimport DailyCovidNews from '../../Components/IndiaCovidNews/DaliyCovidNews.js';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  navbar:{\r\n    boxShadow: '1px 0px 1px black !important'\r\n  },\r\n  globalstat:{\r\n    marginTop: '12px',\r\n    cursor: 'pointer'\r\n  },\r\n  globalmap:{\r\n    marginTop: '12px',\r\n    cursor: 'pointer',\r\n    marginRight: '14px'\r\n  },\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  title: {\r\n    fontFamily: 'archia !important',\r\n    display: 'block',\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'block',\r\n    },\r\n    color: theme.palette.text.inherit,\r\n  },\r\n  sectionDesktop: {\r\n    display: 'none',\r\n    [theme.breakpoints.up('md')]: {\r\n      display: 'flex',\r\n    },\r\n  },\r\n  sectionMobile: {\r\n    display: 'flex',\r\n    [theme.breakpoints.up('md')]: {\r\n      display: 'none',\r\n    },\r\n  },\r\n}));\r\nconst PrimarySearchAppBar =  () => {\r\n  const classes = useStyles();\r\n  const [NewsCount, setNewsCount] = useState(0);\r\n  const [isCountryModalVisible, setModalVisible] = useState(false);\r\n  const [isMapModalVisible, setMapModalVisible] = useState(false);\r\n  const [isNewsModalVisible, setNewsModalVisible] = useState(false);\r\n\r\n  useEffect(() =>{\r\n    console.log('News covid')\r\n    var myHeaders = new Headers();\r\n    myHeaders.append(\"Subscription-Key\", \"3009d4ccc29e4808af1ccc25c69b4d5d\");\r\n    var requestOptions = {\r\n        method: 'GET',\r\n        headers: myHeaders,\r\n        redirect: 'follow'\r\n    };\r\n    fetch(\"https://api.smartable.ai/coronavirus/news/IN\", requestOptions)\r\n    .then(response => response.json())\r\n    .then((data) =>{\r\n      setNewsCount(data.news.length)\r\n    })\r\n    .catch(error => console.log('error', error));\r\n  },[])\r\n\r\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\r\n\r\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\r\n\r\n  const handleMobileMenuClose = () => {\r\n    setMobileMoreAnchorEl(null);\r\n  };\r\n\r\n  const handleMobileMenuOpen = (event) => {\r\n    setMobileMoreAnchorEl(event.currentTarget);\r\n  };\r\n  const handleMapVisible = () =>{\r\n    if(isMapModalVisible){\r\n      setMapModalVisible(false)\r\n    }else{\r\n      setMapModalVisible(true)\r\n    }\r\n  }\r\n  const handleCountryRecords = () =>{\r\n    if(isCountryModalVisible){\r\n      setModalVisible(false)\r\n    }else{\r\n      setModalVisible(true)\r\n    }\r\n  }\r\n  const handleCovidNews = () =>{\r\n    if(isNewsModalVisible){\r\n      setNewsModalVisible(false)\r\n    }else{\r\n      setNewsModalVisible(true)\r\n    }\r\n  }\r\n  const mobileMenuId = 'primary-search-account-menu-mobile';\r\n  const renderMobileMenu = (\r\n    <Menu\r\n      anchorEl={mobileMoreAnchorEl}\r\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      id={mobileMenuId}\r\n      keepMounted\r\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      open={isMobileMenuOpen}\r\n      onClose={handleMobileMenuClose}\r\n    >\r\n      <MenuItem>\r\n        <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\r\n          <Badge badgeContent={4} color=\"secondary\">\r\n            <MailIcon />\r\n          </Badge>\r\n        </IconButton>\r\n        <p>Messages</p>\r\n      </MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  return (\r\n    <div className={classes.grow}>\r\n      <AppBar position=\"static\" color=\"inherit\" className={classes.navbar}>\r\n        <Toolbar>\r\n          <Typography className={classes.title}  variant=\"h6\" noWrap>\r\n            Covid-19\r\n          </Typography>\r\n          <div className={classes.grow} />\r\n          <div className={classes.sectionDesktop}>\r\n            {/* <div onClick={()=>handleMapVisible()} className={classes.globalmap}  >\r\n              <PublicIcon />\r\n            </div> */}\r\n            <div onClick={()=>handleCountryRecords()} className={classes.globalstat}  >\r\n              <LanguageSharpIcon />\r\n            </div>\r\n            <div onClick={()=>handleCovidNews()}>\r\n              <IconButton aria-label=\"show new notifications\" color=\"inherit\">\r\n                <Badge badgeContent={NewsCount} color=\"secondary\">\r\n                  <NotificationsIcon />\r\n                </Badge>\r\n              </IconButton>\r\n            </div>\r\n          </div>\r\n          <div className={classes.sectionMobile}>\r\n          {/* <div onClick={()=>handleMapVisible()} className={classes.globalmap}>\r\n              <PublicIcon />\r\n            </div> */}\r\n            <div onClick={()=>handleCountryRecords()} className={classes.globalstat}  >\r\n              <LanguageSharpIcon />\r\n            </div>\r\n            <div onClick={()=>handleCovidNews()}>\r\n            <IconButton aria-label=\"show 11 new notifications\" color=\"inherit\">\r\n              <Badge badgeContent={11} color=\"secondary\">\r\n                <NotificationsIcon />\r\n              </Badge>\r\n            </IconButton>\r\n          </div>\r\n            <IconButton\r\n              aria-label=\"show more\"\r\n              aria-controls={mobileMenuId}\r\n              aria-haspopup=\"true\"\r\n              onClick={handleMobileMenuOpen}\r\n              color=\"inherit\"\r\n            >\r\n              <MoreIcon />\r\n            </IconButton>\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <DailyCovidNews isNewsModalVisible={isNewsModalVisible} />\r\n      <WorldMap isMapModalVisible={isMapModalVisible} />\r\n      <GlobalStat isCountryModalVisible={isCountryModalVisible} />\r\n      <Covidquotes />\r\n      {renderMobileMenu}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PrimarySearchAppBar;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\nimport './App.css';\nimport NavBar  from '../src/Components/NavBar/NavBar.js';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <NavBar />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { combineReducers } from 'redux';\r\n\r\nexport default combineReducers({\r\n});","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './Reducers';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(rootReducer, initialState, compose( \r\n    applyMiddleware(...middleware),\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__() || compose\r\n));\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}