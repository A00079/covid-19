{"version":3,"sources":["Components/StateDetailsSlider/StateDetails.js","Components/StateMap/StateMap.js","Components/StateDetailsSlider/StateChart.js","Components/TabPanel/Tabs.js","Components/CountryStats/CountryStat.js","utils/commom-functions.js","Components/ApplastUpdated/AppUpdated.js","Components/CovidQuotes/Covidquotes.js","Components/GlobalStats/GlobalStat.js","Components/WorldMap/Worldmap.js","Components/IndiaCovidNews/DaliyCovidNews.js","Components/NavBar/NavBar.js","App.js","serviceWorker.js","Reducers/index.js","store.js","index.js"],"names":["StateDetails","props","state","dynamicClassname","sliderLog","clearhandleautoslide","StateWiseData","StateTotalCases","this","fetchStatesDetails","fetch","then","res","json","statewisedetails","setState","statesTotalCount","Districts","stateDistCountKerala","stateDistCountDelhi","stateDistCountTelangana","stateDistCountRajasthan","stateDistCountHaryana","UttarPradesh","Ladakh","TamilNadu","JammuandKashmir","Karnataka","Maharashtra","Punjab","AndhraPradesh","Uttarakhand","Odisha","Puducherry","WestBengal","Chandigarh","Gujarat","HimachalPradesh","MadhyaPradesh","Bihar","Manipur","Mizoram","Goa","AndamanandNicobarIslands","Jharkhand","Assam","ArunachalPradesh","DadraandNagarHaveli","Tripura","Nagaland","Meghalaya","push","districtData","i","length","district","confirmed","StateArray","totalcases","topStates","total","map","item","Fragment","Grid","container","justify","alignItems","md","Card","variant","CardContent","style","className","spacing","stateWiseDetails","index","xs","key","Typography","end","duration","separator","Component","INDIA_TOPO_JSON","require","PROJECTION_CONFIG","scale","center","COLOR_RANGE","geographyStyle","default","outline","hover","fill","transition","pressed","App","useState","tooltipContent","setTooltipContent","id","value","data","setData","useEffect","StateMapData","console","log","reduce","max","colorScale","scaleQuantile","domain","d","range","onMouseEnter","geo","current","properties","name","onMouseLeave","projectionConfig","projection","width","height","data-tip","geography","geographies","find","s","rsmKey","StateChart","isVertical","StateData","labels","datasets","label","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","handelGraphToggle","bind","chartlabels","sm","lg","xl","gutterBottom","React","TabPanel","children","other","component","role","hidden","aria-labelledby","Box","p","a11yProps","useStyles","makeStyles","theme","root","flexGrow","palette","background","paper","ScrollableTabsButtonForce","classes","setValue","AppBar","position","color","Tabs","onChange","event","newValue","scrollButtons","indicatorColor","textColor","centered","aria-label","Tab","icon","confirm","fontFamily","fontWeight","textTransform","fontSize","confirmChild1","textAlign","alignItem","justifyContent","marginTop","confirmChild2","active","breakpoints","up","marginLeft","activeChild1","activeChild2","recovered","recoveredChild1","recoveredChild2","deceased","deceasedChild1","deceasedChild2","FirstGridRow","SecondGridRow","ThirdGridRow","FourthGridRow","statewisedata","marginRight","statechild","statechild2","covidsymbol","highsysmbol","padding","avgsysmbol","lowsysmbol","stateTotal","CountryStat","countryStat","setCountryStat","ConfirmCount","setConfirmCount","ActivityCount","setActivityCount","RecoveredCount","setRecoveredCount","DeceasedCount","setDeceasedCount","stat","statewise","parseInt","deaths","deltaconfirmed","deltarecovered","deltadeaths","months","formatDate","unformattedDate","day","slice","month","year","time","appUpdateDiv","appUpdateFont1","appUpdateFont2","appUpdateFont3","appUpdateFont4","appUpdateFont5","ApplastUpdated","setStates","fetched","setFetched","lastUpdated","setLastUpdated","getStates","a","Promise","all","axios","get","response","lastupdatedtime","isNaN","Date","parse","formatDistance","formatDateAbsolute","banner_parent","banner","margin","banner_text","Covidquotes","Quotes","setQuotes","setInterval","quotes","randomNum","Math","abs","floor","random","factoids","onClick","GlobalStat","isModelVisible","WorldCountries","WorldCountriesCopy","getWorldCountryCases","nextProp","isCountryModalVisible","catch","err","error","e","target","searchedResult","filter","country","toLowerCase","includes","Paper","InputBase","handleCountrySearch","placeholder","inputProps","IconButton","Divider","orientation","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","eachCountry","scope","countryInfo","iso2","countryCode","svg","todayCases","todayDeaths","cases","WorldMap","isMapModalVisible","DailyCovidNews","DailyCovid19News","getCovidNews","isNewsModalVisible","myHeaders","Headers","append","method","headers","redirect","news","List","News","ListItem","ListItemAvatar","Avatar","alt","src","ListItemText","primary","title","secondary","excerpt","href","ampWebUrl","navbar","boxShadow","globalstat","cursor","globalmap","grow","display","text","inherit","sectionDesktop","sectionMobile","PrimarySearchAppBar","NewsCount","setNewsCount","setModalVisible","setNewsModalVisible","mobileMoreAnchorEl","setMobileMoreAnchorEl","isMobileMenuOpen","Boolean","handleCountryRecords","handleCovidNews","renderMobileMenu","Menu","anchorEl","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","open","onClose","MenuItem","Badge","badgeContent","Toolbar","noWrap","aria-controls","aria-haspopup","currentTarget","NavBar","window","location","hostname","match","combineReducers","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"u6rCAgQeA,E,kDAnPb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,iBAAiB,WACjBC,UAAU,GACVC,qBAAqB,GACrBC,cAAc,GACdC,gBAAgB,IAPD,E,gEAWjBC,KAAKC,uB,2CAEc,IAAD,OAClBC,MAAM,yDACLC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACJ,EAAKC,SAAS,CAAET,cAAa,eAAOQ,KACpC,IAAME,EAAmB,CACvB,CACEd,MAAO,GACPe,UAAU,KASVC,EAAuB,EACvBC,EAAsB,EACtBC,EAA0B,EAC1BC,EAA0B,EAC1BC,EAAuB,EACvBC,EAAc,EACdC,EAAQ,EACRC,EAAW,EACXC,EAAiB,EACjBC,EAAW,EACXC,EAAa,EACbC,EAAQ,EACRC,EAAe,EACfC,EAAa,EACbC,EAAQ,EACRC,EAAY,EACZC,EAAY,EACZC,EAAY,EACZC,EAAS,EACTC,EAAiB,EACjBC,EAAe,EACfC,EAAO,EACPC,EAAS,EACTC,EAAS,EACTC,EAAK,EACLC,EAA0B,EAC1BC,EAAW,EACXC,EAAO,EACPC,EAAkB,EAClBC,EAAqB,EACrBC,EAAS,EACTC,EAAU,EACVC,EAAW,EAEf,IAAI,IAAIhD,KAASY,EACfE,EAAiBmC,KAAK,CAACjD,MAAMA,EAAMe,UAAUH,EAAiBZ,GAAOkD,eAEvE,IAAI,IAAIC,EAAE,EAAGA,EAAErC,EAAiBsC,OAAQD,IACtC,IAAI,IAAIE,KAAYvC,EAAiBqC,GAAGpC,UACnCD,EAAiBqC,GAAGnD,OAASc,EAAiBqC,GAAGnD,QAChB,UAA7Bc,EAAiBqC,GAAGnD,MACrBgB,GAAwBF,EAAiBqC,GAAGpC,UAAUsC,GAAUC,UAC5B,SAA7BxC,EAAiBqC,GAAGnD,MAC3BiB,GAAuBH,EAAiBqC,GAAGpC,UAAUsC,GAAUC,UAC3B,aAA7BxC,EAAiBqC,GAAGnD,MAC3BkB,GAA2BJ,EAAiBqC,GAAGpC,UAAUsC,GAAUC,UAC/B,aAA7BxC,EAAiBqC,GAAGnD,MAC3BmB,GAA2BL,EAAiBqC,GAAGpC,UAAUsC,GAAUC,UAC/B,WAA7BxC,EAAiBqC,GAAGnD,MAC3BoB,GAAyBN,EAAiBqC,GAAGpC,UAAUsC,GAAUC,UAC7B,iBAA7BxC,EAAiBqC,GAAGnD,MAC3BqB,GAAgBP,EAAiBqC,GAAGpC,UAAUsC,GAAUC,UACpB,UAA7BxC,EAAiBqC,GAAGnD,MAC3BsB,GAAUR,EAAiBqC,GAAGpC,UAAUsC,GAAUC,UACd,cAA7BxC,EAAiBqC,GAAGnD,MAC3BuB,GAAaT,EAAiBqC,GAAGpC,UAAUsC,GAAUC,UACjB,qBAA7BxC,EAAiBqC,GAAGnD,MAC3BwB,GAAmBV,EAAiBqC,GAAGpC,UAAUsC,GAAUC,UACvB,aAA7BxC,EAAiBqC,GAAGnD,MAC3ByB,GAAaX,EAAiBqC,GAAGpC,UAAUsC,GAAUC,UACjB,eAA7BxC,EAAiBqC,GAAGnD,MAC3B0B,GAAeZ,EAAiBqC,GAAGpC,UAAUsC,GAAUC,UACnB,UAA7BxC,EAAiBqC,GAAGnD,MAC3B2B,GAAUb,EAAiBqC,GAAGpC,UAAUsC,GAAUC,UACd,kBAA7BxC,EAAiBqC,GAAGnD,MAC3B4B,GAAiBd,EAAiBqC,GAAGpC,UAAUsC,GAAUC,UACrB,eAA7BxC,EAAiBqC,GAAGnD,MAC3B6B,GAAef,EAAiBqC,GAAGpC,UAAUsC,GAAUC,UACnB,UAA7BxC,EAAiBqC,GAAGnD,MAC3B8B,GAAUhB,EAAiBqC,GAAGpC,UAAUsC,GAAUC,UACd,cAA7BxC,EAAiBqC,GAAGnD,MAC3B+B,GAAcjB,EAAiBqC,GAAGpC,UAAUsC,GAAUC,UAClB,eAA7BxC,EAAiBqC,GAAGnD,MAC3BgC,GAAclB,EAAiBqC,GAAGpC,UAAUsC,GAAUC,UAClB,cAA7BxC,EAAiBqC,GAAGnD,MAC3BiC,GAAcnB,EAAiBqC,GAAGpC,UAAUsC,GAAUC,UAClB,WAA7BxC,EAAiBqC,GAAGnD,MAC3BkC,GAAWpB,EAAiBqC,GAAGpC,UAAUsC,GAAUC,UACf,oBAA7BxC,EAAiBqC,GAAGnD,MAC3BmC,GAAmBrB,EAAiBqC,GAAGpC,UAAUsC,GAAUC,UACvB,kBAA7BxC,EAAiBqC,GAAGnD,MAC3BoC,GAAiBtB,EAAiBqC,GAAGpC,UAAUsC,GAAUC,UACrB,SAA7BxC,EAAiBqC,GAAGnD,MAC3BqC,GAASvB,EAAiBqC,GAAGpC,UAAUsC,GAAUC,UACb,WAA7BxC,EAAiBqC,GAAGnD,MAC3BsC,GAAWxB,EAAiBqC,GAAGpC,UAAUsC,GAAUC,UACf,WAA7BxC,EAAiBqC,GAAGnD,MAC3BuC,GAAWzB,EAAiBqC,GAAGpC,UAAUsC,GAAUC,UACf,OAA7BxC,EAAiBqC,GAAGnD,MAC3BwC,GAAO1B,EAAiBqC,GAAGpC,UAAUsC,GAAUC,UACX,+BAA7BxC,EAAiBqC,GAAGnD,MAC3ByC,GAA4B3B,EAAiBqC,GAAGpC,UAAUsC,GAAUC,UAChC,aAA7BxC,EAAiBqC,GAAGnD,MAC3B0C,GAAa5B,EAAiBqC,GAAGpC,UAAUsC,GAAUC,UACjB,SAA7BxC,EAAiBqC,GAAGnD,MAC3B2C,GAAS7B,EAAiBqC,GAAGpC,UAAUsC,GAAUC,UACb,qBAA7BxC,EAAiBqC,GAAGnD,MAC3B4C,GAAoB9B,EAAiBqC,GAAGpC,UAAUsC,GAAUC,UACxB,0BAA7BxC,EAAiBqC,GAAGnD,MAC3B6C,GAAuB/B,EAAiBqC,GAAGpC,UAAUsC,GAAUC,UAC3B,WAA7BxC,EAAiBqC,GAAGnD,MAC3B8C,GAAWhC,EAAiBqC,GAAGpC,UAAUsC,GAAUC,UACf,YAA7BxC,EAAiBqC,GAAGnD,MAC3B+C,GAAYjC,EAAiBqC,GAAGpC,UAAUsC,GAAUC,UAChB,aAA7BxC,EAAiBqC,GAAGnD,QAC3BgD,GAAalC,EAAiBqC,GAAGpC,UAAUsC,GAAUC,YAM/D,IAAMC,EAAa,CACjB,CAACvD,MAAM,SAASwD,WAAWxC,GAC3B,CAAChB,MAAM,QAAQwD,WAAWvC,GAC1B,CAACjB,MAAM,YAAYwD,WAAWtC,GAC9B,CAAClB,MAAM,YAAYwD,WAAWrC,GAC9B,CAACnB,MAAM,UAAUwD,WAAWpC,GAC5B,CAACpB,MAAM,eAAewD,WAAWnC,GACjC,CAACrB,MAAM,SAASwD,WAAWlC,GAC3B,CAACtB,MAAM,YAAYwD,WAAWjC,GAC9B,CAACvB,MAAM,kBAAkBwD,WAAWhC,GACpC,CAACxB,MAAM,YAAYwD,WAAW/B,GAC9B,CAACzB,MAAM,cAAcwD,WAAW9B,GAChC,CAAC1B,MAAM,SAASwD,WAAW7B,GAC3B,CAAC3B,MAAM,gBAAgBwD,WAAW5B,GAClC,CAAC5B,MAAM,cAAcwD,WAAW3B,GAChC,CAAC7B,MAAM,SAASwD,WAAW1B,GAC3B,CAAC9B,MAAM,aAAawD,WAAWzB,GAC/B,CAAC/B,MAAM,aAAawD,WAAWxB,GAC/B,CAAChC,MAAM,aAAawD,WAAWvB,GAC/B,CAACjC,MAAM,UAAUwD,WAAWtB,GAC5B,CAAClC,MAAM,kBAAkBwD,WAAWrB,GACpC,CAACnC,MAAM,gBAAgBwD,WAAWpB,GAClC,CAACpC,MAAM,QAAQwD,WAAWnB,GAC1B,CAACrC,MAAM,UAAUwD,WAAWlB,GAC5B,CAACtC,MAAM,UAAUwD,WAAWjB,GAC5B,CAACvC,MAAM,MAAMwD,WAAWhB,GACxB,CAACxC,MAAM,2BAA2BwD,WAAWf,GAC7C,CAACzC,MAAM,YAAYwD,WAAWd,GAC9B,CAAC1C,MAAM,QAAQwD,WAAWb,GAC1B,CAAC3C,MAAM,mBAAmBwD,WAAWZ,GACrC,CAAC5C,MAAM,sBAAsBwD,WAAWX,GACxC,CAAC7C,MAAM,UAAUwD,WAAWV,GAC5B,CAAC9C,MAAM,WAAWwD,WAAWT,GAC7B,CAAC/C,MAAM,YAAYwD,WAAWR,IAE1BS,EAAY,CAChB,CACAzD,MAAM,GACN0D,MAAM,IAGR,EAAK7C,SAAS,CAAER,gBAAiBkD,IACjC,EAAKvD,MAAMK,gBAAgBsD,KAAI,SAACC,GAC1BA,EAAKJ,WAAa,KAEpBC,EAAUR,KAAK,CAACjD,MAAM4D,EAAK5D,MAAM0D,MAAME,EAAKJ,qB,+BAOlD,OACE,kBAAC,IAAMK,SAAP,KACE,kBAACC,EAAA,EAAD,CAAMC,WAAS,EACfC,QAAQ,eACRC,WAAW,UAET,kBAACH,EAAA,EAAD,CAAMF,MAAI,EAACM,GAAI,IACb,kBAACC,EAAA,EAAD,CAAMC,QAAQ,YACZ,kBAACC,EAAA,EAAD,KACA,yBAAKC,MAAO,CAAC,QAAU,SAC3B,0BAAMA,MAAO,CAAC,MAAS,QAASC,UAAU,eAAc,0BAAMA,UAAU,gBAAxE,gBAA0G,yBAAMA,UAAU,cAAhB,QAA1G,kBAEF,6BACE,0BAAMA,UAAU,eAAc,0BAAMA,UAAU,eAA9C,gBAA+E,yBAAKA,UAAU,cAAf,OAA/E,kBAEF,6BACE,0BAAMA,UAAU,eAAc,0BAAMA,UAAU,eAA9C,gBAA+E,yBAAKA,UAAU,cAAf,OAA/E,kBAEM,kBAACT,EAAA,EAAD,CAAMC,WAAS,EAAES,QAAS,GAGtBlE,KAAKN,MAAMK,gBAAgBsD,KAAI,SAACc,EAAkBC,GAC9C,OAAO,kBAACZ,EAAA,EAAD,CAAMF,MAAI,EAACe,GAAI,EAAGT,GAAI,EAAGU,IAAKF,GAC3B,kBAACP,EAAA,EAAD,CAAMC,QAAQ,YACZ,kBAACC,EAAA,EAAD,CAAaE,UAAYE,EAAiBjB,WAAa,IAAQ,YAAciB,EAAiBjB,WAAa,IAAM,WAAa,eAC5H,6BACA,kBAACqB,EAAA,EAAD,CAAaN,UAAU,cACpBE,EAAiBzE,QAGpB,6BACA,kBAAC6E,EAAA,EAAD,CAAaN,UAAU,cACvB,kBAAC,IAAD,CAASO,IAAKL,EAAiBjB,WAAYuB,SAAU,KAAMC,UAAU,wB,GAlOhFC,a,qICPrBC,EAAkBC,EAAQ,KAE1BC,EAAoB,CACxBC,MAAO,IACPC,OAAQ,CAAC,QAAS,UAIdC,EAAc,CAClB,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WASIC,GAAiB,CACrBC,QAAS,CACPC,QAAS,QAEXC,MAAO,CACLC,KAAM,OACNC,WAAY,YACZH,QAAS,QAEXI,QAAS,CACPJ,QAAS,SA6JEK,OA9Gf,SAAahG,GAAQ,IAAD,EAC0BiG,mBAAS,IADnC,mBACXC,EADW,KACKC,EADL,OAEMF,mBA5CjB,CACL,CAAEG,GAAI,KAAMnG,MAAO,iBAAkBoG,MAAO,GAC5C,CAAED,GAAI,KAAMnG,MAAO,oBAAqBoG,MAAO,GAC/C,CAAED,GAAI,KAAMnG,MAAO,QAASoG,MAAO,GACnC,CAAED,GAAI,KAAMnG,MAAO,QAASoG,MAAO,GACnC,CAAED,GAAI,KAAMnG,MAAO,eAAgBoG,MAAO,GAC1C,CAAED,GAAI,KAAMnG,MAAO,MAAOoG,MAAO,GACjC,CAAED,GAAI,KAAMnG,MAAO,UAAWoG,MAAO,GACrC,CAAED,GAAI,KAAMnG,MAAO,UAAWoG,MAAO,GACrC,CAAED,GAAI,KAAMnG,MAAO,mBAAoBoG,MAAO,GAC9C,CAAED,GAAI,KAAMnG,MAAO,YAAaoG,MAAO,GACvC,CAAED,GAAI,KAAMnG,MAAO,YAAaoG,MAAO,GACvC,CAAED,GAAI,KAAMnG,MAAO,SAAUoG,MAAO,GACpC,CAAED,GAAI,KAAMnG,MAAO,iBAAkBoG,MAAO,GAC5C,CAAED,GAAI,KAAMnG,MAAO,cAAeoG,MAAO,GACzC,CAAED,GAAI,KAAMnG,MAAO,UAAWoG,MAAO,GACrC,CAAED,GAAI,KAAMnG,MAAO,YAAaoG,MAAO,GACvC,CAAED,GAAI,KAAMnG,MAAO,UAAWoG,MAAO,GACrC,CAAED,GAAI,KAAMnG,MAAO,WAAYoG,MAAO,GACtC,CAAED,GAAI,KAAMnG,MAAO,SAAUoG,MAAO,GACpC,CAAED,GAAI,KAAMnG,MAAO,SAAUoG,MAAO,GACpC,CAAED,GAAI,KAAMnG,MAAO,YAAaoG,MAAO,GACvC,CAAED,GAAI,KAAMnG,MAAO,SAAUoG,MAAO,GACpC,CAAED,GAAI,KAAMnG,MAAO,aAAcoG,MAAO,GACxC,CAAED,GAAI,KAAMnG,MAAO,YAAaoG,MAAO,GACvC,CAAED,GAAI,KAAMnG,MAAO,UAAWoG,MAAO,GACrC,CAAED,GAAI,KAAMnG,MAAO,cAAeoG,MAAO,GACzC,CAAED,GAAI,KAAMnG,MAAO,gBAAiBoG,MAAO,GAC3C,CAAED,GAAI,KAAMnG,MAAO,cAAeoG,MAAO,GACzC,CAAED,GAAI,KAAMnG,MAAO,cAAeoG,MAAO,GACzC,CAAED,GAAI,KAAMnG,MAAO,8BAA+BoG,MAAO,GACzD,CAAED,GAAI,KAAMnG,MAAO,aAAcoG,MAAO,GACxC,CAAED,GAAI,KAAMnG,MAAO,yBAA0BoG,MAAO,GACpD,CAAED,GAAI,KAAMnG,MAAO,gBAAiBoG,MAAO,GAC3C,CAAED,GAAI,KAAMnG,MAAO,QAASoG,MAAO,GACnC,CAAED,GAAI,KAAMnG,MAAO,oBAAqBoG,MAAO,GAC/C,CAAED,GAAI,KAAMnG,MAAO,SAAUoG,MAAO,GACpC,CAAED,GAAI,KAAMnG,MAAO,cAAeoG,MAAO,GACzC,CAAED,GAAI,KAAMnG,MAAO,aAAcoG,MAAO,KAIxB,mBAEXC,EAFW,KAELC,EAFK,KAIlBC,qBAAU,WACN,GAAiC,IAA9BxG,EAAMyG,aAAapD,OAAa,CA0CnCkD,EAxCS,CACL,CAAEH,GAAI,KAAMnG,MAAO,iBAAkBoG,MAAOrG,EAAMyG,aAAa,IAAIhD,YACnE,CAAE2C,GAAI,KAAMnG,MAAO,oBAAqBoG,MAAOrG,EAAMyG,aAAa,IAAIhD,YACtE,CAAE2C,GAAI,KAAMnG,MAAO,QAASoG,MAAOrG,EAAMyG,aAAa,IAAIhD,YAC1D,CAAE2C,GAAI,KAAMnG,MAAO,QAASoG,MAAOrG,EAAMyG,aAAa,IAAIhD,YAC1D,CAAE2C,GAAI,KAAMnG,MAAO,eAAgBoG,MAAOrG,EAAMyG,aAAa,IAAIhD,YACjE,CAAE2C,GAAI,KAAMnG,MAAO,MAAOoG,MAAOrG,EAAMyG,aAAa,IAAIhD,YACxD,CAAE2C,GAAI,KAAMnG,MAAO,UAAWoG,MAAOrG,EAAMyG,aAAa,IAAIhD,YAC5D,CAAE2C,GAAI,KAAMnG,MAAO,UAAWoG,MAAOrG,EAAMyG,aAAa,GAAGhD,YAC3D,CAAE2C,GAAI,KAAMnG,MAAO,mBAAoBoG,MAAOrG,EAAMyG,aAAa,IAAIhD,YACrE,CAAE2C,GAAI,KAAMnG,MAAO,YAAaoG,MAAOrG,EAAMyG,aAAa,IAAIhD,YAC9D,CAAE2C,GAAI,KAAMnG,MAAO,YAAaoG,MAAOrG,EAAMyG,aAAa,GAAGhD,YAC7D,CAAE2C,GAAI,KAAMnG,MAAO,SAAUoG,MAAOrG,EAAMyG,aAAa,GAAGhD,YAC1D,CAAE2C,GAAI,KAAMnG,MAAO,iBAAkBoG,MAAOrG,EAAMyG,aAAa,IAAIhD,YACnE,CAAE2C,GAAI,KAAMnG,MAAO,cAAeoG,MAAOrG,EAAMyG,aAAa,IAAIhD,YAChE,CAAE2C,GAAI,KAAMnG,MAAO,UAAWoG,MAAOrG,EAAMyG,aAAa,IAAIhD,YAC5D,CAAE2C,GAAI,KAAMnG,MAAO,YAAaoG,MAAOrG,EAAMyG,aAAa,IAAIhD,YAC9D,CAAE2C,GAAI,KAAMnG,MAAO,UAAWoG,MAAOrG,EAAMyG,aAAa,IAAIhD,YAC5D,CAAE2C,GAAI,KAAMnG,MAAO,WAAYoG,MAAOrG,EAAMyG,aAAa,IAAIhD,YAC7D,CAAE2C,GAAI,KAAMnG,MAAO,SAAUoG,MAAOrG,EAAMyG,aAAa,IAAIhD,YAAc,GACzE,CAAE2C,GAAI,KAAMnG,MAAO,SAAUoG,MAAOrG,EAAMyG,aAAa,IAAIhD,YAC3D,CAAE2C,GAAI,KAAMnG,MAAO,YAAaoG,MAAOrG,EAAMyG,aAAa,GAAGhD,YAC7D,CAAE2C,GAAI,KAAMnG,MAAO,SAAUoG,MAAO,MACpC,CAAED,GAAI,KAAMnG,MAAO,aAAcoG,MAAOrG,EAAMyG,aAAa,GAAGhD,YAC9D,CAAE2C,GAAI,KAAMnG,MAAO,YAAaoG,MAAOrG,EAAMyG,aAAa,GAAGhD,YAC7D,CAAE2C,GAAI,KAAMnG,MAAO,UAAWoG,MAAOrG,EAAMyG,aAAa,IAAIhD,YAC5D,CAAE2C,GAAI,KAAMnG,MAAO,cAAeoG,MAAOrG,EAAMyG,aAAa,IAAIhD,YAChE,CAAE2C,GAAI,KAAMnG,MAAO,gBAAiBoG,MAAOrG,EAAMyG,aAAa,GAAGhD,YACjE,CAAE2C,GAAI,KAAMnG,MAAO,cAAeoG,MAAOrG,EAAMyG,aAAa,IAAIhD,YAChE,CAAE2C,GAAI,KAAMnG,MAAO,8BAA+BoG,MAAOrG,EAAMyG,aAAa,IAAIhD,YAChF,CAAE2C,GAAI,KAAMnG,MAAO,aAAcoG,MAAOrG,EAAMyG,aAAa,IAAIhD,YAC/D,CAAE2C,GAAI,KAAMnG,MAAO,yBAA0BoG,MAAOrG,EAAMyG,aAAa,IAAIhD,YAC3E,CAAE2C,GAAI,KAAMnG,MAAO,gBAAiBoG,MAAO,MAC3C,CAAED,GAAI,KAAMnG,MAAO,QAASoG,MAAOrG,EAAMyG,aAAa,GAAGhD,YACzD,CAAE2C,GAAI,KAAMnG,MAAO,oBAAqBoG,MAAOrG,EAAMyG,aAAa,GAAGhD,YACrE,CAAE2C,GAAI,KAAMnG,MAAO,SAAUoG,MAAOrG,EAAMyG,aAAa,GAAGhD,YAC1D,CAAE2C,GAAI,KAAMnG,MAAO,cAAeoG,MAAO,MACzC,CAAED,GAAI,KAAMnG,MAAO,aAAcoG,MAAOrG,EAAMyG,aAAa,IAAIhD,mBAKjEiD,QAAQC,IAAI,eAEhB,CAAC3G,IAMIsG,EAAKM,QAAO,SAACC,EAAKhD,GAAN,OAAgBA,EAAKwC,MAAQQ,EAAMhD,EAAKwC,MAAQQ,IAAM,GAJzE,IAOMC,EAAaC,cAChBC,OAAOV,EAAK1C,KAAI,SAAAqD,GAAC,OAAIA,EAAEZ,UACvBa,MAAM1B,GAEH2B,EAAe,SAACC,GAAoC,IAA/BC,EAA8B,uDAApB,CAAEhB,MAAO,MAC5C,OAAO,WACLF,EAAkB,GAAD,OAAIiB,EAAIE,WAAWC,KAAnB,aAA4BF,EAAQhB,UAInDmB,EAAe,WACnBrB,EAAkB,KAOpB,OACE,yBAAK3B,UAAU,+BACb,kBAAC,IAAD,KAAe0B,GACb,kBAAC,gBAAD,CACEuB,iBAAkBpC,EAClBqC,WAAW,cACXC,MAAO,IACPC,OAAQ,IACRC,WAAS,IAET,kBAAC,cAAD,CAAaC,UAAW3C,IACrB,qBAAG4C,YACUnE,KAAI,SAAAwD,GACd,IAAMC,EAAUf,EAAK0B,MAAK,SAAAC,GAAC,OAAIA,EAAE7B,KAAOgB,EAAIhB,MAC5C,OACE,kBAAC,YAAD,CACEvB,IAAKuC,EAAIc,OACTJ,UAAWV,EACXvB,KAAMwB,EAAUP,EAAWO,EAAQhB,OA/JjC,OAgKF9B,MAAOkB,GACP0B,aAAcA,EAAaC,EAAKC,GAChCG,aAAcA,aCqGnBW,G,kDAvRX,WAAYnI,GAAO,IAAD,8BACd,cAAMA,IACDC,MAAQ,CACXmI,YAAY,EACZC,UAAU,GACV/B,KAAO,CACLgC,OAAQ,GACRC,SAAU,CACR,CACEC,MAAO,SACPC,gBAAiB,UACjBC,YAAa,OACbC,YAAa,EACbC,qBAAsB,qBACtBC,iBAAkB,mBAClBvC,KAAM,OAKd,EAAKwC,kBAAoB,EAAKA,kBAAkBC,KAAvB,gBApBX,E,gEAuBhBxI,KAAKC,uB,0CAGuB,GAAzBD,KAAKN,MAAMmI,WACZ7H,KAAKO,SAAS,CAAEsH,YAAY,IACI,GAAzB7H,KAAKN,MAAMmI,YAClB7H,KAAKO,SAAS,CAAEsH,YAAY,M,2CAGX,IAAD,OAClB3H,MAAM,yDACLC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACJ,EAAKC,SAAS,CAAET,cAAa,eAAOQ,KACpC,IAAME,EAAmB,CACvB,CACEd,MAAO,GACPe,UAAU,KASVC,EAAuB,EACvBC,EAAsB,EACtBC,EAA0B,EAC1BC,EAA0B,EAC1BC,EAAuB,EACvBC,EAAc,EACdC,EAAQ,EACRC,EAAW,EACXC,EAAiB,EACjBC,EAAW,EACXC,EAAa,EACbC,EAAQ,EACRC,EAAe,EACfC,EAAa,EACbC,EAAQ,EACRC,EAAY,EACZC,EAAY,EACZC,EAAY,EACZC,EAAS,EACTC,EAAiB,EACjBC,EAAe,EACfC,EAAO,EACPC,EAAS,EACTC,EAAS,EACTC,EAAK,EACLC,EAA0B,EAC1BC,EAAW,EACXC,EAAO,EACPC,EAAkB,EAClBC,EAAqB,EACrBC,EAAS,EACTC,EAAU,EACVC,EAAW,EAEf,IAAI,IAAIhD,KAASY,EACfE,EAAiBmC,KAAK,CAACjD,MAAMA,EAAMe,UAAUH,EAAiBZ,GAAOkD,eAEvE,IAAI,IAAIC,EAAE,EAAGA,EAAErC,EAAiBsC,OAAQD,IACtC,IAAI,IAAIE,KAAYvC,EAAiBqC,GAAGpC,UACnCD,EAAiBqC,GAAGnD,OAASc,EAAiBqC,GAAGnD,QAChB,UAA7Bc,EAAiBqC,GAAGnD,MACrBgB,GAAwBF,EAAiBqC,GAAGpC,UAAUsC,GAAUC,UAC5B,SAA7BxC,EAAiBqC,GAAGnD,MAC3BiB,GAAuBH,EAAiBqC,GAAGpC,UAAUsC,GAAUC,UAC3B,aAA7BxC,EAAiBqC,GAAGnD,MAC3BkB,GAA2BJ,EAAiBqC,GAAGpC,UAAUsC,GAAUC,UAC/B,aAA7BxC,EAAiBqC,GAAGnD,MAC3BmB,GAA2BL,EAAiBqC,GAAGpC,UAAUsC,GAAUC,UAC/B,WAA7BxC,EAAiBqC,GAAGnD,MAC3BoB,GAAyBN,EAAiBqC,GAAGpC,UAAUsC,GAAUC,UAC7B,iBAA7BxC,EAAiBqC,GAAGnD,MAC3BqB,GAAgBP,EAAiBqC,GAAGpC,UAAUsC,GAAUC,UACpB,UAA7BxC,EAAiBqC,GAAGnD,MAC3BsB,GAAUR,EAAiBqC,GAAGpC,UAAUsC,GAAUC,UACd,cAA7BxC,EAAiBqC,GAAGnD,MAC3BuB,GAAaT,EAAiBqC,GAAGpC,UAAUsC,GAAUC,UACjB,qBAA7BxC,EAAiBqC,GAAGnD,MAC3BwB,GAAmBV,EAAiBqC,GAAGpC,UAAUsC,GAAUC,UACvB,aAA7BxC,EAAiBqC,GAAGnD,MAC3ByB,GAAaX,EAAiBqC,GAAGpC,UAAUsC,GAAUC,UACjB,eAA7BxC,EAAiBqC,GAAGnD,MAC3B0B,GAAeZ,EAAiBqC,GAAGpC,UAAUsC,GAAUC,UACnB,UAA7BxC,EAAiBqC,GAAGnD,MAC3B2B,GAAUb,EAAiBqC,GAAGpC,UAAUsC,GAAUC,UACd,kBAA7BxC,EAAiBqC,GAAGnD,MAC3B4B,GAAiBd,EAAiBqC,GAAGpC,UAAUsC,GAAUC,UACrB,eAA7BxC,EAAiBqC,GAAGnD,MAC3B6B,GAAef,EAAiBqC,GAAGpC,UAAUsC,GAAUC,UACnB,UAA7BxC,EAAiBqC,GAAGnD,MAC3B8B,GAAUhB,EAAiBqC,GAAGpC,UAAUsC,GAAUC,UACd,cAA7BxC,EAAiBqC,GAAGnD,MAC3B+B,GAAcjB,EAAiBqC,GAAGpC,UAAUsC,GAAUC,UAClB,eAA7BxC,EAAiBqC,GAAGnD,MAC3BgC,GAAclB,EAAiBqC,GAAGpC,UAAUsC,GAAUC,UAClB,cAA7BxC,EAAiBqC,GAAGnD,MAC3BiC,GAAcnB,EAAiBqC,GAAGpC,UAAUsC,GAAUC,UAClB,WAA7BxC,EAAiBqC,GAAGnD,MAC3BkC,GAAWpB,EAAiBqC,GAAGpC,UAAUsC,GAAUC,UACf,oBAA7BxC,EAAiBqC,GAAGnD,MAC3BmC,GAAmBrB,EAAiBqC,GAAGpC,UAAUsC,GAAUC,UACvB,kBAA7BxC,EAAiBqC,GAAGnD,MAC3BoC,GAAiBtB,EAAiBqC,GAAGpC,UAAUsC,GAAUC,UACrB,SAA7BxC,EAAiBqC,GAAGnD,MAC3BqC,GAASvB,EAAiBqC,GAAGpC,UAAUsC,GAAUC,UACb,WAA7BxC,EAAiBqC,GAAGnD,MAC3BsC,GAAWxB,EAAiBqC,GAAGpC,UAAUsC,GAAUC,UACf,WAA7BxC,EAAiBqC,GAAGnD,MAC3BuC,GAAWzB,EAAiBqC,GAAGpC,UAAUsC,GAAUC,UACf,OAA7BxC,EAAiBqC,GAAGnD,MAC3BwC,GAAO1B,EAAiBqC,GAAGpC,UAAUsC,GAAUC,UACX,+BAA7BxC,EAAiBqC,GAAGnD,MAC3ByC,GAA4B3B,EAAiBqC,GAAGpC,UAAUsC,GAAUC,UAChC,aAA7BxC,EAAiBqC,GAAGnD,MAC3B0C,GAAa5B,EAAiBqC,GAAGpC,UAAUsC,GAAUC,UACjB,SAA7BxC,EAAiBqC,GAAGnD,MAC3B2C,GAAS7B,EAAiBqC,GAAGpC,UAAUsC,GAAUC,UACb,qBAA7BxC,EAAiBqC,GAAGnD,MAC3B4C,GAAoB9B,EAAiBqC,GAAGpC,UAAUsC,GAAUC,UACxB,0BAA7BxC,EAAiBqC,GAAGnD,MAC3B6C,GAAuB/B,EAAiBqC,GAAGpC,UAAUsC,GAAUC,UAC3B,WAA7BxC,EAAiBqC,GAAGnD,MAC3B8C,GAAWhC,EAAiBqC,GAAGpC,UAAUsC,GAAUC,UACf,YAA7BxC,EAAiBqC,GAAGnD,MAC3B+C,GAAYjC,EAAiBqC,GAAGpC,UAAUsC,GAAUC,UAChB,aAA7BxC,EAAiBqC,GAAGnD,QAC3BgD,GAAalC,EAAiBqC,GAAGpC,UAAUsC,GAAUC,YAM/D,IAAMC,EAAa,CACjB,CAACvD,MAAM,SAASwD,WAAWxC,GAC3B,CAAChB,MAAM,QAAQwD,WAAWvC,GAC1B,CAACjB,MAAM,YAAYwD,WAAWtC,GAC9B,CAAClB,MAAM,YAAYwD,WAAWrC,GAC9B,CAACnB,MAAM,UAAUwD,WAAWpC,GAC5B,CAACpB,MAAM,eAAewD,WAAWnC,GACjC,CAACrB,MAAM,SAASwD,WAAWlC,GAC3B,CAACtB,MAAM,YAAYwD,WAAWjC,GAC9B,CAACvB,MAAM,kBAAkBwD,WAAWhC,GACpC,CAACxB,MAAM,YAAYwD,WAAW/B,GAC9B,CAACzB,MAAM,cAAcwD,WAAW9B,GAChC,CAAC1B,MAAM,SAASwD,WAAW7B,GAC3B,CAAC3B,MAAM,gBAAgBwD,WAAW5B,GAClC,CAAC5B,MAAM,cAAcwD,WAAW3B,GAChC,CAAC7B,MAAM,SAASwD,WAAW1B,GAC3B,CAAC9B,MAAM,aAAawD,WAAWzB,GAC/B,CAAC/B,MAAM,aAAawD,WAAWxB,GAC/B,CAAChC,MAAM,aAAawD,WAAWvB,GAC/B,CAACjC,MAAM,UAAUwD,WAAWtB,GAC5B,CAAClC,MAAM,kBAAkBwD,WAAWrB,GACpC,CAACnC,MAAM,gBAAgBwD,WAAWpB,GAClC,CAACpC,MAAM,QAAQwD,WAAWnB,GAC1B,CAACrC,MAAM,UAAUwD,WAAWlB,GAC5B,CAACtC,MAAM,UAAUwD,WAAWjB,GAC5B,CAACvC,MAAM,MAAMwD,WAAWhB,GACxB,CAACxC,MAAM,2BAA2BwD,WAAWf,GAC7C,CAACzC,MAAM,YAAYwD,WAAWd,GAC9B,CAAC1C,MAAM,QAAQwD,WAAWb,GAC1B,CAAC3C,MAAM,mBAAmBwD,WAAWZ,GACrC,CAAC5C,MAAM,sBAAsBwD,WAAWX,GACxC,CAAC7C,MAAM,UAAUwD,WAAWV,GAC5B,CAAC9C,MAAM,WAAWwD,WAAWT,GAC7B,CAAC/C,MAAM,YAAYwD,WAAWR,IAEhC,EAAKnC,SAAS,CAAEuH,UAAW7E,IAC3BkD,QAAQC,IAAI,WAAW,EAAK1G,MAAMoI,WAClC,IAMIC,EAAS,GACT7E,EAAa,GACjBD,EAAWI,KAAI,SAAC3D,GACdqI,EAAOpF,KAAKjD,EAAMA,OAClBwD,EAAWP,KAAKjD,EAAMwD,eAExB,IAAIuF,EAAW,eAAO,EAAK/I,MAAMqG,MACjC0C,EAAYV,OAAZ,UAAyBA,GACzBU,EAAYT,SAAS,GAAGjC,KAAxB,UAAmC7C,GACnC,EAAK3C,SAAS,CAAEwF,KAAO0C,S,+BAIvB,OACE,kBAAC,IAAMlF,SAAP,KACA,kBAACC,EAAA,EAAD,CAAMF,MAAI,EAACe,GAAI,GAAIqE,GAAI,GAAI9E,GAAI,EAAG+E,GAAI,GAAIC,GAAI,IAC1C,kBAACrE,EAAA,EAAD,CAAYT,QAAQ,YAAYG,UAAU,gBAAiB4E,cAAY,GACrE,yBAAK7E,MAAO,CAAC,cAAe,QAA5B,eAIJ,yBAAKC,UAAU,YACb,kBAAC,GAAD,CAASiC,aAAclG,KAAKN,MAAMoI,kB,GAlOvBgB,IAAMnE,W,OCO/B,SAASoE,GAAStJ,GAAQ,IAChBuJ,EAAqCvJ,EAArCuJ,SAAUlD,EAA2BrG,EAA3BqG,MAAO1B,EAAoB3E,EAApB2E,MAAU6E,EADZ,YACsBxJ,EADtB,8BAGvB,OACE,kBAAC8E,EAAA,EAAD,eACE2E,UAAU,MACVC,KAAK,WACLC,OAAQtD,IAAU1B,EAClByB,GAAE,oCAA+BzB,GACjCiF,kBAAA,+BAAyCjF,IACrC6E,GAEHnD,IAAU1B,GAAS,kBAACkF,EAAA,EAAD,CAAKC,EAAG,GAAIP,IAWtC,SAASQ,GAAUpF,GACjB,MAAO,CACLyB,GAAG,wBAAD,OAA0BzB,GAC5B,gBAAgB,6BAAhB,OAA8CA,IAIlD,IAAMqF,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,SAAU,EACVzC,MAAO,OACPc,gBAAiByB,EAAMG,QAAQC,WAAWC,WAI/B,SAASC,KACtB,IAAMC,EAAUT,KADkC,EAExBX,IAAMpD,SAAS,GAFS,mBAE3CI,EAF2C,KAEpCqE,EAFoC,OAGZrB,IAAMpD,UAAS,GAHH,6BASlD,OACE,yBAAKzB,UAAWiG,EAAQN,MACtB,kBAACQ,EAAA,EAAD,CAAQC,SAAS,SAASC,MAAM,WAC9B,kBAACC,EAAA,EAAD,CACEzE,MAAOA,EACP0E,SATa,SAACC,EAAOC,GAC3BP,EAASO,IASHC,cAAc,KACdC,eAAe,UACfC,UAAU,UACVC,UAAQ,EACRC,aAAW,iCAEX,kBAACC,EAAA,EAAD,eAAK/C,MAAM,cAAcgD,KAAM,kBAAC,IAAD,OAAyBzB,GAAU,KAClE,kBAACwB,EAAA,EAAD,eAAK/C,MAAM,cAAcgD,KAAM,kBAAC,IAAD,OAA+BzB,GAAU,KACxE,kBAACwB,EAAA,EAAD,eAAK/C,MAAM,kBAAkBgD,KAAM,kBAAC,IAAD,OAAyBzB,GAAU,OAG1E,kBAACT,GAAD,CAAUjD,MAAOA,EAAO1B,MAAO,GAC7B,kBAAC,GAAD,OAEF,kBAAC2E,GAAD,CAAUjD,MAAOA,EAAO1B,MAAO,GAC7B,kBAAC,EAAD,OAEF,kBAAC2E,GAAD,CAAUjD,MAAOA,EAAO1B,MAAO,GAA/B,oBC5EN,IAAMqF,GAAYC,aAAW,SAACC,GAAD,kBAAY,CACvCC,KAAM,CACJC,SAAU,GAEZqB,QAAS,CACPZ,MAAO,oBACPa,WAAY,SACZC,WAAY,MACZC,cAAe,YACfC,SAAU,mBAEZC,cAAe,CACbC,UAAW,SACXC,UAAW,SACXC,eAAgB,SAChBC,UAAW,QACXrB,MAAO,oBACPa,WAAY,SACZC,WAAY,IACZE,SAAU,kBACVD,cAAe,aAEjBO,eAAa,GACXtB,MAAO,UACPc,WAAY,MACZI,UAAW,SACXL,WAAY,SACZG,SAAU,mBALC,2BAMC,OAND,8BAOI,aAPJ,GAUbO,OAAO,aACLvB,MAAO,qBACPa,WAAY,SACZC,WAAY,MACZC,cAAe,YACfC,SAAU,mBACT3B,EAAMmC,YAAYC,GAAG,MAAQ,CAC5BC,WAAY,SAGhBC,aAAc,CACZT,UAAW,SACXC,UAAW,SACXC,eAAgB,SAChBC,UAAW,QACXrB,MAAO,UACPa,WAAY,SACZC,WAAY,IACZE,SAAU,kBACVD,cAAe,aAEjBa,cAAY,GACV5B,MAAO,UACPc,WAAY,MACZI,UAAW,SACXL,WAAY,SACZG,SAAU,mBALA,2BAME,OANF,8BAOK,aAPL,GASZa,UAAW,CACT7B,MAAO,qBACPa,WAAY,SACZC,WAAY,MACZC,cAAe,YACfC,SAAU,mBAEZc,gBAAiB,CACfZ,UAAW,SACXC,UAAW,SACXC,eAAgB,SAChBC,UAAW,QACXrB,MAAO,qBACPa,WAAY,SACZC,WAAY,IACZE,SAAU,kBACVD,cAAe,aAEjBgB,iBAAe,GACb/B,MAAO,UACPc,WAAY,MACZI,UAAW,SACXL,WAAY,SACZG,SAAU,mBALG,2BAMD,OANC,8BAOE,aAPF,GAUfgB,SAAU,CACRhC,MAAO,uBACPa,WAAY,SACZC,WAAY,MACZC,cAAe,YACfC,SAAU,mBAEZiB,eAAgB,CACdf,UAAW,SACXC,UAAW,SACXC,eAAgB,SAChBC,UAAW,QACXrB,MAAO,uBACPa,WAAY,SACZC,WAAY,IACZE,SAAU,kBACVD,cAAe,aAEjBmB,gBAAc,GACZlC,MAAO,UACPc,WAAY,MACZI,UAAW,SACXL,WAAY,SACZG,SAAU,mBALE,2BAMA,OANA,8BAOG,aAPH,GAUdmB,aAAc,CACZd,UAAW,mBAEbe,cAAe,CACbf,UAAW,mBAEbgB,aAAc,CACZhB,UAAW,mBAEbiB,cAAc,aACZjB,UAAW,OACVhC,EAAMmC,YAAYC,GAAG,MAAQ,CAC5BJ,UAAW,SAGfkB,cAAc,aACVC,YAAa,OACbtB,UAAW,SACXL,WAAY,oBACZC,WAAY,MACZE,SAAU,kBACVD,cAAe,YACff,MAAO,WACNX,EAAMmC,YAAYC,GAAG,MAAQ,CAC1BJ,UAAW,SAGnBoB,WAAW,CACTzC,MAAO,uBACPgB,SAAU,kBACVH,WAAY,SACZC,WAAY,MACZC,cAAe,YACfW,WAAY,QAEdgB,YAAY,aACV1C,MAAO,UACPgB,SAAU,OACVH,WAAY,SACZC,WAAY,MACZC,cAAe,YACfW,WAAY,QACXrC,EAAMmC,YAAYC,GAAG,MAAQ,CAC5BC,WAAY,MACZV,SAAS,SAGb2B,YAAY,CACV3B,SAAU,QAEZ4B,YAAY,CACVC,QAAS,kBACTpD,WAAY,UACZ+C,YAAa,OAEfM,WAAW,CACTD,QAAS,kBACTpD,WAAY,UACZ+C,YAAa,OAEfO,WAAW,CACTF,QAAS,kBACTpD,WAAY,UACZ+C,YAAa,OAEfQ,WAAW,CACThD,MAAO,eAoIIiD,GAhIK,WAClB,IAAMrD,EAAUT,KADQ,EAEc/D,mBAAS,GAFvB,mBAEjB8H,EAFiB,KAEJC,EAFI,OAGgB/H,mBAAS,GAHzB,mBAGjBgI,EAHiB,KAGHC,EAHG,OAIkBjI,mBAAS,GAJ3B,mBAIjBkI,EAJiB,KAIFC,EAJE,OAKoBnI,mBAAS,GAL7B,mBAKjBoI,EALiB,KAKDC,EALC,OAMkBrI,mBAAS,GAN3B,mBAMjBsI,EANiB,KAMFC,EANE,KAgCxB,OAxBAhI,qBAAU,WACR/F,MAAM,0CACHC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAC+N,GACHT,EAAeS,EAAKC,UAAU,IAC9BR,EACgBS,SAASF,EAAKC,UAAU,GAAGnL,YAI3C6K,EACeO,SAASF,EAAKC,UAAU,GAAGtC,SAG1CkC,EACkBK,SAASF,EAAKC,UAAU,GAAGhC,YAG7C8B,EACeG,SAASF,EAAKC,UAAU,GAAGE,cAI/C,IAED,kBAAC,IAAM9K,SAAP,KACE,kBAACC,EAAA,EAAD,CAAMC,WAAS,EACbC,QAAQ,eACRC,WAAW,SACXM,UAAWiG,EAAQuC,cAEnB,kBAACjJ,EAAA,EAAD,CAAMF,MAAI,GACR,kBAACiB,EAAA,EAAD,CAAYT,QAAQ,YAAYG,UAAWiG,EAAQgB,QAASrC,cAAY,GAAxE,aAGA,6BACE,kBAACtE,EAAA,EAAD,CAAYT,QAAQ,YAAYG,UAAWiG,EAAQqB,cAAe1C,cAAY,GAC3E,KAAY2E,EAAYc,eAAiB,MAG9C,6BACE,kBAAC/J,EAAA,EAAD,CAAYT,QAAQ,YAAYG,UAAWiG,EAAQ0B,cAAe/C,cAAY,GAC7E,kBAAC,IAAD,CAASrE,IAAKkJ,EAAcjJ,SAAU,KAAMC,UAAU,SAI3D,kBAAClB,EAAA,EAAD,CAAMF,MAAI,GACR,kBAACiB,EAAA,EAAD,CAAYT,QAAQ,YAAYG,UAAWiG,EAAQ2B,OAAQhD,cAAY,GAAvE,UAGA,6BACE,kBAACtE,EAAA,EAAD,CAAYT,QAAQ,YAAYG,UAAWiG,EAAQ+B,aAAcpD,cAAY,GAA7E,MAIF,6BACE,kBAACtE,EAAA,EAAD,CAAYT,QAAQ,YAAYG,UAAWiG,EAAQgC,aAAcrD,cAAY,GAC3E,kBAAC,IAAD,CAASrE,IAAKoJ,EAAenJ,SAAU,KAAMC,UAAU,UAM/D,kBAAClB,EAAA,EAAD,CAAMC,WAAS,EACbC,QAAQ,eACRC,WAAW,SACXM,UAAWiG,EAAQwC,eAEnB,kBAAClJ,EAAA,EAAD,CAAMF,MAAI,GACR,kBAACiB,EAAA,EAAD,CAAYT,QAAQ,YAAYG,UAAWiG,EAAQiC,UAAWtD,cAAY,GAA1E,aAGA,6BACE,kBAACtE,EAAA,EAAD,CAAYT,QAAQ,YAAYG,UAAWiG,EAAQkC,gBAAiBvD,cAAY,GAC7E,KAAY2E,EAAYe,eAAiB,MAG9C,6BACE,kBAAChK,EAAA,EAAD,CAAYT,QAAQ,YAAYG,UAAWiG,EAAQmC,gBAAiBxD,cAAY,GAC9E,kBAAC,IAAD,CAASrE,IAAKsJ,EAAgBrJ,SAAU,KAAMC,UAAU,SAI9D,kBAAClB,EAAA,EAAD,CAAMF,MAAI,GACR,kBAACiB,EAAA,EAAD,CAAYT,QAAQ,YAAYG,UAAWiG,EAAQoC,SAAUzD,cAAY,GAAzE,YAGA,6BACE,kBAACtE,EAAA,EAAD,CAAYT,QAAQ,YAAYG,UAAWiG,EAAQqC,eAAgB1D,cAAY,GAC5E,KAAY2E,EAAYgB,YAAc,MAG3C,6BACE,kBAACjK,EAAA,EAAD,CAAYT,QAAQ,YAAYG,UAAWiG,EAAQsC,eAAgB3D,cAAY,GAC7E,kBAAC,IAAD,CAASrE,IAAKwJ,EAAevJ,SAAU,KAAMC,UAAU,UAK/D,kBAAClB,EAAA,EAAD,CAAMC,WAAS,EACfQ,UAAWiG,EAAQ0C,eAEjB,kBAACpJ,EAAA,EAAD,CAAMF,MAAI,EAACe,GAAI,GAAIqE,GAAI,GAAI9E,GAAI,EAAG+E,GAAI,GAAIC,GAAI,IAC9C,kBAACrE,EAAA,EAAD,CAAYT,QAAQ,YAAYG,UAAWiG,EAAQ2C,cAAgBhE,cAAY,GAC3E,gDACA,yBAAK5E,UAAWiG,EAAQ6C,YAAxB,wCAMN,kBAACvJ,EAAA,EAAD,CAAMC,WAAS,EAACQ,UAAWiG,EAAQyC,cACjC,kBAACnJ,EAAA,EAAD,CAAMF,MAAI,EAACe,GAAI,GAAIqE,GAAI,GAAI9E,GAAI,GAAI+E,GAAI,GAAIC,GAAI,IAC7C,kBAAC,GAAD,U,+BC5TJ6F,I,MAAS,CACb,KAAM,MACN,KAAM,MACN,KAAM,MACN,KAAM,MACN,KAAM,MACN,KAAM,MACN,KAAM,MACN,KAAM,MACN,KAAM,MACN,GAAM,MACN,GAAM,MACN,GAAM,QA+CKC,GAAa,SAACC,GACzB,IAAMC,EAAMD,EAAgBE,MAAM,EAAG,GAC/BC,EAAQH,EAAgBE,MAAM,EAAG,GACjCE,EAAOJ,EAAgBE,MAAM,EAAG,IAChCG,EAAOL,EAAgBE,MAAM,IACnC,MAAM,GAAN,OAAUE,EAAV,YAAkBD,EAAlB,YAA2BF,EAA3B,YAAkCI,EAAlC,WAqDK,IC1GDvF,GAAYC,aAAW,SAACC,GAAD,gBAAY,CACrCsF,aAAa,CACTtL,WAAY,SACZ+H,eAAgB,UAEpBwD,eAAe,aACX/D,WAAY,oBACZC,WAAY,MACZC,cAAe,YACff,MAAO,WACNX,EAAMmC,YAAYC,GAAG,MAAQ,CAC1BJ,UAAW,SAGnBwD,eAAe,CACXhE,WAAY,oBACZC,WAAY,MACZE,SAAU,iBACVD,cAAe,YACff,MAAO,WAEX8E,gBAAc,GACVjE,WAAY,oBACZb,MAAO,gCACPc,WAAY,MACZE,SAAU,kBACVD,cAAe,aALL,cAMT1B,EAAMmC,YAAYC,GAAG,MAAQ,CAC1BC,WAAY,kBACZL,UAAW,oBARL,cAUThC,EAAMmC,YAAYC,GAAG,MAAQ,CAC1BJ,UAAW,MACXK,WAAY,SAZN,GAedqD,gBAAc,GACVlE,WAAY,oBACZb,MAAO,mBACPc,WAAY,MACZE,SAAU,kBACVD,cAAe,aALL,yBAMA,mBANA,cAOT1B,EAAMmC,YAAYC,GAAG,MAAQ,CAC1BC,WAAY,oBARN,cAUTrC,EAAMmC,YAAYC,GAAG,MAAQ,CAC1BC,WAAY,OACZV,SAAU,SAZJ,GAedgE,gBAAc,GACVnE,WAAY,oBACZb,MAAO,mBACPc,WAAY,MACZC,cAAe,YACfC,SAAU,mBALA,cAMT3B,EAAMmC,YAAYC,GAAG,MAAQ,CAC1BC,WAAY,oBAPN,cASTrC,EAAMmC,YAAYC,GAAG,MAAQ,CAC1BC,WAAY,OACZV,SAAU,SAXJ,OA+EHiE,GA/DQ,WAAO,IAAD,EACC7J,mBAAS,IADV,mBACZ8J,GADY,aAEG9J,oBAAS,GAFZ,mBAEpB+J,EAFoB,KAEXC,EAFW,OAGWhK,mBAAS,IAHpB,mBAGpBiK,EAHoB,KAGPC,EAHO,KAK3B3J,qBAAU,YACQ,IAAZwJ,GACFI,MAED,CAACJ,IAEJ,IAAMI,EAAS,uCAAG,gCAAAC,EAAA,+EAIJC,QAAQC,IAAI,CACpBC,KAAMC,IAAI,4CALE,mCAGZC,EAHY,KAOdX,EAAUW,EAASpK,KAAKoI,WACxByB,EAAeO,EAASpK,KAAKoI,UAAU,GAAGiC,iBAC1CV,GAAW,GATG,kDAWdvJ,QAAQC,IAAR,MAXc,0DAAH,qDAeP8D,EAAUT,KAChB,OACI,kBAAC,IAAMlG,SAAP,KACI,kBAACC,EAAA,EAAD,CAAMC,WAAS,EAACQ,UAAWiG,EAAQ+E,cAC/B,kBAACzL,EAAA,EAAD,CAAMF,MAAI,EAACe,GAAI,EAAGqE,GAAI,EAAG9E,GAAI,EAAG+E,GAAI,EAAGC,GAAI,GAEvC,kBAACrE,EAAA,EAAD,CAAYT,QAAQ,KAAKG,UAAWiG,EAAQgF,gBAA5C,0BAGA,kBAAC3K,EAAA,EAAD,CAAYT,QAAQ,KAAKG,UAAWiG,EAAQiF,gBAA5C,8BAIJ,kBAAC3L,EAAA,EAAD,CAAMF,MAAI,EAACe,GAAI,EAAGqE,GAAI,EAAG9E,GAAI,EAAG+E,GAAI,EAAGC,GAAI,GACvC,kBAACrE,EAAA,EAAD,CAAYT,QAAQ,KAAKG,UAAWiG,EAAQkF,gBAA5C,gBAGA,kBAAC7K,EAAA,EAAD,CAAYT,QAAQ,KAAKG,UAAWiG,EAAQmF,gBAC3CgB,MAAMC,KAAKC,MAAM7B,GAAWiB,KAC3B,GACAa,aACE,IAAIF,KAAK5B,GAAWiB,IACpB,IAAIW,MACF,QAEN,kBAAC/L,EAAA,EAAD,CAAYT,QAAQ,KAAKG,UAAWiG,EAAQoF,gBAC3Ce,MAAMC,KAAKC,MAAM7B,GAAWiB,KAC3B,GDhEY,SAAChB,GACjC,IAAMC,EAAMD,EAAgBE,MAAM,EAAG,GAC/BC,EAAQH,EAAgBE,MAAM,EAAG,GACjCG,EAAOL,EAAgBE,MAAM,IACnC,MAAM,GAAN,OAAUD,EAAV,YAAiBH,GAAOK,GAAxB,aAAmCE,EAAKH,MAAM,EAAG,GAAjD,QC6DoB4B,CAAmBd,MAI7B,kBAAC,GAAD,QCpINlG,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrC+G,cAAc,CACV3G,WAAY,yBACZ1C,OAAQ,kBACRsE,UAAWhC,EAAMzF,QAAQ,IAE7ByM,OAAQ,CACJnF,UAAW,SACXoF,OAAQjH,EAAMzF,QAAQ,IAE1B2M,YAAY,CACR1F,WAAY,oBACZG,SAAU,mBACVF,WAAY,MACZd,MAAO,+BAsCAwG,GAnCK,SAACrR,GACjB,IAAMyK,EAAUT,KADW,EAEC/D,mBAAS,yBAFV,mBAEpBqL,EAFoB,KAEZC,EAFY,KAI3B/K,qBAAU,WACNgL,aAAY,WACR/Q,MAAM,kDACLC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAA+Q,GACF,IAAIC,EAAYC,KAAKC,IAAID,KAAKE,MAAMF,KAAKG,UAAY,EAAIL,EAAOM,SAAS1O,QAAU,IACnFkO,EAAUE,EAAOM,SAASL,GAAWR,aAC3C,OACJ,IASF,OACI,kBAAC,IAAMpN,SAAP,KACI,kBAACC,EAAA,EAAD,CAAMC,WAAS,EAACQ,UAAWiG,EAAQwG,cAAee,QAAS,WAT/DvR,MAAM,kDACDC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAA+Q,GACN,IAAIC,EAAYC,KAAKC,IAAID,KAAKE,MAAMF,KAAKG,UAAY,EAAIL,EAAOM,SAAS1O,QAAU,IACnFkO,EAAUE,EAAOM,SAASL,GAAWR,aAMjC,kBAACnN,EAAA,EAAD,CAAMF,MAAI,EAACe,GAAI,GAAIqE,GAAI,GAAI9E,GAAI,GAAI+E,GAAI,GAAIC,GAAI,GAAI3E,UAAWiG,EAAQyG,QAClE,kBAACpM,EAAA,EAAD,CAAYN,UAAWiG,EAAQ2G,aAC3BE,KAIZ,kBAAC,GAAD,Q,uJC+EGW,G,kDA9GX,WAAYjS,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTiS,gBAAgB,EAChBC,eAAe,GACfC,mBAAmB,IALR,E,gEASf7R,KAAK8R,yB,gDAEiBC,GAClBA,EAASC,sBACThS,KAAKO,SAAS,CAAEoR,eAAgBI,EAASC,0B,6CAK1B,IAAD,OAClB9R,MAAM,uDACLC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAC4F,GACH,EAAKxF,SAAS,CAAEqR,eAAgB7L,IAChC,EAAKxF,SAAS,CAAEsR,mBAAoB9L,OACrCkM,OAAM,SAACC,GACN/L,QAAQgM,MAAM,2BAA2BD,Q,0CAG7BE,GAChB,GAAsB,KAAnBA,EAAEC,OAAOvM,MAAa,CACrB,IAAIwM,EAAiBtS,KAAKN,MAAMkS,eAAeW,QAAO,SAACjP,GACnD,OAAOA,EAAKkP,QAAQC,cAAcC,SAASN,EAAEC,OAAOvM,MAAM2M,kBAE9DzS,KAAKO,SAAS,CAAEqR,eAAeU,SAE/BtS,KAAKO,SAAS,CAAEqR,eAAe5R,KAAKN,MAAMmS,uB,+BAGxC,IAAD,EACL,OACI,kBAAC,IAAMtO,SAAP,KACI,yBAAKU,UAAYjE,KAAKN,MAAMiS,eAAkB,2BAA6B,4BACvE,kBAACnO,EAAA,EAAD,CAAMC,WAAS,EACXC,QAAQ,eACRC,WAAW,UAEP,kBAACgP,GAAA,EAAD,CAAOzJ,UAAU,OAAOjF,UAAU,QAC9B,kBAAC2O,GAAA,EAAD,CACIpI,SAAUxK,KAAK6S,oBAAoBrK,KAAKxI,MACxCiE,UAAU,QACV6O,YAAY,sBACZC,WAAY,CAAE,aAAc,yBAEhC,kBAACC,EAAA,EAAD,CAAY/O,UAAU,aAAa8G,aAAW,UAC1C,kBAAC,KAAD,OAEJ,kBAACkI,GAAA,EAAD,CAAShP,UAAU,UAAUiP,YAAY,cAEjD,kBAAC1P,EAAA,EAAD,CAAMF,MAAI,EAACe,GAAI,GAAIT,GAAI,IACvB,kBAACuP,GAAA,EAAD,CAAgBjK,UAAWyJ,MACvB,kBAACS,GAAA,EAAD,CAAOnP,UAAU,QAAQ8G,aAAW,gBAChC,kBAACsI,GAAA,EAAD,KACA,kBAACC,GAAA,EAAD,CAAUjP,GAAI,IACV,kBAACkP,GAAA,EAAD,CAAWvP,MAAO,CAAC,WAAc,UAAWC,UAAU,aAAtD,SACA,kBAACsP,GAAA,EAAD,CAAWvP,MAAO,CAAC,WAAc,UAAWC,UAAU,aAAtD,aACA,kBAACsP,GAAA,EAAD,CAAWvP,MAAO,CAAC,WAAc,UAAWC,UAAU,aAAtD,QACA,kBAACsP,GAAA,EAAD,CAAWvP,MAAO,CAAC,WAAc,UAAWC,UAAU,+BAAtD,cACA,kBAACsP,GAAA,EAAD,CAAWvP,MAAO,CAAC,WAAc,UAAWC,UAAU,iCAAtD,eACA,kBAACsP,GAAA,EAAD,CAAWvP,MAAO,CAAC,WAAc,UAAWC,UAAU,8BAAtD,aACA,kBAACsP,GAAA,EAAD,CAAWvP,MAAO,CAAC,WAAc,UAAWC,UAAU,2BAAtD,UACA,kBAACsP,GAAA,GAAD,GAAWvP,MAAO,CAAC,WAAc,WAAjC,sBAAmD,CAAC,WAAc,WAAlE,0BAAwF,8BAAxF,gBACA,kBAACuP,GAAA,EAAD,CAAWvP,MAAO,CAAC,WAAc,UAAWC,UAAU,aAAtD,UAGJ,kBAACuP,GAAA,EAAD,KACCxT,KAAKN,MAAMkS,eAAevO,KAAI,SAACoQ,EAAarP,GAAd,OAC3B,kBAACkP,GAAA,EAAD,CAAUhP,IAAKF,GACf,kBAACmP,GAAA,EAAD,CAAWvP,MAAO,CAAC,WAAc,UAAWC,UAAU,gBAAgBG,EAAQ,GAC9E,kBAACmP,GAAA,EAAD,CAAWrK,UAAU,KAAKwK,MAAM,OAC3BD,EAAYE,YAAYC,KAC7B,kBAAC,KAAD,CACIC,YAAaJ,EAAYE,YAAYC,MAAQ,GAC7CE,KAAG,EACH9P,MAAO,CACHoD,MAAO,MACPC,OAAQ,WAEX,0BAAMpD,UAAU,gBAAhB,kBAGL,kBAACsP,GAAA,EAAD,CAAWvP,MAAO,CAAC,WAAc,UAAWC,UAAU,gBAAgBwP,EAAYjB,SAClF,kBAACe,GAAA,EAAD,CAAWvP,MAAO,CAAC,WAAc,UAAWC,UAAU,sCAAsCwP,EAAYM,YACxG,kBAACR,GAAA,EAAD,CAAWvP,MAAO,CAAC,WAAc,UAAWC,UAAU,gCAAgCwP,EAAYO,aAClG,kBAACT,GAAA,EAAD,CAAWvP,MAAO,CAAC,WAAc,UAAWC,UAAU,wBAAuB,kBAAC,IAAD,CAASO,IAAKiP,EAAYQ,MAAOxP,SAAU,KAAMC,UAAU,OACxI,kBAAC6O,GAAA,EAAD,CAAWvP,MAAO,CAAC,WAAc,UAAWC,UAAU,qBAAoB,kBAAC,IAAD,CAASO,IAAKiP,EAAY5H,OAAQpH,SAAU,KAAMC,UAAU,OACtI,kBAAC6O,GAAA,EAAD,CAAWvP,MAAO,CAAC,WAAc,UAAWC,UAAU,wBAAuB,kBAAC,IAAD,CAASO,IAAKiP,EAAYtH,UAAW1H,SAAU,KAAMC,UAAU,OAC5I,kBAAC6O,GAAA,EAAD,CAAWvP,MAAO,CAAC,WAAc,UAAWC,UAAU,mBAAkB,kBAAC,IAAD,CAASO,IAAKiP,EAAYpF,OAAQ5J,SAAU,KAAMC,UAAU,sB,GAjG/IC,aCqBVuP,G,kDAnCX,WAAYzU,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTiS,gBAAgB,GAHL,E,sEAMOI,GAClBA,EAASoC,kBACTnU,KAAKO,SAAS,CAAEoR,eAAgBI,EAASoC,sB,+BAM7C,OACI,kBAAC,IAAM5Q,SAAP,KACI,yBAAKU,UAAYjE,KAAKN,MAAMiS,eAAkB,2BAA6B,4BACvE,kBAACnO,EAAA,EAAD,CAAMC,WAAS,EACfC,QAAQ,eACRC,WAAW,UAEP,kBAACH,EAAA,EAAD,CAAMF,MAAI,EAACe,GAAI,GAAIqE,GAAI,GAAI9E,GAAI,GAAI+E,GAAI,GAAIC,GAAI,IAC3C,kBAAC/E,EAAA,EAAD,CAAMC,QAAQ,YACV,kBAACC,EAAA,EAAD,0B,GAxBTY,a,2DCsGRyP,I,yDA7FX,WAAY3U,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTiS,gBAAgB,EAChB0C,iBAAiB,IAJN,E,gEAQfrU,KAAKsU,iB,gDAEiBvC,GAClBA,EAASwC,mBACTvU,KAAKO,SAAS,CAAEoR,eAAgBI,EAASwC,uB,qCAKlC,IAAD,OACNC,EAAY,IAAIC,QACpBD,EAAUE,OAAO,mBAAoB,oCAQrCxU,MAAM,+CANe,CACjByU,OAAQ,MACRC,QAASJ,EACTK,SAAU,WAIb1U,MAAK,SAAAgQ,GAAQ,OAAIA,EAAS9P,UAC1BF,MAAK,SAAC4F,GACH,EAAKxF,SAAS,CAAE8T,iBAAkBtO,EAAK+O,UAE1C7C,OAAM,SAAAE,GAAK,OAAIhM,QAAQC,IAAI,QAAS+L,Q,+BAIrC,OACI,kBAAC,IAAM5O,SAAP,KACI,yBAAKU,UAAYjE,KAAKN,MAAMiS,eAAkB,2BAA6B,4BACvE,kBAACnO,EAAA,EAAD,CAAMC,WAAS,EACfC,QAAQ,WACRC,WAAW,UAEP,kBAACH,EAAA,EAAD,CAAMF,MAAI,EAACe,GAAI,GAAIqE,GAAI,GAAI9E,GAAI,EAAG+E,GAAI,GAAIC,GAAI,IAC1C,kBAAC/E,EAAA,EAAD,CAAMC,QAAQ,WAAWE,MAAO,CAAC,YAAe,SAC5C,kBAACD,EAAA,EAAD,KACI,kBAACQ,EAAA,EAAD,CAAYN,UAAU,cAAcH,QAAQ,YAAY+E,cAAY,EAACyB,MAAM,iBAA3E,uBAGA,kBAAC2I,GAAA,EAAD,MACA,kBAAC8B,GAAA,EAAD,CAAM9Q,UAAU,iBACVjE,KAAKN,MAAM2U,iBAAiBvR,OAAS,EACnC9C,KAAKN,MAAM2U,iBAAiBhR,KAAI,SAAC2R,EAAM5Q,GAAP,OAC5B,0BAAME,IAAKF,GACX,kBAAC6Q,GAAA,EAAD,CAAU3Q,IAAKF,EAAOT,WAAW,cAC7B,kBAACuR,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAQC,IAAI,aAAaC,IAAI,+GAEjC,kBAACC,GAAA,EAAD,CAAcrR,UAAU,YACpBsR,QAASP,EAAKQ,MACdC,UACI,kBAAC,IAAMlS,SAAP,KACI,kBAACgB,EAAA,EAAD,CACI2E,UAAU,OACVpF,QAAQ,QACRG,UAAU,SACVqG,MAAM,eAJV,WAQA,0BAAMrG,UAAU,YAAY,MAAM+Q,EAAKU,SACvC,0BAAMzR,UAAU,cAAhB,cACA,8BAAM,uBAAG0R,KAAMX,EAAKY,WAAeZ,EAAKY,UAAYZ,EAAKY,UAAU,sBAMnF,kBAAC3C,GAAA,EAAD,CAASnP,QAAQ,QAAQoF,UAAU,WAElC,8D,GAjFpBvE,cCKvB8E,GAAYC,aAAW,SAACC,GAAD,YAAY,CACvCkM,OAAO,CACLC,UAAW,gCAEbC,WAAW,CACTpK,UAAW,OACXqK,OAAQ,WAEVC,UAAU,CACRtK,UAAW,OACXqK,OAAQ,UACRlJ,YAAa,QAEfoJ,KAAM,CACJrM,SAAU,GAEZ2L,OAAK,GACHrK,WAAY,oBACZgL,QAAS,SAFN,cAGFxM,EAAMmC,YAAYC,GAAG,MAAQ,CAC5BoK,QAAS,UAJR,sBAMIxM,EAAMG,QAAQsM,KAAKC,SANvB,GAQLC,eAAe,aACbH,QAAS,QACRxM,EAAMmC,YAAYC,GAAG,MAAQ,CAC5BoK,QAAS,SAGbI,cAAc,aACZJ,QAAS,QACRxM,EAAMmC,YAAYC,GAAG,MAAQ,CAC5BoK,QAAS,aA4IAK,GAxIc,WAC3B,IAAMtM,EAAUT,KADiB,EAEC/D,mBAAS,GAFV,mBAE1B+Q,EAF0B,KAEfC,EAFe,OAGgBhR,oBAAS,GAHzB,mBAG1BsM,EAH0B,KAGH2E,EAHG,OAIejR,oBAAS,GAJxB,mBAI1ByO,EAJ0B,aAKiBzO,oBAAS,IAL1B,mBAK1B6O,EAL0B,KAKNqC,EALM,KAOjC3Q,qBAAU,WACRE,QAAQC,IAAI,cACZ,IAAIoO,EAAY,IAAIC,QACpBD,EAAUE,OAAO,mBAAoB,oCAMrCxU,MAAM,+CALe,CACjByU,OAAQ,MACRC,QAASJ,EACTK,SAAU,WAGb1U,MAAK,SAAAgQ,GAAQ,OAAIA,EAAS9P,UAC1BF,MAAK,SAAC4F,GACL2Q,EAAa3Q,EAAK+O,KAAKhS,WAExBmP,OAAM,SAAAE,GAAK,OAAIhM,QAAQC,IAAI,QAAS+L,QACrC,IAtB+B,MAwBmBrJ,IAAMpD,SAAS,MAxBlC,mBAwB1BmR,EAxB0B,KAwBNC,EAxBM,KA0B3BC,EAAmBC,QAAQH,GAgB3BI,EAAuB,WAEzBN,GADC3E,IAMCkF,EAAkB,WAEpBN,GADCrC,IAOC4C,EACJ,kBAACC,EAAA,EAAD,CACEC,SAAUR,EACVS,aAAc,CAAEC,SAAU,MAAOC,WAAY,SAC7C3R,GALiB,qCAMjB4R,aAAW,EACXC,gBAAiB,CAAEH,SAAU,MAAOC,WAAY,SAChDG,KAAMZ,EACNa,QArC0B,WAC5Bd,EAAsB,QAsCpB,kBAACe,EAAA,EAAD,KACE,kBAAC7E,EAAA,EAAD,CAAYjI,aAAW,mBAAmBT,MAAM,WAC9C,kBAACwN,EAAA,EAAD,CAAOC,aAAc,EAAGzN,MAAM,aAC5B,kBAAC,IAAD,QAGJ,yCAKN,OACE,yBAAKrG,UAAWiG,EAAQgM,MACtB,kBAAC9L,EAAA,EAAD,CAAQC,SAAS,SAASC,MAAM,UAAUrG,UAAWiG,EAAQ2L,QAC3D,kBAACmC,EAAA,EAAD,KACE,kBAACzT,EAAA,EAAD,CAAYN,UAAWiG,EAAQsL,MAAQ1R,QAAQ,KAAKmU,QAAM,GAA1D,YAGA,yBAAKhU,UAAWiG,EAAQgM,OACxB,yBAAKjS,UAAWiG,EAAQoM,gBAItB,yBAAK7E,QAAS,kBAAIwF,KAAwBhT,UAAWiG,EAAQ6L,YAC3D,kBAAC,KAAD,OAEF,yBAAKtE,QAAS,kBAAIyF,MAChB,kBAAClE,EAAA,EAAD,CAAYjI,aAAW,yBAAyBT,MAAM,WACpD,kBAACwN,EAAA,EAAD,CAAOC,aAActB,EAAWnM,MAAM,aACpC,kBAAC,IAAD,UAKR,yBAAKrG,UAAWiG,EAAQqM,eAItB,yBAAK9E,QAAS,kBAAIwF,KAAwBhT,UAAWiG,EAAQ6L,YAC3D,kBAAC,KAAD,OAEF,yBAAKtE,QAAS,kBAAIyF,MAClB,kBAAClE,EAAA,EAAD,CAAYjI,aAAW,4BAA4BT,MAAM,WACvD,kBAACwN,EAAA,EAAD,CAAOC,aAAc,GAAIzN,MAAM,aAC7B,kBAAC,IAAD,SAIJ,kBAAC0I,EAAA,EAAD,CACEjI,aAAW,YACXmN,gBA7DS,qCA8DTC,gBAAc,OACd1G,QAvFiB,SAAChH,GAC5BqM,EAAsBrM,EAAM2N,gBAuFlB9N,MAAM,WAEN,kBAAC,IAAD,UAKR,kBAAC,GAAD,CAAgBiK,mBAAoBA,IACpC,kBAAC,GAAD,CAAUJ,kBAAmBA,IAC7B,kBAAC,GAAD,CAAYnC,sBAAuBA,IACnC,kBAAC,GAAD,MACCmF,IC9KQ1R,OARf,WACE,OACE,yBAAKxB,UAAU,OACb,kBAACoU,GAAD,QCIcrB,QACW,cAA7BsB,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,iCChBSC,gBAAgB,ICIzBC,GAAa,CAACC,MAOLC,GALDC,aAAYC,GAJL,GAIgCC,aACjDC,KAAe,WAAf,EAAmBN,IACnBL,OAAOY,sCAAwCZ,OAAOY,wCAA0CF,OCFpGG,IAASC,OACP,kBAAC,KAAD,CAAUP,MAAOA,IACjB,kBAAC,IAAMQ,WAAP,KACE,kBAAC,GAAD,QAGFC,SAASC,eAAe,SHqHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBvZ,MAAK,SAAAwZ,GACJA,EAAaC,gBAEd3H,OAAM,SAAAE,GACLhM,QAAQgM,MAAMA,EAAM0H,c","file":"static/js/main.94f94a5b.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './StateDetails.css';\r\nimport $ from 'jquery';\r\nimport Card from '@material-ui/core/Card';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport _ from 'lodash';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CountUp from 'react-countup';\r\n\r\n\r\nclass StateDetails extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      dynamicClassname:'extraCls',\r\n      sliderLog:'',\r\n      clearhandleautoslide:'',\r\n      StateWiseData:[],\r\n      StateTotalCases:[]\r\n    }\r\n  }\r\n  componentDidMount(){\r\n    this.fetchStatesDetails();\r\n  }\r\n  fetchStatesDetails(){\r\n    fetch('https://api.covid19india.org/state_district_wise.json')\r\n    .then(res => res.json())\r\n    .then(statewisedetails =>{ \r\n      this.setState({ StateWiseData : {...statewisedetails} })\r\n      const statesTotalCount = [\r\n        {\r\n          state: '',\r\n          Districts:{}\r\n        }\r\n      ];\r\n      const stateTotalCases = [\r\n        {\r\n          state:'',\r\n          TotalCases:0\r\n        }\r\n      ]\r\n      let stateDistCountKerala = 0;\r\n      let stateDistCountDelhi = 0;\r\n      let stateDistCountTelangana = 0;\r\n      let stateDistCountRajasthan = 0;\r\n      let stateDistCountHaryana =0;\r\n      let UttarPradesh =0;\r\n      let Ladakh =0;\r\n      let TamilNadu =0;\r\n      let JammuandKashmir =0;\r\n      let Karnataka =0;\r\n      let Maharashtra =0;\r\n      let Punjab =0;\r\n      let AndhraPradesh =0;\r\n      let Uttarakhand =0;\r\n      let Odisha =0;\r\n      let Puducherry =0;\r\n      let WestBengal =0;\r\n      let Chandigarh =0;\r\n      let Gujarat =0;\r\n      let HimachalPradesh =0;\r\n      let MadhyaPradesh =0;\r\n      let Bihar =0;\r\n      let Manipur =0;\r\n      let Mizoram =0;\r\n      let Goa =0;\r\n      let AndamanandNicobarIslands =0;\r\n      let Jharkhand =0;\r\n      let Assam =0;\r\n      let ArunachalPradesh =0;\r\n      let DadraandNagarHaveli =0;\r\n      let Tripura =0;\r\n      let Nagaland =0;\r\n      let Meghalaya =0;\r\n\r\n      for(let state in statewisedetails){\r\n        statesTotalCount.push({state:state,Districts:statewisedetails[state].districtData})\r\n      }\r\n      for(let i=1; i<statesTotalCount.length; i++){\r\n        for(let district in statesTotalCount[i].Districts){\r\n          if(statesTotalCount[i].state == statesTotalCount[i].state){\r\n              if(statesTotalCount[i].state == 'Kerala'){\r\n                stateDistCountKerala += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'Delhi'){\r\n                stateDistCountDelhi += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'Telangana'){\r\n                stateDistCountTelangana += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'Rajasthan'){\r\n                stateDistCountRajasthan += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'Haryana'){\r\n                stateDistCountHaryana += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'Uttar Pradesh'){\r\n                UttarPradesh += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'Ladakh'){\r\n                Ladakh += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'Tamil Nadu'){\r\n                TamilNadu += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'Jammu and Kashmir'){\r\n                JammuandKashmir += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'Karnataka'){\r\n                Karnataka += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'Maharashtra'){\r\n                Maharashtra += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'Punjab'){\r\n                Punjab += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'Andhra Pradesh'){\r\n                AndhraPradesh += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'Uttarakhand'){\r\n                Uttarakhand += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'Odisha'){\r\n                Odisha += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'Puducherry'){\r\n                Puducherry += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'West Bengal'){\r\n                WestBengal += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'Chandigarh'){\r\n                Chandigarh += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'Gujarat'){\r\n                Gujarat += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'Himachal Pradesh'){\r\n                HimachalPradesh += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'Madhya Pradesh'){\r\n                MadhyaPradesh += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'Bihar'){\r\n                Bihar += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'Manipur'){\r\n                Manipur += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'Mizoram'){\r\n                Mizoram += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'Goa'){\r\n                Goa += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'Andaman and Nicobar Islands'){\r\n                AndamanandNicobarIslands += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'Jharkhand'){\r\n                Jharkhand += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'Assam'){\r\n                Assam += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'Arunachal Pradesh'){\r\n                ArunachalPradesh += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'Dadra and Nagar Haveli'){\r\n                DadraandNagarHaveli += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'Tripura'){\r\n                Tripura += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'Nagaland'){\r\n                Nagaland += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'Meghalaya'){\r\n                Meghalaya += statesTotalCount[i].Districts[district].confirmed\r\n              }\r\n          }\r\n        }\r\n      }\r\n\r\n      const StateArray = [\r\n        {state:'Kerala',totalcases:stateDistCountKerala},\r\n        {state:'Delhi',totalcases:stateDistCountDelhi},\r\n        {state:'Telangana',totalcases:stateDistCountTelangana},\r\n        {state:'Rajasthan',totalcases:stateDistCountRajasthan},\r\n        {state:'Haryana',totalcases:stateDistCountHaryana},\r\n        {state:'UttarPradesh',totalcases:UttarPradesh},\r\n        {state:'Ladakh',totalcases:Ladakh},\r\n        {state:'TamilNadu',totalcases:TamilNadu},\r\n        {state:'JammuandKashmir',totalcases:JammuandKashmir},\r\n        {state:'Karnataka',totalcases:Karnataka},\r\n        {state:'Maharashtra',totalcases:Maharashtra},\r\n        {state:'Punjab',totalcases:Punjab},\r\n        {state:'AndhraPradesh',totalcases:AndhraPradesh},\r\n        {state:'Uttarakhand',totalcases:Uttarakhand},\r\n        {state:'Odisha',totalcases:Odisha},\r\n        {state:'Puducherry',totalcases:Puducherry},\r\n        {state:'WestBengal',totalcases:WestBengal},\r\n        {state:'Chandigarh',totalcases:Chandigarh},\r\n        {state:'Gujarat',totalcases:Gujarat},\r\n        {state:'HimachalPradesh',totalcases:HimachalPradesh},\r\n        {state:'MadhyaPradesh',totalcases:MadhyaPradesh},\r\n        {state:'Bihar',totalcases:Bihar},\r\n        {state:'Manipur',totalcases:Manipur},\r\n        {state:'Mizoram',totalcases:Mizoram},\r\n        {state:'Goa',totalcases:Goa},\r\n        {state:'AndamanandNicobarIslands',totalcases:AndamanandNicobarIslands},\r\n        {state:'Jharkhand',totalcases:Jharkhand},\r\n        {state:'Assam',totalcases:Assam},\r\n        {state:'ArunachalPradesh',totalcases:ArunachalPradesh},\r\n        {state:'DadraandNagarHaveli',totalcases:DadraandNagarHaveli},\r\n        {state:'Tripura',totalcases:Tripura},\r\n        {state:'Nagaland',totalcases:Nagaland},\r\n        {state:'Meghalaya',totalcases:Meghalaya},\r\n      ]\r\n      const topStates = [\r\n        {\r\n        state:'',\r\n        total:0\r\n        }\r\n      ];\r\n      this.setState({ StateTotalCases: StateArray})\r\n      this.state.StateTotalCases.map((item) =>{\r\n         if(item.totalcases > 1000)\r\n         {\r\n          topStates.push({state:item.state,total:item.totalcases})\r\n         }\r\n      })\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Grid container\r\n        justify=\"space-evenly\"\r\n        alignItems=\"center\"\r\n        >\r\n          <Grid item md={11}>\r\n            <Card variant=\"outlined\">\r\n              <CardContent>\r\n              <div style={{'display':'grid'}}>\r\n          <span style={{'width': '101%'}} className='covidsymbol'><span className='highsysmbol'></span>States above <big  className='stateTotal'>1000</big> covid cases.</span>\r\n        </div>\r\n        <div>\r\n          <span className='covidsymbol'><span className='avgsysmbol'></span>States above <big className='stateTotal'>500</big> covid cases.</span>\r\n        </div>\r\n        <div>\r\n          <span className='covidsymbol'><span className='lowsysmbol'></span>States below <big className='stateTotal'>100</big> covid cases.</span>\r\n        </div>\r\n                <Grid container  spacing={2}>\r\n\r\n                  {\r\n                    this.state.StateTotalCases.map((stateWiseDetails, index) =>{\r\n                        return <Grid item xs={6} md={2} key={index}>\r\n                                  <Card variant=\"outlined\">\r\n                                    <CardContent className={(stateWiseDetails.totalcases > 1000 )? 'highCases': (stateWiseDetails.totalcases < 100)? 'safeZone' : 'avrageCases'}>\r\n                                      <div>\r\n                                      <Typography  className='stateCards'>\r\n                                        {stateWiseDetails.state}\r\n                                      </Typography>\r\n                                      </div>\r\n                                      <div>\r\n                                      <Typography  className='statetotal'>\r\n                                      <CountUp end={stateWiseDetails.totalcases} duration={3.75} separator=\",\"></CountUp> \r\n                                      </Typography>\r\n                                      </div>\r\n                                    </CardContent>\r\n                                  </Card>\r\n                                </Grid>\r\n                    })\r\n                  }\r\n                </Grid>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default StateDetails;","import React, { useState,useEffect } from 'react';\r\nimport { ComposableMap, Geographies, Geography } from 'react-simple-maps';\r\nimport { scaleQuantile } from 'd3-scale';\r\nimport ReactTooltip from 'react-tooltip';\r\n\r\nconst INDIA_TOPO_JSON = require('./india.topo.json');\r\n\r\nconst PROJECTION_CONFIG = {\r\n  scale: 350,\r\n  center: [78.9629, 22.5937] \r\n};\r\n\r\n// Red Variants\r\nconst COLOR_RANGE = [\r\n  '#ffedea',\r\n  '#ffcec5',\r\n  '#ffad9f',\r\n  '#ff8a75',\r\n  '#ff5533',\r\n  '#e2492d',\r\n  '#be3d26',\r\n  '#9a311f',\r\n  '#782618'\r\n];\r\n\r\nconst DEFAULT_COLOR = '#EEE';\r\n\r\nconst getRandomInt = () => {\r\n  return parseInt(Math.random() * 100);\r\n};\r\n\r\nconst geographyStyle = {\r\n  default: {\r\n    outline: 'none'\r\n  },\r\n  hover: {\r\n    fill: '#ccc',\r\n    transition: 'all 250ms',\r\n    outline: 'none'\r\n  },\r\n  pressed: {\r\n    outline: 'none'\r\n  }\r\n};\r\n\r\nconst getHeatMapData = () => {\r\n  return [\r\n    { id: 'AP', state: 'Andhra Pradesh', value: 0 },\r\n    { id: 'AR', state: 'Arunachal Pradesh', value: 0 },\r\n    { id: 'AS', state: 'Assam', value: 0 },\r\n    { id: 'BR', state: 'Bihar', value: 0 },\r\n    { id: 'CT', state: 'Chhattisgarh', value: 0 },\r\n    { id: 'GA', state: 'Goa', value: 0 },\r\n    { id: 'GJ', state: 'Gujarat', value: 0 },\r\n    { id: 'HR', state: 'Haryana', value: 0 },\r\n    { id: 'HP', state: 'Himachal Pradesh', value: 0 },\r\n    { id: 'JH', state: 'Jharkhand', value: 0 },\r\n    { id: 'KA', state: 'Karnataka', value: 0 },\r\n    { id: 'KL', state: 'Kerala', value: 0 },\r\n    { id: 'MP', state: 'Madhya Pradesh', value: 0 },\r\n    { id: 'MH', state: 'Maharashtra', value: 0 },\r\n    { id: 'MN', state: 'Manipur', value: 0 },\r\n    { id: 'ML', state: 'Meghalaya', value: 0 },\r\n    { id: 'MZ', state: 'Mizoram', value: 0 },\r\n    { id: 'NL', state: 'Nagaland', value: 0 },\r\n    { id: 'OR', state: 'Odisha', value: 0 },\r\n    { id: 'PB', state: 'Punjab', value: 0 },\r\n    { id: 'RJ', state: 'Rajasthan', value: 0 },\r\n    { id: 'SK', state: 'Sikkim', value: 0 },\r\n    { id: 'TN', state: 'Tamil Nadu', value: 0 },\r\n    { id: 'TG', state: 'Telangana', value: 0 },\r\n    { id: 'TR', state: 'Tripura', value: 0 },\r\n    { id: 'UT', state: 'Uttarakhand', value: 0 },\r\n    { id: 'UP', state: 'Uttar Pradesh', value: 0 },\r\n    { id: 'WB', state: 'West Bengal', value: 0 },\r\n    { id: 'WB', state: 'West Bengal', value: 0 },\r\n    { id: 'AN', state: 'Andaman and Nicobar Islands', value: 0 },\r\n    { id: 'CH', state: 'Chandigarh', value: 0 },\r\n    { id: 'DN', state: 'Dadra and Nagar Haveli', value: 0 },\r\n    { id: 'DD', state: 'Daman and Diu', value: 0 },\r\n    { id: 'DL', state: 'Delhi', value: 0 },\r\n    { id: 'JK', state: 'Jammu and Kashmir', value: 0 },\r\n    { id: 'LA', state: 'Ladakh', value: 0 },\r\n    { id: 'LD', state: 'Lakshadweep', value: 0 },\r\n    { id: 'PY', state: 'Puducherry', value: 0 }\r\n  ];\r\n};\r\n\r\nfunction App(props) {\r\n  const [tooltipContent, setTooltipContent] = useState('');\r\n  const [data, setData] = useState(getHeatMapData());\r\n\r\n  useEffect(()=>{\r\n      if(props.StateMapData.length !== 0){\r\n    const getHeatMapData2 = () => {\r\n        return [\r\n          { id: 'AP', state: 'Andhra Pradesh', value: props.StateMapData[12].totalcases },\r\n          { id: 'AR', state: 'Arunachal Pradesh', value: props.StateMapData[28].totalcases },\r\n          { id: 'AS', state: 'Assam', value: props.StateMapData[27].totalcases },\r\n          { id: 'BR', state: 'Bihar', value: props.StateMapData[21].totalcases },\r\n          { id: 'CT', state: 'Chhattisgarh', value: props.StateMapData[17].totalcases },\r\n          { id: 'GA', state: 'Goa', value: props.StateMapData[24].totalcases },\r\n          { id: 'GJ', state: 'Gujarat', value: props.StateMapData[18].totalcases },\r\n          { id: 'HR', state: 'Haryana', value: props.StateMapData[4].totalcases },\r\n          { id: 'HP', state: 'Himachal Pradesh', value: props.StateMapData[19].totalcases },\r\n          { id: 'JH', state: 'Jharkhand', value: props.StateMapData[26].totalcases },\r\n          { id: 'KA', state: 'Karnataka', value: props.StateMapData[9].totalcases },\r\n          { id: 'KL', state: 'Kerala', value: props.StateMapData[0].totalcases },\r\n          { id: 'MP', state: 'Madhya Pradesh', value: props.StateMapData[20].totalcases },\r\n          { id: 'MH', state: 'Maharashtra', value: props.StateMapData[10].totalcases },\r\n          { id: 'MN', state: 'Manipur', value: props.StateMapData[22].totalcases },\r\n          { id: 'ML', state: 'Meghalaya', value: props.StateMapData[32].totalcases },\r\n          { id: 'MZ', state: 'Mizoram', value: props.StateMapData[23].totalcases },\r\n          { id: 'NL', state: 'Nagaland', value: props.StateMapData[31].totalcases },\r\n          { id: 'OR', state: 'Odisha', value: props.StateMapData[14].totalcases || 0 },\r\n          { id: 'PB', state: 'Punjab', value: props.StateMapData[11].totalcases },\r\n          { id: 'RJ', state: 'Rajasthan', value: props.StateMapData[3].totalcases },\r\n          { id: 'SK', state: 'Sikkim', value: 'NA' },\r\n          { id: 'TN', state: 'Tamil Nadu', value: props.StateMapData[7].totalcases },\r\n          { id: 'TG', state: 'Telangana', value: props.StateMapData[2].totalcases },\r\n          { id: 'TR', state: 'Tripura', value: props.StateMapData[30].totalcases },\r\n          { id: 'UT', state: 'Uttarakhand', value: props.StateMapData[13].totalcases },\r\n          { id: 'UP', state: 'Uttar Pradesh', value: props.StateMapData[5].totalcases },\r\n          { id: 'WB', state: 'West Bengal', value: props.StateMapData[16].totalcases },\r\n          { id: 'AN', state: 'Andaman and Nicobar Islands', value: props.StateMapData[25].totalcases },\r\n          { id: 'CH', state: 'Chandigarh', value: props.StateMapData[17].totalcases },\r\n          { id: 'DN', state: 'Dadra and Nagar Haveli', value: props.StateMapData[29].totalcases },\r\n          { id: 'DD', state: 'Daman and Diu', value: 'NA' },\r\n          { id: 'DL', state: 'Delhi', value: props.StateMapData[1].totalcases },\r\n          { id: 'JK', state: 'Jammu and Kashmir', value: props.StateMapData[8].totalcases },\r\n          { id: 'LA', state: 'Ladakh', value: props.StateMapData[6].totalcases },\r\n          { id: 'LD', state: 'Lakshadweep', value: \"NA\" },\r\n          { id: 'PY', state: 'Puducherry', value: props.StateMapData[15].totalcases }\r\n        ]\r\n      }\r\n      setData(getHeatMapData2());\r\n    }else{\r\n        console.log('undefined')\r\n    }\r\n  },[props]);\r\n\r\n  const gradientData = {\r\n    fromColor: COLOR_RANGE[0],\r\n    toColor: COLOR_RANGE[COLOR_RANGE.length - 1],\r\n    min: 0,\r\n    max: data.reduce((max, item) => (item.value > max ? item.value : max), 0)\r\n  };\r\n\r\n  const colorScale = scaleQuantile()\r\n    .domain(data.map(d => d.value))\r\n    .range(COLOR_RANGE);\r\n\r\n  const onMouseEnter = (geo, current = { value: 'NA' }) => {\r\n    return () => {\r\n      setTooltipContent(`${geo.properties.name}: ${current.value}`);\r\n    };\r\n  };\r\n\r\n  const onMouseLeave = () => {\r\n    setTooltipContent('');\r\n  };\r\n\r\n  const onChangeButtonClick = () => {\r\n    setData(getHeatMapData());\r\n  };\r\n\r\n  return (\r\n    <div className=\"full-width-height container\">\r\n      <ReactTooltip>{tooltipContent}</ReactTooltip>\r\n        <ComposableMap\r\n          projectionConfig={PROJECTION_CONFIG}\r\n          projection=\"geoMercator\"\r\n          width={250}\r\n          height={190}\r\n          data-tip=\"\"\r\n        >\r\n          <Geographies geography={INDIA_TOPO_JSON}>\r\n            {({ geographies }) =>\r\n              geographies.map(geo => {\r\n                const current = data.find(s => s.id === geo.id);\r\n                return (\r\n                  <Geography\r\n                    key={geo.rsmKey}\r\n                    geography={geo}\r\n                    fill={current ? colorScale(current.value) : DEFAULT_COLOR}\r\n                    style={geographyStyle}\r\n                    onMouseEnter={onMouseEnter(geo, current)}\r\n                    onMouseLeave={onMouseLeave}\r\n                  />\r\n                );\r\n              })\r\n            }\r\n          </Geographies>\r\n        </ComposableMap>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport './StateDetails.css';\r\nimport { HorizontalBar,Bar } from 'react-chartjs-2';\r\nimport StatMap from '../StateMap/StateMap.js';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\n\r\nclass StateChart extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n          isVertical: true,\r\n          StateData:[],\r\n          data : {\r\n            labels: [],\r\n            datasets: [\r\n              {\r\n                label: 'States',\r\n                backgroundColor: '#FF4141',\r\n                borderColor: 'none',\r\n                borderWidth: 1,\r\n                hoverBackgroundColor: 'rgba(255,9,12,0.4)',\r\n                hoverBorderColor: 'rgba(255,9,12,1)',\r\n                data: []\r\n              }\r\n            ]\r\n          }\r\n        }\r\n        this.handelGraphToggle = this.handelGraphToggle.bind(this);\r\n    }\r\n    componentDidMount(){\r\n      this.fetchStatesDetails();\r\n    }\r\n    handelGraphToggle(){\r\n      if(this.state.isVertical == true){\r\n        this.setState({ isVertical: false })\r\n      }else if(this.state.isVertical == false){\r\n        this.setState({ isVertical: true })\r\n      }\r\n    }\r\n    fetchStatesDetails(){\r\n      fetch('https://api.covid19india.org/state_district_wise.json')\r\n      .then(res => res.json())\r\n      .then(statewisedetails =>{ \r\n        this.setState({ StateWiseData : {...statewisedetails} })\r\n        const statesTotalCount = [\r\n          {\r\n            state: '',\r\n            Districts:{}\r\n          }\r\n        ];\r\n        const stateTotalCases = [\r\n          {\r\n            state:'',\r\n            TotalCases:0\r\n          }\r\n        ]\r\n        let stateDistCountKerala = 0;\r\n        let stateDistCountDelhi = 0;\r\n        let stateDistCountTelangana = 0;\r\n        let stateDistCountRajasthan = 0;\r\n        let stateDistCountHaryana =0;\r\n        let UttarPradesh =0;\r\n        let Ladakh =0;\r\n        let TamilNadu =0;\r\n        let JammuandKashmir =0;\r\n        let Karnataka =0;\r\n        let Maharashtra =0;\r\n        let Punjab =0;\r\n        let AndhraPradesh =0;\r\n        let Uttarakhand =0;\r\n        let Odisha =0;\r\n        let Puducherry =0;\r\n        let WestBengal =0;\r\n        let Chandigarh =0;\r\n        let Gujarat =0;\r\n        let HimachalPradesh =0;\r\n        let MadhyaPradesh =0;\r\n        let Bihar =0;\r\n        let Manipur =0;\r\n        let Mizoram =0;\r\n        let Goa =0;\r\n        let AndamanandNicobarIslands =0;\r\n        let Jharkhand =0;\r\n        let Assam =0;\r\n        let ArunachalPradesh =0;\r\n        let DadraandNagarHaveli =0;\r\n        let Tripura =0;\r\n        let Nagaland =0;\r\n        let Meghalaya =0;\r\n  \r\n        for(let state in statewisedetails){\r\n          statesTotalCount.push({state:state,Districts:statewisedetails[state].districtData})\r\n        }\r\n        for(let i=1; i<statesTotalCount.length; i++){\r\n          for(let district in statesTotalCount[i].Districts){\r\n            if(statesTotalCount[i].state == statesTotalCount[i].state){\r\n                if(statesTotalCount[i].state == 'Kerala'){\r\n                  stateDistCountKerala += statesTotalCount[i].Districts[district].confirmed\r\n                }else if(statesTotalCount[i].state == 'Delhi'){\r\n                  stateDistCountDelhi += statesTotalCount[i].Districts[district].confirmed\r\n                }else if(statesTotalCount[i].state == 'Telangana'){\r\n                  stateDistCountTelangana += statesTotalCount[i].Districts[district].confirmed\r\n                }else if(statesTotalCount[i].state == 'Rajasthan'){\r\n                  stateDistCountRajasthan += statesTotalCount[i].Districts[district].confirmed\r\n                }else if(statesTotalCount[i].state == 'Haryana'){\r\n                  stateDistCountHaryana += statesTotalCount[i].Districts[district].confirmed\r\n                }else if(statesTotalCount[i].state == 'Uttar Pradesh'){\r\n                  UttarPradesh += statesTotalCount[i].Districts[district].confirmed\r\n                }else if(statesTotalCount[i].state == 'Ladakh'){\r\n                  Ladakh += statesTotalCount[i].Districts[district].confirmed\r\n                }else if(statesTotalCount[i].state == 'Tamil Nadu'){\r\n                  TamilNadu += statesTotalCount[i].Districts[district].confirmed\r\n                }else if(statesTotalCount[i].state == 'Jammu and Kashmir'){\r\n                  JammuandKashmir += statesTotalCount[i].Districts[district].confirmed\r\n                }else if(statesTotalCount[i].state == 'Karnataka'){\r\n                  Karnataka += statesTotalCount[i].Districts[district].confirmed\r\n                }else if(statesTotalCount[i].state == 'Maharashtra'){\r\n                  Maharashtra += statesTotalCount[i].Districts[district].confirmed\r\n                }else if(statesTotalCount[i].state == 'Punjab'){\r\n                  Punjab += statesTotalCount[i].Districts[district].confirmed\r\n                }else if(statesTotalCount[i].state == 'Andhra Pradesh'){\r\n                  AndhraPradesh += statesTotalCount[i].Districts[district].confirmed\r\n                }else if(statesTotalCount[i].state == 'Uttarakhand'){\r\n                  Uttarakhand += statesTotalCount[i].Districts[district].confirmed\r\n                }else if(statesTotalCount[i].state == 'Odisha'){\r\n                  Odisha += statesTotalCount[i].Districts[district].confirmed\r\n                }else if(statesTotalCount[i].state == 'Puducherry'){\r\n                  Puducherry += statesTotalCount[i].Districts[district].confirmed\r\n                }else if(statesTotalCount[i].state == 'West Bengal'){\r\n                  WestBengal += statesTotalCount[i].Districts[district].confirmed\r\n                }else if(statesTotalCount[i].state == 'Chandigarh'){\r\n                  Chandigarh += statesTotalCount[i].Districts[district].confirmed\r\n                }else if(statesTotalCount[i].state == 'Gujarat'){\r\n                  Gujarat += statesTotalCount[i].Districts[district].confirmed\r\n                }else if(statesTotalCount[i].state == 'Himachal Pradesh'){\r\n                  HimachalPradesh += statesTotalCount[i].Districts[district].confirmed\r\n                }else if(statesTotalCount[i].state == 'Madhya Pradesh'){\r\n                  MadhyaPradesh += statesTotalCount[i].Districts[district].confirmed\r\n                }else if(statesTotalCount[i].state == 'Bihar'){\r\n                  Bihar += statesTotalCount[i].Districts[district].confirmed\r\n                }else if(statesTotalCount[i].state == 'Manipur'){\r\n                  Manipur += statesTotalCount[i].Districts[district].confirmed\r\n                }else if(statesTotalCount[i].state == 'Mizoram'){\r\n                  Mizoram += statesTotalCount[i].Districts[district].confirmed\r\n                }else if(statesTotalCount[i].state == 'Goa'){\r\n                  Goa += statesTotalCount[i].Districts[district].confirmed\r\n                }else if(statesTotalCount[i].state == 'Andaman and Nicobar Islands'){\r\n                  AndamanandNicobarIslands += statesTotalCount[i].Districts[district].confirmed\r\n                }else if(statesTotalCount[i].state == 'Jharkhand'){\r\n                  Jharkhand += statesTotalCount[i].Districts[district].confirmed\r\n                }else if(statesTotalCount[i].state == 'Assam'){\r\n                  Assam += statesTotalCount[i].Districts[district].confirmed\r\n                }else if(statesTotalCount[i].state == 'Arunachal Pradesh'){\r\n                  ArunachalPradesh += statesTotalCount[i].Districts[district].confirmed\r\n                }else if(statesTotalCount[i].state == 'Dadra and Nagar Haveli'){\r\n                  DadraandNagarHaveli += statesTotalCount[i].Districts[district].confirmed\r\n                }else if(statesTotalCount[i].state == 'Tripura'){\r\n                  Tripura += statesTotalCount[i].Districts[district].confirmed\r\n                }else if(statesTotalCount[i].state == 'Nagaland'){\r\n                  Nagaland += statesTotalCount[i].Districts[district].confirmed\r\n                }else if(statesTotalCount[i].state == 'Meghalaya'){\r\n                  Meghalaya += statesTotalCount[i].Districts[district].confirmed\r\n                }\r\n            }\r\n          }\r\n        }\r\n  \r\n        const StateArray = [\r\n          {state:'Kerala',totalcases:stateDistCountKerala},\r\n          {state:'Delhi',totalcases:stateDistCountDelhi},\r\n          {state:'Telangana',totalcases:stateDistCountTelangana},\r\n          {state:'Rajasthan',totalcases:stateDistCountRajasthan},\r\n          {state:'Haryana',totalcases:stateDistCountHaryana},\r\n          {state:'UttarPradesh',totalcases:UttarPradesh},\r\n          {state:'Ladakh',totalcases:Ladakh},\r\n          {state:'TamilNadu',totalcases:TamilNadu},\r\n          {state:'JammuandKashmir',totalcases:JammuandKashmir},\r\n          {state:'Karnataka',totalcases:Karnataka},\r\n          {state:'Maharashtra',totalcases:Maharashtra},\r\n          {state:'Punjab',totalcases:Punjab},\r\n          {state:'AndhraPradesh',totalcases:AndhraPradesh},\r\n          {state:'Uttarakhand',totalcases:Uttarakhand},\r\n          {state:'Odisha',totalcases:Odisha},\r\n          {state:'Puducherry',totalcases:Puducherry},\r\n          {state:'WestBengal',totalcases:WestBengal},\r\n          {state:'Chandigarh',totalcases:Chandigarh},\r\n          {state:'Gujarat',totalcases:Gujarat},\r\n          {state:'HimachalPradesh',totalcases:HimachalPradesh},\r\n          {state:'MadhyaPradesh',totalcases:MadhyaPradesh},\r\n          {state:'Bihar',totalcases:Bihar},\r\n          {state:'Manipur',totalcases:Manipur},\r\n          {state:'Mizoram',totalcases:Mizoram},\r\n          {state:'Goa',totalcases:Goa},\r\n          {state:'AndamanandNicobarIslands',totalcases:AndamanandNicobarIslands},\r\n          {state:'Jharkhand',totalcases:Jharkhand},\r\n          {state:'Assam',totalcases:Assam},\r\n          {state:'ArunachalPradesh',totalcases:ArunachalPradesh},\r\n          {state:'DadraandNagarHaveli',totalcases:DadraandNagarHaveli},\r\n          {state:'Tripura',totalcases:Tripura},\r\n          {state:'Nagaland',totalcases:Nagaland},\r\n          {state:'Meghalaya',totalcases:Meghalaya},\r\n        ]\r\n        this.setState({ StateData: StateArray});\r\n        console.log('StateMap',this.state.StateData)\r\n        const topStates = [\r\n          {\r\n          state:'',\r\n          total:0\r\n          }\r\n        ];\r\n        let labels = [];\r\n        let totalcases = [];\r\n        StateArray.map((state) =>{\r\n          labels.push(state.state);\r\n          totalcases.push(state.totalcases);\r\n        })\r\n        var chartlabels = {...this.state.data}\r\n        chartlabels.labels = [...labels]\r\n        chartlabels.datasets[0].data = [...totalcases]\r\n        this.setState({ data : chartlabels})\r\n      })\r\n    }\r\n    render() {\r\n        return (\r\n          <React.Fragment>\r\n          <Grid item xs={12} sm={12} md={8} lg={12} xl={12}>  \r\n              <Typography variant=\"subtitle1\" className='statewisedata'  gutterBottom>\r\n                <div style={{'font-weight': '600'}}>INDIA Map</div>\r\n              </Typography>\r\n          </Grid>\r\n          {/* <span className='switch1'>INDIA Map</span> */}\r\n            <div className=\"BarGraph\">\r\n              <StatMap StateMapData={this.state.StateData} />\r\n            </div>\r\n          {/* <div className=\"switch\">\r\n            <input id=\"switch-1\" type=\"checkbox\" className=\"switch-input\" onChange={this.handelGraphToggle} />\r\n              <label htmlFor=\"switch-1\" className=\"switch-label\">Switch</label>\r\n              </div><span className='switch2'>Horizontal</span>\r\n              {\r\n                (this.state.isVertical)?\r\n                 <div className=\"BarGraph\">\r\n                  <StatMap StateMapData={this.state.StateData} />\r\n                <Bar\r\n                  data={this.state.data}\r\n                  width={1000}\r\n                  height={300}\r\n                  options={{\r\n                    scales :{\r\n                      yAxes:[{\r\n                        gridLines: {\r\n                          display : false\r\n                        }\r\n                      }],\r\n                      xAxes:[{\r\n                        gridLines: {\r\n                          display : false\r\n                        },\r\n                        display: false\r\n                      }]\r\n                    },\r\n                    maintainAspectRatio: false\r\n                  }}\r\n            />\r\n               </div> : <div className=\"BarGraph\"><HorizontalBar data={this.state.data} options={{\r\n                    scales :{\r\n                      yAxes:[{\r\n                        gridLines: {\r\n                          display : false\r\n                        }\r\n                      }],\r\n                      xAxes:[{\r\n                        gridLines: {\r\n                          display : false\r\n                        }\r\n                      }]\r\n                    },\r\n                    maintainAspectRatio: false\r\n                  }} /> \r\n                  </div>\r\n              } */}\r\n        \r\n          </React.Fragment>\r\n        );\r\n      }\r\n}\r\n\r\nexport default StateChart;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport NewReleasesIcon from '@material-ui/icons/NewReleases';\r\nimport NetworkCellIcon from '@material-ui/icons/NetworkCell';\r\nimport SignalCellularAltIcon from '@material-ui/icons/SignalCellularAlt';\r\nimport StateDetails from '../StateDetailsSlider/StateDetails.js';\r\nimport StateChart from '../StateDetailsSlider/StateChart.js';\r\nimport './Tab.css';\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <Typography\r\n      component=\"div\"\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`scrollable-force-tabpanel-${index}`}\r\n      aria-labelledby={`scrollable-force-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && <Box p={3}>{children}</Box>}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `scrollable-force-tab-${index}`,\r\n    'aria-controls': `scrollable-force-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    width: '100%',\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n}));\r\n\r\nexport default function ScrollableTabsButtonForce() {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(0);\r\n  const [ishorizontal, setHorizontal] = React.useState(false);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\" color=\"default\">\r\n        <Tabs\r\n          value={value}\r\n          onChange={handleChange}\r\n          scrollButtons=\"on\"\r\n          indicatorColor=\"primary\"\r\n          textColor=\"primary\"\r\n          centered\r\n          aria-label=\"scrollable force tabs example\"\r\n        >\r\n          <Tab label=\"Demographic\" icon={<NetworkCellIcon />} {...a11yProps(0)} />\r\n          <Tab label=\"Statistical\" icon={<SignalCellularAltIcon />} {...a11yProps(1)} />\r\n          <Tab label=\"Comming Soon...\" icon={<NewReleasesIcon />} {...a11yProps(2)} />\r\n        </Tabs>\r\n      </AppBar>\r\n      <TabPanel value={value} index={0}>\r\n        <StateChart />\r\n      </TabPanel>\r\n      <TabPanel value={value} index={1}>\r\n        <StateDetails />\r\n      </TabPanel>\r\n      <TabPanel value={value} index={2}>\r\n        Comming Soon...\r\n      </TabPanel>\r\n    </div>\r\n  );\r\n}","import React, { useState, useEffect } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport StateDetails from '../StateDetailsSlider/StateDetails.js';\r\nimport CountUp from 'react-countup';\r\nimport Tabs from '../TabPanel/Tabs.js';\r\nimport StatMap from '../StateMap/StateMap.js';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  confirm: {\r\n    color: 'rgba(255,7,58,.6)',\r\n    fontFamily: 'archia',\r\n    fontWeight: '900',\r\n    textTransform: 'uppercase',\r\n    fontSize: '12px !important',\r\n  },\r\n  confirmChild1: {\r\n    textAlign: 'center',\r\n    alignItem: 'center',\r\n    justifyContent: 'center',\r\n    marginTop: '.5rem',\r\n    color: 'rgba(255,7,58,.6)',\r\n    fontFamily: 'archia',\r\n    fontWeight: 900,\r\n    fontSize: '12px !important',\r\n    textTransform: 'uppercase'\r\n  },\r\n  confirmChild2: {\r\n    color: '#ff073a',\r\n    fontWeight: '600',\r\n    textAlign: 'center',\r\n    fontFamily: 'archia',\r\n    fontSize: '24px !important',\r\n    fontWeight: '900',\r\n    textTransform: 'uppercase'\r\n\r\n  },\r\n  active: {\r\n    color: 'rgba(0,123,255,.6)',\r\n    fontFamily: 'archia',\r\n    fontWeight: '900',\r\n    textTransform: 'uppercase',\r\n    fontSize: '12px !important',\r\n    [theme.breakpoints.up('xs')]: {\r\n      marginLeft: '20px'\r\n    }\r\n  },\r\n  activeChild1: {\r\n    textAlign: 'center',\r\n    alignItem: 'center',\r\n    justifyContent: 'center',\r\n    marginTop: '.5rem',\r\n    color: '#ffffff',\r\n    fontFamily: 'archia',\r\n    fontWeight: 900,\r\n    fontSize: '12px !important',\r\n    textTransform: 'uppercase'\r\n  },\r\n  activeChild2: {\r\n    color: '#007bff',\r\n    fontWeight: '600',\r\n    textAlign: 'center',\r\n    fontFamily: 'archia',\r\n    fontSize: '24px !important',\r\n    fontWeight: '900',\r\n    textTransform: 'uppercase'\r\n  },\r\n  recovered: {\r\n    color: 'rgba(40,167,69,.6)',\r\n    fontFamily: 'archia',\r\n    fontWeight: '900',\r\n    textTransform: 'uppercase',\r\n    fontSize: '12px !important',\r\n  },\r\n  recoveredChild1: {\r\n    textAlign: 'center',\r\n    alignItem: 'center',\r\n    justifyContent: 'center',\r\n    marginTop: '.5rem',\r\n    color: 'rgba(40,167,69,.6)',\r\n    fontFamily: 'archia',\r\n    fontWeight: 900,\r\n    fontSize: '12px !important',\r\n    textTransform: 'uppercase'\r\n  },\r\n  recoveredChild2: {\r\n    color: '#28a745',\r\n    fontWeight: '600',\r\n    textAlign: 'center',\r\n    fontFamily: 'archia',\r\n    fontSize: '24px !important',\r\n    fontWeight: '900',\r\n    textTransform: 'uppercase'\r\n\r\n  },\r\n  deceased: {\r\n    color: 'rgba(108,117,125,.6)',\r\n    fontFamily: 'archia',\r\n    fontWeight: '900',\r\n    textTransform: 'uppercase',\r\n    fontSize: '12px !important',\r\n  },\r\n  deceasedChild1: {\r\n    textAlign: 'center',\r\n    alignItem: 'center',\r\n    justifyContent: 'center',\r\n    marginTop: '.5rem',\r\n    color: 'rgba(108,117,125,.6)',\r\n    fontFamily: 'archia',\r\n    fontWeight: 900,\r\n    fontSize: '12px !important',\r\n    textTransform: 'uppercase'\r\n  },\r\n  deceasedChild2: {\r\n    color: '#6c757d',\r\n    fontWeight: '600',\r\n    textAlign: 'center',\r\n    fontFamily: 'archia',\r\n    fontSize: '24px !important',\r\n    fontWeight: '900',\r\n    textTransform: 'uppercase'\r\n\r\n  },\r\n  FirstGridRow: {\r\n    marginTop: '40px !important'\r\n  },\r\n  SecondGridRow: {\r\n    marginTop: '40px !important'\r\n  },\r\n  ThirdGridRow: {\r\n    marginTop: '40px !important'\r\n  },\r\n  FourthGridRow: {\r\n    marginTop: '0px',\r\n    [theme.breakpoints.up('xs')]: {\r\n      marginTop: '10px'\r\n    }\r\n  },\r\n  statewisedata:{\r\n      marginRight: '40px',\r\n      textAlign: 'center',\r\n      fontFamily: 'archia !important',\r\n      fontWeight: '900',\r\n      fontSize: '24px !important',\r\n      textTransform: 'uppercase',\r\n      color: '#343a40',\r\n      [theme.breakpoints.up('xs')]: {\r\n          marginTop: '20px'\r\n      }\r\n  },\r\n  statechild:{\r\n    color: 'rgba(108,117,125,.6)',\r\n    fontSize: '12px !important',\r\n    fontFamily: 'archia',\r\n    fontWeight: '900',\r\n    textTransform: 'uppercase',\r\n    marginLeft: '37px'\r\n  },\r\n  statechild2:{\r\n    color: '#4c75f2',\r\n    fontSize: '12px',\r\n    fontFamily: 'archia',\r\n    fontWeight: '900',\r\n    textTransform: 'uppercase',\r\n    marginLeft: '37px',\r\n    [theme.breakpoints.up('xs')]: {\r\n      marginLeft: '0px',\r\n      fontSize:'10px'\r\n  }\r\n  },\r\n  covidsymbol:{\r\n    fontSize: '10px'\r\n  },\r\n  highsysmbol:{\r\n    padding: '0px 6px 0px 6px',\r\n    background: '#FF9999',\r\n    marginRight: '6px'\r\n  },\r\n  avgsysmbol:{\r\n    padding: '0px 6px 0px 6px',\r\n    background: '#FCC88C',\r\n    marginRight: '6px'\r\n  },\r\n  lowsysmbol:{\r\n    padding: '0px 6px 0px 6px',\r\n    background: '#B1DC88',\r\n    marginRight: '6px'\r\n  },\r\n  stateTotal:{\r\n    color: '#46A4D1'\r\n  }\r\n}));\r\n\r\nconst CountryStat = () => {\r\n  const classes = useStyles();\r\n  const [countryStat, setCountryStat] = useState(0);\r\n  const [ConfirmCount, setConfirmCount] = useState(0);\r\n  const [ActivityCount, setActivityCount] = useState(0);\r\n  const [RecoveredCount, setRecoveredCount] = useState(0);\r\n  const [DeceasedCount, setDeceasedCount] = useState(0);\r\n\r\n  useEffect(() => {\r\n    fetch('https://api.covid19india.org/data.json')\r\n      .then(res => res.json())\r\n      .then((stat) =>{\r\n          setCountryStat(stat.statewise[0]);\r\n          setConfirmCount((function () {\r\n            let confirm = parseInt(stat.statewise[0].confirmed);\r\n              return confirm\r\n              // return stat.statewise[0].confirmed.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\r\n          })())\r\n          setActivityCount((function () {\r\n            let active = parseInt(stat.statewise[0].active);\r\n              return active\r\n          })())\r\n          setRecoveredCount((function () {\r\n            let recovered = parseInt(stat.statewise[0].recovered);\r\n              return recovered\r\n          })())\r\n          setDeceasedCount((function () {\r\n            let deaths = parseInt(stat.statewise[0].deaths);\r\n              return deaths\r\n          })())\r\n      })\r\n  }, []);\r\n  return (\r\n    <React.Fragment>\r\n      <Grid container\r\n        justify=\"space-evenly\"\r\n        alignItems=\"center\"\r\n        className={classes.FirstGridRow}\r\n      >\r\n        <Grid item>\r\n          <Typography variant=\"subtitle1\" className={classes.confirm} gutterBottom>\r\n            Confirmed\r\n          </Typography>\r\n          <div>\r\n            <Typography variant=\"subtitle1\" className={classes.confirmChild1} gutterBottom>\r\n              {'[' + '+' + countryStat.deltaconfirmed + ']'}\r\n            </Typography>\r\n          </div>\r\n          <div>\r\n            <Typography variant=\"subtitle1\" className={classes.confirmChild2} gutterBottom>\r\n             <CountUp end={ConfirmCount} duration={3.75} separator=\",\"></CountUp> \r\n            </Typography>\r\n          </div>\r\n        </Grid>\r\n        <Grid item>\r\n          <Typography variant=\"subtitle1\" className={classes.active} gutterBottom>\r\n            Active\r\n                </Typography>\r\n          <div>\r\n            <Typography variant=\"subtitle1\" className={classes.activeChild1} gutterBottom>\r\n              0\r\n                    </Typography>\r\n          </div>\r\n          <div>\r\n            <Typography variant=\"subtitle1\" className={classes.activeChild2} gutterBottom>\r\n              <CountUp end={ActivityCount} duration={3.75} separator=\",\"></CountUp> \r\n            </Typography>\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Grid container\r\n        justify=\"space-evenly\"\r\n        alignItems=\"center\"\r\n        className={classes.SecondGridRow}\r\n      >\r\n        <Grid item>\r\n          <Typography variant=\"subtitle1\" className={classes.recovered} gutterBottom>\r\n            Recovered\r\n                </Typography>\r\n          <div>\r\n            <Typography variant=\"subtitle1\" className={classes.recoveredChild1} gutterBottom>\r\n              {'[' + '+' + countryStat.deltarecovered + ']'}\r\n            </Typography>\r\n          </div>\r\n          <div>\r\n            <Typography variant=\"subtitle1\" className={classes.recoveredChild2} gutterBottom>\r\n              <CountUp end={RecoveredCount} duration={3.75} separator=\",\"></CountUp> \r\n            </Typography>\r\n          </div>\r\n        </Grid>\r\n        <Grid item>\r\n          <Typography variant=\"subtitle1\" className={classes.deceased} gutterBottom>\r\n            Deceased\r\n                </Typography>\r\n          <div>\r\n            <Typography variant=\"subtitle1\" className={classes.deceasedChild1} gutterBottom>\r\n              {'[' + '+' + countryStat.deltadeaths + ']'}\r\n            </Typography>\r\n          </div>\r\n          <div>\r\n            <Typography variant=\"subtitle1\" className={classes.deceasedChild2} gutterBottom>\r\n              <CountUp end={DeceasedCount} duration={3.75} separator=\",\"></CountUp> \r\n            </Typography>\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid container\r\n      className={classes.FourthGridRow}\r\n      >\r\n        <Grid item xs={12} sm={12} md={8} lg={12} xl={12}>  \r\n        <Typography variant=\"subtitle1\" className={classes.statewisedata}  gutterBottom>\r\n            <div>State Wise Data</div>\r\n            <div className={classes.statechild}>COMPILED FROM STATE GOVT. NUMBERS\r\n            {/* <div className={classes.statechild2}>CLICK ON ANY BELOW STATE TO KNOW MORE.</div> */}\r\n            </div>\r\n        </Typography>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid container className={classes.ThirdGridRow}>\r\n        <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n          <Tabs />\r\n        </Grid>\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default CountryStat;","import moment from 'moment';\r\n\r\nconst months = {\r\n  '01': 'Jan',\r\n  '02': 'Feb',\r\n  '03': 'Mar',\r\n  '04': 'Apr',\r\n  '05': 'May',\r\n  '06': 'Jun',\r\n  '07': 'Jul',\r\n  '08': 'Aug',\r\n  '09': 'Sep',\r\n  '10': 'Oct',\r\n  '11': 'Nov',\r\n  '12': 'Dec',\r\n};\r\n\r\nconst stateCodes = {\r\n  AP: 'Andhra Pradesh',\r\n  AR: 'Arunachal Pradesh',\r\n  AS: 'Assam',\r\n  BR: 'Bihar',\r\n  CT: 'Chhattisgarh',\r\n  GA: 'Goa',\r\n  GJ: 'Gujarat',\r\n  HR: 'Haryana',\r\n  HP: 'Himachal Pradesh',\r\n  JH: 'Jharkhand',\r\n  KA: 'Karnataka',\r\n  KL: 'Kerala',\r\n  MP: 'Madhya Pradesh',\r\n  MH: 'Maharashtra',\r\n  MN: 'Manipur',\r\n  ML: 'Meghalaya',\r\n  MZ: 'Mizoram',\r\n  NL: 'Nagaland',\r\n  OR: 'Odisha',\r\n  PB: 'Punjab',\r\n  RJ: 'Rajasthan',\r\n  SK: 'Sikkim',\r\n  TN: 'Tamil Nadu',\r\n  TG: 'Telangana',\r\n  TR: 'Tripura',\r\n  UT: 'Uttarakhand',\r\n  UP: 'Uttar Pradesh',\r\n  WB: 'West Bengal',\r\n  AN: 'Andaman and Nicobar Islands',\r\n  CH: 'Chandigarh',\r\n  DN: 'Dadra and Nagar Haveli',\r\n  DD: 'Daman and Diu',\r\n  DL: 'Delhi',\r\n  JK: 'Jammu and Kashmir',\r\n  LA: 'Ladakh',\r\n  LD: 'Lakshadweep',\r\n  PY: 'Puducherry',\r\n};\r\n\r\nexport const getStateName = (code) => {\r\n  return stateCodes[code.toUpperCase()];\r\n};\r\n\r\nexport const formatDate = (unformattedDate) => {\r\n  const day = unformattedDate.slice(0, 2);\r\n  const month = unformattedDate.slice(3, 5);\r\n  const year = unformattedDate.slice(6, 10);\r\n  const time = unformattedDate.slice(11);\r\n  return `${year}-${month}-${day}T${time}+05:30`;\r\n};\r\n\r\nexport const formatDateAbsolute = (unformattedDate) => {\r\n  const day = unformattedDate.slice(0, 2);\r\n  const month = unformattedDate.slice(3, 5);\r\n  const time = unformattedDate.slice(11);\r\n  return `${day} ${months[month]}, ${time.slice(0, 5)} IST`;\r\n};\r\n\r\nconst validateCTS = (data = []) => {\r\n  const today = new Date();\r\n  today.setHours(0, 0, 0, 0);\r\n  const dataTypes = [\r\n    'dailyconfirmed',\r\n    'dailydeceased',\r\n    'dailyrecovered',\r\n    'totalconfirmed',\r\n    'totaldeceased',\r\n    'totalrecovered',\r\n  ];\r\n  return data\r\n    .filter((d) => dataTypes.every((dt) => d[dt]) && d.date)\r\n    .filter((d) => dataTypes.every((dt) => Number(d[dt]) >= 0))\r\n    .filter((d) => {\r\n      const year = today.getFullYear();\r\n      return new Date(d.date + year) < today;\r\n    });\r\n};\r\n\r\nexport const preprocessTimeseries = (timeseries) => {\r\n  return validateCTS(timeseries).map((stat) => ({\r\n    date: new Date(stat.date + ' 2020'),\r\n    totalconfirmed: +stat.totalconfirmed,\r\n    totalrecovered: +stat.totalrecovered,\r\n    totaldeceased: +stat.totaldeceased,\r\n    dailyconfirmed: +stat.dailyconfirmed,\r\n    dailyrecovered: +stat.dailyrecovered,\r\n    dailydeceased: +stat.dailydeceased,\r\n  }));\r\n};\r\n\r\n/**\r\n * Returns the last `days` entries\r\n * @param {Array<Object>} timeseries\r\n * @param {number} days\r\n *\r\n * @return {Array<Object>}\r\n */\r\nexport function sliceTimeseriesFromEnd(timeseries, days) {\r\n  return timeseries.slice(-days);\r\n}\r\n\r\nexport const formatNumber = (value) => {\r\n  const numberFormatter = new Intl.NumberFormat('en-IN');\r\n  return isNaN(value) ? '-' : numberFormatter.format(value);\r\n};\r\n\r\nexport const parseStateTimeseries = ({states_daily: data}) => {\r\n  const statewiseSeries = Object.keys(stateCodes).reduce((a, c) => {\r\n    a[c] = [];\r\n    return a;\r\n  }, {});\r\n\r\n  const today = moment();\r\n  for (let i = 0; i < data.length; i += 3) {\r\n    const date = moment(data[i].date, 'DD-MMM-YY');\r\n    // Skip data from the current day\r\n    if (date.isBefore(today, 'Date')) {\r\n      Object.entries(statewiseSeries).forEach(([k, v]) => {\r\n        const stateCode = k.toLowerCase();\r\n        const prev = v[v.length - 1] || {};\r\n        v.push({\r\n          date: date.toDate(),\r\n          dailyconfirmed: +data[i][stateCode] || 0,\r\n          dailyrecovered: +data[i + 1][stateCode] || 0,\r\n          dailydeceased: +data[i + 2][stateCode] || 0,\r\n          totalconfirmed: +data[i][stateCode] + (prev.totalconfirmed || 0),\r\n          totalrecovered: +data[i + 1][stateCode] + (prev.totalrecovered || 0),\r\n          totaldeceased: +data[i + 2][stateCode] + (prev.totaldeceased || 0),\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n  return statewiseSeries;\r\n};","import React, {useState, useEffect, useRef, useCallback} from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport CountryStat from '../CountryStats/CountryStat.js';\r\nimport axios from 'axios';\r\nimport {formatDistance, format} from 'date-fns';\r\n\r\nimport {\r\n    formatDate,\r\n    formatDateAbsolute,\r\n  } from '../../utils/commom-functions.js';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    appUpdateDiv:{\r\n        alignItems: 'center',\r\n        justifyContent: 'center'\r\n    },\r\n    appUpdateFont1:{\r\n        fontFamily: 'archia !important',\r\n        fontWeight: '900',\r\n        textTransform: 'uppercase',\r\n        color: '#343a40',\r\n        [theme.breakpoints.up('xs')]: {\r\n            marginTop: '20px'\r\n          }\r\n    },\r\n    appUpdateFont2:{\r\n        fontFamily: 'archia !important',\r\n        fontWeight: '600',\r\n        fontSize: '11px!important',\r\n        textTransform: 'uppercase',\r\n        color: '#6c757d'\r\n    },\r\n    appUpdateFont3:{\r\n        fontFamily: 'archia !important',\r\n        color: 'rgba(40,167,69,.6) !important',\r\n        fontWeight: '900',\r\n        fontSize: '12px !important',\r\n        textTransform: 'uppercase',\r\n        [theme.breakpoints.up('md')]: {\r\n            marginLeft: '81px !important',\r\n            marginTop: '40px !important'\r\n          },\r\n        [theme.breakpoints.up('xs')]: {\r\n            marginTop: '5px',\r\n            marginLeft: '25px'\r\n          }\r\n    },\r\n    appUpdateFont4:{\r\n        fontFamily: 'archia !important',\r\n        color: 'rgb(40, 167, 69)',\r\n        fontWeight: '900',\r\n        fontSize: '14px !important',\r\n        textTransform: 'uppercase',\r\n        fontSize: '11px !important',\r\n        [theme.breakpoints.up('md')]: {\r\n            marginLeft: '74px !important',\r\n          },\r\n        [theme.breakpoints.up('xs')]: {\r\n            marginLeft: '-4px',\r\n            fontSize: '10px',\r\n          }\r\n    },\r\n    appUpdateFont5:{\r\n        fontFamily: 'archia !important',\r\n        color: 'rgb(40, 167, 69)',\r\n        fontWeight: '900',\r\n        textTransform: 'uppercase',\r\n        fontSize: '12px !important',\r\n        [theme.breakpoints.up('md')]: {\r\n            marginLeft: '68px !important'\r\n          },\r\n        [theme.breakpoints.up('xs')]: {\r\n            marginLeft: '10px',\r\n            fontSize: '10px',\r\n          }\r\n    }\r\n}));\r\n\r\nconst ApplastUpdated = () => {\r\n  const [states, setStates] = useState([]);\r\n  const [fetched, setFetched] = useState(false);\r\n  const [lastUpdated, setLastUpdated] = useState('');\r\n\r\n  useEffect(() => {\r\n    if (fetched === false) {\r\n      getStates();\r\n    }\r\n  }, [fetched]);\r\n\r\n  const getStates = async () => {\r\n    try {\r\n      const [\r\n        response,\r\n      ] = await Promise.all([\r\n        axios.get('https://api.covid19india.org/data.json'),\r\n      ]);\r\n      setStates(response.data.statewise);\r\n      setLastUpdated(response.data.statewise[0].lastupdatedtime);\r\n      setFetched(true);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n    const classes = useStyles();\r\n    return ( \r\n        <React.Fragment>\r\n            <Grid container className={classes.appUpdateDiv}>\r\n                <Grid item xs={7} sm={6} md={4} lg={6} xl={6}\r\n                >\r\n                    <Typography variant=\"h5\" className={classes.appUpdateFont1}>\r\n                        India COVID-19 Tracker\r\n                    </Typography>\r\n                    <Typography variant=\"h6\" className={classes.appUpdateFont2}>\r\n                        A Crowdsourced Initiative\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item xs={4} sm={6} md={3} lg={6} xl={6}> \r\n                    <Typography variant=\"h5\" className={classes.appUpdateFont3}>\r\n                        Last Updated\r\n                    </Typography>\r\n                    <Typography variant=\"h6\" className={classes.appUpdateFont4}>\r\n                    {isNaN(Date.parse(formatDate(lastUpdated)))\r\n                    ? ''\r\n                    : formatDistance(\r\n                        new Date(formatDate(lastUpdated)),\r\n                        new Date()\r\n                      ) + ' Ago'}\r\n                    </Typography>\r\n                    <Typography variant=\"h6\" className={classes.appUpdateFont5}>\r\n                    {isNaN(Date.parse(formatDate(lastUpdated)))\r\n                    ? ''\r\n                    : formatDateAbsolute(lastUpdated)}\r\n                    </Typography>\r\n                </Grid>\r\n            </Grid>\r\n            <CountryStat />\r\n        </React.Fragment>\r\n    );\r\n}\r\n \r\nexport default ApplastUpdated;","import React, { useState, useEffect } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ApplastUpdated from '../ApplastUpdated/AppUpdated.js';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    banner_parent:{\r\n        background: 'rgba(32,26,162,.12549)',\r\n        height: 'auto !important',\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    banner: {\r\n        textAlign: 'center',\r\n        margin: theme.spacing(3),\r\n    },\r\n    banner_text:{\r\n        fontFamily: 'archia !important',\r\n        fontSize: '.8rem !important',\r\n        fontWeight: '600',\r\n        color: 'rgba(32,26,162,.866667)'\r\n    }\r\n}));\r\nconst Covidquotes = (props) => {\r\n    const classes = useStyles();\r\n    const [Quotes, setQuotes] = useState('Stay Home, Stay Safe.');\r\n\r\n    useEffect(() =>{\r\n        setInterval(() =>{\r\n            fetch('https://api.covid19india.org/website_data.json')\r\n            .then(res => res.json())\r\n            .then(quotes => {\r\n                let randomNum = Math.abs(Math.floor(Math.random() * (1 - quotes.factoids.length) + 1));\r\n                setQuotes(quotes.factoids[randomNum].banner)})\r\n        },4000)\r\n    },[]);\r\n    const setNewQuote = () =>{\r\n        fetch('https://api.covid19india.org/website_data.json')\r\n            .then(res => res.json())\r\n            .then(quotes => {\r\n            let randomNum = Math.abs(Math.floor(Math.random() * (1 - quotes.factoids.length) + 1));\r\n            setQuotes(quotes.factoids[randomNum].banner)\r\n        })\r\n    }\r\n    return ( \r\n        <React.Fragment>\r\n            <Grid container className={classes.banner_parent} onClick={() => setNewQuote()}>\r\n                <Grid item xs={12} sm={12} md={12} lg={12} xl={12} className={classes.banner}>\r\n                    <Typography className={classes.banner_text}>\r\n                       {Quotes}\r\n                    </Typography>\r\n                </Grid>\r\n            </Grid>\r\n            <ApplastUpdated />\r\n        </React.Fragment>\r\n     );\r\n}\r\n\r\nexport default Covidquotes;","import React, { Component } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport './GlobalStat.css';\r\nimport ReactCountryFlag from \"react-country-flag\";\r\nimport CountUp from 'react-countup';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\n\r\n\r\n\r\nclass GlobalStat extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isModelVisible: false,\r\n            WorldCountries:[],\r\n            WorldCountriesCopy:[]\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        this.getWorldCountryCases()\r\n    }\r\n    componentWillReceiveProps(nextProp) {\r\n        if (nextProp.isCountryModalVisible) {\r\n            this.setState({ isModelVisible: nextProp.isCountryModalVisible })\r\n        } else {\r\n            this.setState({ isModelVisible: nextProp.isCountryModalVisible })\r\n        }\r\n    }\r\n    getWorldCountryCases(){\r\n        fetch('https://corona.lmao.ninja/v2/countries?sort=country')\r\n        .then(res => res.json())\r\n        .then((data) =>{\r\n            this.setState({ WorldCountries: data})\r\n            this.setState({ WorldCountriesCopy: data})\r\n        }).catch((err) =>{\r\n            console.error('Global Countries Records',err)\r\n        })\r\n    }\r\n    handleCountrySearch(e){\r\n        if(e.target.value !== ''){\r\n            let searchedResult = this.state.WorldCountries.filter((item) =>{\r\n                return item.country.toLowerCase().includes(e.target.value.toLowerCase())\r\n            })\r\n            this.setState({ WorldCountries:searchedResult})\r\n        }else{\r\n            this.setState({ WorldCountries:this.state.WorldCountriesCopy})\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <div className={(this.state.isModelVisible) ? 'CountriesModal ShowModal' : 'CountriesModal HideModal'}>\r\n                    <Grid container\r\n                        justify=\"space-evenly\"\r\n                        alignItems=\"center\"\r\n                    >\r\n                            <Paper component=\"form\" className='root'>\r\n                                <InputBase\r\n                                    onChange={this.handleCountrySearch.bind(this)}\r\n                                    className='input'\r\n                                    placeholder=\"Search Countries...\"\r\n                                    inputProps={{ 'aria-label': 'Search Countries...' }}\r\n                                />\r\n                                <IconButton className='iconButton' aria-label=\"search\">\r\n                                    <SearchIcon />\r\n                                </IconButton>\r\n                                <Divider className='divider' orientation=\"vertical\" />\r\n                            </Paper>\r\n                        <Grid item xs={12} md={12}>\r\n                        <TableContainer component={Paper} >\r\n                            <Table className='table' aria-label=\"simple table\">\r\n                                <TableHead>\r\n                                <TableRow xs={12}>\r\n                                    <TableCell style={{'fontFamily': 'archia'}} className='TableHead'>Sr.No</TableCell>\r\n                                    <TableCell style={{'fontFamily': 'archia'}} className='TableHead'>Countries</TableCell>\r\n                                    <TableCell style={{'fontFamily': 'archia'}} className='TableHead'>Name</TableCell>\r\n                                    <TableCell style={{'fontFamily': 'archia'}} className='TableHead countryTodaycases'>TodayCases</TableCell>\r\n                                    <TableCell style={{'fontFamily': 'archia'}} className='TableHead countryTodaydeathth'>TodayDeaths</TableCell>\r\n                                    <TableCell style={{'fontFamily': 'archia'}} className='TableHead countryConfirmed'>Confirmed</TableCell>\r\n                                    <TableCell style={{'fontFamily': 'archia'}} className='TableHead countryActive'>Active</TableCell>\r\n                                    <TableCell style={{'fontFamily': 'archia'}} style={{'fontFamily': 'archia'}}  className='TableHead countryRecovered'>Recovered</TableCell>\r\n                                    <TableCell style={{'fontFamily': 'archia'}} className='TableHead'>Dead</TableCell>\r\n                                </TableRow>\r\n                                </TableHead>\r\n                                <TableBody>\r\n                                {this.state.WorldCountries.map((eachCountry, index) => (\r\n                                    <TableRow key={index}>\r\n                                    <TableCell style={{'fontFamily': 'archia'}} className='countryNames'>{index + 1}</TableCell>\r\n                                    <TableCell component=\"th\" scope=\"row\">\r\n                                    { (!!eachCountry.countryInfo.iso2)?\r\n                                    <ReactCountryFlag\r\n                                        countryCode={eachCountry.countryInfo.iso2 || ''}\r\n                                        svg\r\n                                        style={{\r\n                                            width: '6em',\r\n                                            height: '1.8em',\r\n                                        }}\r\n                                    /> : <span className='Notavailable'>Not Available</span>\r\n                                    } \r\n                                    </TableCell>\r\n                                    <TableCell style={{'fontFamily': 'archia'}} className='countryNames'>{eachCountry.country}</TableCell>\r\n                                    <TableCell style={{'fontFamily': 'archia'}} className='countryTodaycase        textCenter'>{eachCountry.todayCases}</TableCell>\r\n                                    <TableCell style={{'fontFamily': 'archia'}} className='countryTodaydeath textCenter'>{eachCountry.todayDeaths}</TableCell>\r\n                                    <TableCell style={{'fontFamily': 'archia'}} className='confirmed textCenter'><CountUp end={eachCountry.cases} duration={3.75} separator=\",\"></CountUp></TableCell>\r\n                                    <TableCell style={{'fontFamily': 'archia'}} className='active textCenter'><CountUp end={eachCountry.active} duration={3.75} separator=\",\"></CountUp></TableCell>\r\n                                    <TableCell style={{'fontFamily': 'archia'}} className='recovered textCenter'><CountUp end={eachCountry.recovered} duration={3.75} separator=\",\"></CountUp></TableCell>\r\n                                    <TableCell style={{'fontFamily': 'archia'}} className='dead textCenter'><CountUp end={eachCountry.deaths} duration={3.75} separator=\",\"></CountUp></TableCell>\r\n                                    </TableRow>\r\n                                ))}\r\n                                </TableBody>\r\n                            </Table>\r\n                            </TableContainer>\r\n                        </Grid>\r\n                    </Grid>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default GlobalStat;","import React, { Component } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\n\r\n\r\nclass WorldMap extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            isModelVisible: false,\r\n         }\r\n    }\r\n    componentWillReceiveProps(nextProp){\r\n        if (nextProp.isMapModalVisible) {\r\n            this.setState({ isModelVisible: nextProp.isMapModalVisible })\r\n        } else {\r\n            this.setState({ isModelVisible: nextProp.isMapModalVisible })\r\n        }\r\n    }\r\n    render() { \r\n        return ( \r\n            <React.Fragment>\r\n                <div className={(this.state.isModelVisible) ? 'CountriesModal ShowModal' : 'CountriesModal HideModal'}>\r\n                    <Grid container\r\n                    justify=\"space-evenly\"\r\n                    alignItems=\"center\"\r\n                    >\r\n                        <Grid item xs={12} sm={12} md={11} lg={11} xl={11} >\r\n                            <Card variant=\"outlined\">\r\n                                <CardContent>\r\n                                   WorldMap\r\n                                </CardContent>\r\n                            </Card>\r\n                        </Grid>\r\n                    </Grid>\r\n                </div>\r\n            </React.Fragment>\r\n         );\r\n    }\r\n}\r\n \r\nexport default WorldMap;\r\n","import React, { Component } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport './DailyCovidNews.css';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { FixedSizeList } from 'react-window';\r\n\r\nclass DailyCovidNews extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isModelVisible: false,\r\n            DailyCovid19News:[]\r\n          }\r\n    }\r\n    componentDidMount(){\r\n        this.getCovidNews()\r\n    }\r\n    componentWillReceiveProps(nextProp){\r\n        if (nextProp.isNewsModalVisible) {\r\n            this.setState({ isModelVisible: nextProp.isNewsModalVisible })\r\n        } else {\r\n            this.setState({ isModelVisible: nextProp.isNewsModalVisible })\r\n        }\r\n    }\r\n    getCovidNews(){\r\n        var myHeaders = new Headers();\r\n        myHeaders.append(\"Subscription-Key\", \"3009d4ccc29e4808af1ccc25c69b4d5d\");\r\n\r\n        var requestOptions = {\r\n            method: 'GET',\r\n            headers: myHeaders,\r\n            redirect: 'follow'\r\n        };\r\n\r\n        fetch(\"https://api.smartable.ai/coronavirus/news/IN\", requestOptions)\r\n        .then(response => response.json())\r\n        .then((data) =>{\r\n            this.setState({ DailyCovid19News: data.news})\r\n        })\r\n        .catch(error => console.log('error', error));\r\n\r\n    }\r\n    render() { \r\n        return ( \r\n            <React.Fragment>\r\n                <div className={(this.state.isModelVisible) ? 'CountriesModal ShowModal' : 'CountriesModal HideModal'}>\r\n                    <Grid container \r\n                    justify=\"flex-end\"\r\n                    alignItems=\"center\"\r\n                    >\r\n                        <Grid item xs={12} sm={12} md={5} lg={11} xl={11} >\r\n                            <Card variant=\"outlined\" style={{'marginRight': '45px'}}>\r\n                                <CardContent>\r\n                                    <Typography className='cardheading' variant=\"subtitle2\" gutterBottom color=\"textSecondary\">\r\n                                        Daily Covid19 News.\r\n                                    </Typography>\r\n                                    <Divider />\r\n                                    <List className='root Newscard'  >\r\n                                        {(this.state.DailyCovid19News.length > 0)?\r\n                                            this.state.DailyCovid19News.map((News, index) =>(\r\n                                                <span key={index} >\r\n                                                <ListItem key={index} alignItems=\"flex-start\">\r\n                                                    <ListItemAvatar>\r\n                                                        <Avatar alt=\"Remy Sharp\" src=\"https://media1.s-nbcnews.com/j/newscms/2020_16/331…16p_23fe61bb653e3f82510a4d7face3a142.fit-560w.jpg\" />\r\n                                                    </ListItemAvatar>\r\n                                                    <ListItemText className='NewsTitle'\r\n                                                        primary={News.title}\r\n                                                        secondary={\r\n                                                            <React.Fragment>\r\n                                                                <Typography\r\n                                                                    component=\"span\"\r\n                                                                    variant=\"body2\"\r\n                                                                    className='inline'\r\n                                                                    color=\"textPrimary\"\r\n                                                                >\r\n                                                                    Excerpt\r\n                                                                </Typography>\r\n                                                                <span className='MainNews'>{' - '+News.excerpt}</span>\r\n                                                                <span className='NewsSource'>Sourcses -</span>\r\n                                                                <span><a href={News.ampWebUrl}>{(!!News.ampWebUrl)? News.ampWebUrl:'Not available'}</a></span>\r\n                                                            </React.Fragment>\r\n                                                        }\r\n                                                        \r\n                                                    />\r\n                                                </ListItem>\r\n                                                <Divider variant=\"inset\" component=\"li\" />\r\n                                                </span>\r\n                                            )) : <span>New not Available</span>\r\n                                        }\r\n                                    </List>\r\n                                </CardContent>\r\n                            </Card>\r\n                        </Grid>\r\n                    </Grid>\r\n                </div>\r\n            </React.Fragment>\r\n         );\r\n    }\r\n}\r\n \r\nexport default DailyCovidNews;\r\n\r\n\r\n","import React, { useState,useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport MoreIcon from '@material-ui/icons/MoreVert';\r\nimport Covidquotes from '../CovidQuotes/Covidquotes.js';\r\nimport LanguageSharpIcon from '@material-ui/icons/LanguageSharp';\r\nimport GlobalStat from '../../Components/GlobalStats/GlobalStat.js';\r\nimport PublicIcon from '@material-ui/icons/Public';\r\nimport WorldMap from '../../Components/WorldMap/Worldmap.js';\r\nimport DailyCovidNews from '../../Components/IndiaCovidNews/DaliyCovidNews.js';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  navbar:{\r\n    boxShadow: '1px 0px 1px black !important'\r\n  },\r\n  globalstat:{\r\n    marginTop: '12px',\r\n    cursor: 'pointer'\r\n  },\r\n  globalmap:{\r\n    marginTop: '12px',\r\n    cursor: 'pointer',\r\n    marginRight: '14px'\r\n  },\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  title: {\r\n    fontFamily: 'archia !important',\r\n    display: 'block',\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'block',\r\n    },\r\n    color: theme.palette.text.inherit,\r\n  },\r\n  sectionDesktop: {\r\n    display: 'none',\r\n    [theme.breakpoints.up('md')]: {\r\n      display: 'flex',\r\n    },\r\n  },\r\n  sectionMobile: {\r\n    display: 'flex',\r\n    [theme.breakpoints.up('md')]: {\r\n      display: 'none',\r\n    },\r\n  },\r\n}));\r\nconst PrimarySearchAppBar =  () => {\r\n  const classes = useStyles();\r\n  const [NewsCount, setNewsCount] = useState(0);\r\n  const [isCountryModalVisible, setModalVisible] = useState(false);\r\n  const [isMapModalVisible, setMapModalVisible] = useState(false);\r\n  const [isNewsModalVisible, setNewsModalVisible] = useState(false);\r\n\r\n  useEffect(() =>{\r\n    console.log('News covid')\r\n    var myHeaders = new Headers();\r\n    myHeaders.append(\"Subscription-Key\", \"3009d4ccc29e4808af1ccc25c69b4d5d\");\r\n    var requestOptions = {\r\n        method: 'GET',\r\n        headers: myHeaders,\r\n        redirect: 'follow'\r\n    };\r\n    fetch(\"https://api.smartable.ai/coronavirus/news/IN\", requestOptions)\r\n    .then(response => response.json())\r\n    .then((data) =>{\r\n      setNewsCount(data.news.length)\r\n    })\r\n    .catch(error => console.log('error', error));\r\n  },[])\r\n\r\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\r\n\r\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\r\n\r\n  const handleMobileMenuClose = () => {\r\n    setMobileMoreAnchorEl(null);\r\n  };\r\n\r\n  const handleMobileMenuOpen = (event) => {\r\n    setMobileMoreAnchorEl(event.currentTarget);\r\n  };\r\n  const handleMapVisible = () =>{\r\n    if(isMapModalVisible){\r\n      setMapModalVisible(false)\r\n    }else{\r\n      setMapModalVisible(true)\r\n    }\r\n  }\r\n  const handleCountryRecords = () =>{\r\n    if(isCountryModalVisible){\r\n      setModalVisible(false)\r\n    }else{\r\n      setModalVisible(true)\r\n    }\r\n  }\r\n  const handleCovidNews = () =>{\r\n    if(isNewsModalVisible){\r\n      setNewsModalVisible(false)\r\n    }else{\r\n      setNewsModalVisible(true)\r\n    }\r\n  }\r\n  const mobileMenuId = 'primary-search-account-menu-mobile';\r\n  const renderMobileMenu = (\r\n    <Menu\r\n      anchorEl={mobileMoreAnchorEl}\r\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      id={mobileMenuId}\r\n      keepMounted\r\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      open={isMobileMenuOpen}\r\n      onClose={handleMobileMenuClose}\r\n    >\r\n      <MenuItem>\r\n        <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\r\n          <Badge badgeContent={4} color=\"secondary\">\r\n            <MailIcon />\r\n          </Badge>\r\n        </IconButton>\r\n        <p>Messages</p>\r\n      </MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  return (\r\n    <div className={classes.grow}>\r\n      <AppBar position=\"static\" color=\"inherit\" className={classes.navbar}>\r\n        <Toolbar>\r\n          <Typography className={classes.title}  variant=\"h6\" noWrap>\r\n            Covid-19\r\n          </Typography>\r\n          <div className={classes.grow} />\r\n          <div className={classes.sectionDesktop}>\r\n            {/* <div onClick={()=>handleMapVisible()} className={classes.globalmap}  >\r\n              <PublicIcon />\r\n            </div> */}\r\n            <div onClick={()=>handleCountryRecords()} className={classes.globalstat}  >\r\n              <LanguageSharpIcon />\r\n            </div>\r\n            <div onClick={()=>handleCovidNews()}>\r\n              <IconButton aria-label=\"show new notifications\" color=\"inherit\">\r\n                <Badge badgeContent={NewsCount} color=\"secondary\">\r\n                  <NotificationsIcon />\r\n                </Badge>\r\n              </IconButton>\r\n            </div>\r\n          </div>\r\n          <div className={classes.sectionMobile}>\r\n          {/* <div onClick={()=>handleMapVisible()} className={classes.globalmap}>\r\n              <PublicIcon />\r\n            </div> */}\r\n            <div onClick={()=>handleCountryRecords()} className={classes.globalstat}  >\r\n              <LanguageSharpIcon />\r\n            </div>\r\n            <div onClick={()=>handleCovidNews()}>\r\n            <IconButton aria-label=\"show 11 new notifications\" color=\"inherit\">\r\n              <Badge badgeContent={11} color=\"secondary\">\r\n                <NotificationsIcon />\r\n              </Badge>\r\n            </IconButton>\r\n          </div>\r\n            <IconButton\r\n              aria-label=\"show more\"\r\n              aria-controls={mobileMenuId}\r\n              aria-haspopup=\"true\"\r\n              onClick={handleMobileMenuOpen}\r\n              color=\"inherit\"\r\n            >\r\n              <MoreIcon />\r\n            </IconButton>\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <DailyCovidNews isNewsModalVisible={isNewsModalVisible} />\r\n      <WorldMap isMapModalVisible={isMapModalVisible} />\r\n      <GlobalStat isCountryModalVisible={isCountryModalVisible} />\r\n      <Covidquotes />\r\n      {renderMobileMenu}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PrimarySearchAppBar;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\nimport './App.css';\nimport NavBar  from '../src/Components/NavBar/NavBar.js';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <NavBar />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { combineReducers } from 'redux';\r\n\r\nexport default combineReducers({\r\n});","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './Reducers';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(rootReducer, initialState, compose( \r\n    applyMiddleware(...middleware),\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__() || compose\r\n));\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}