{"version":3,"sources":["Components/StateDetailsSlider/StateDetails.js","Components/StateMap/StateMap.js","Actions/Single_State.js","Actions/type.js","Components/StateDetailsSlider/StateChart.js","Components/TabPanel/Tabs.js","Components/CountryStats/CountryStat.js","utils/commom-functions.js","Components/ApplastUpdated/AppUpdated.js","Components/CovidQuotes/Covidquotes.js","Components/GlobalStats/GlobalStat.js","Components/WorldMap/Worldmap.js","Components/IndiaCovidNews/DaliyCovidNews.js","Components/NavBar/NavBar.js","Actions/Dark_Mode.js","Components/SingleState/SingleState.js","App.js","serviceWorker.js","Reducers/DarkModeReducer.js","Reducers/SingleState.js","Reducers/index.js","store.js","index.js"],"names":["StateDetails","props","abortController","AbortController","state","dynamicClassname","sliderLog","clearhandleautoslide","StateWiseData","StateTotalCases","this","fetchStatesDetails","abort","fetch","signal","then","res","json","statewisedetails","setState","statesTotalCount","Districts","stateDistCountKerala","stateDistCountDelhi","stateDistCountTelangana","stateDistCountRajasthan","stateDistCountHaryana","UttarPradesh","Ladakh","TamilNadu","JammuandKashmir","Karnataka","Maharashtra","Punjab","AndhraPradesh","Uttarakhand","Odisha","Puducherry","WestBengal","Chandigarh","Gujarat","HimachalPradesh","MadhyaPradesh","Bihar","Manipur","Mizoram","Goa","AndamanandNicobarIslands","Jharkhand","Assam","ArunachalPradesh","DadraandNagarHaveli","Tripura","Nagaland","Meghalaya","push","districtData","i","length","district","confirmed","StateArray","totalcases","topStates","total","map","item","Fragment","Grid","container","justify","alignItems","md","Card","variant","className","darkmode","CardContent","style","spacing","stateWiseDetails","index","xs","key","Typography","end","duration","separator","Component","connect","response","useStyles","makeStyles","theme","root","display","flexWrap","justifyContent","margin","width","height","breakpoints","down","notavailable","fontSize","confirm_paper","background","active_paper","recovered_paper","deceased_paper","color","textAlign","fontWeight","fontFamily","linkstatepage","cursor","marginLeft","borderRadius","padding","textDecoration","transition","confirm","marginTop","active","recovered","deceased","confirmCount","activeCount","recoveredCount","decreasedCount","GridRow","INDIA_TOPO_JSON","require","PROJECTION_CONFIG","scale","center","COLOR_RANGE","geographyStyle","default","outline","hover","fill","pressed","stateResponse","steteresponse","singlestate","SingleState","stateobj","dispatch","console","log","type","payload","withRouter","classes","useState","setTooltipContent","stateContent","setstateContent","stateTotal","setstateTotal","stateactiveTotal","setstateactiveTotal","staterecoveredTotal","setstaterecoveredTotal","statedeceasedTotal","setstatedeceasedTotal","id","value","data","setData","useEffect","StateMapData","activetotal","recoveredtotal","deceasedtotal","reduce","max","colorScale","scaleQuantile","domain","d","range","onMouseEnter","geo","current","properties","name","onMouseLeave","sm","lg","xl","Paper","elevation","gutterBottom","parseInt","onClick","stateName","stateDetails","history","handelStateRoute","projectionConfig","projection","data-tip","geography","geographies","find","s","rsmKey","StateChart","isVertical","StateData","labels","datasets","label","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","handelGraphToggle","bind","stateDistCountKeralaactive","stateDistCountKeralarecoverd","stateDistCountKeraladeceased","stateDistCountDelhiactive","stateDistCountDelhirecoverd","stateDistCountDelhideceased","stateDistCountTelanganaactive","stateDistCountTelanganarecoverd","stateDistCountTelanganadeceased","stateDistCountRajasthanactive","stateDistCountRajasthanrecoverd","stateDistCountRajasthandeceased","stateDistCountHaryanaactive","stateDistCountHaryanarecoverd","stateDistCountHaryanadeceased","stateDistCountUttarPradeshactive","stateDistCountUttarPradeshrecoverd","stateDistCountUttarPradeshdeceased","stateDistCountLadakhactive","stateDistCountLadakhrecoverd","stateDistCountLadakhdeceased","stateDistCountTamilNaduactive","stateDistCountTamilNadurecoverd","stateDistCountTamilNadudeceased","stateDistCountJammuandKashmiractive","stateDistCountJammuandKashmirrecoverd","stateDistCountJammuandKashmirdeceased","stateDistCountKarnatakaactive","stateDistCountKarnatakarecoverd","stateDistCountKarnatakadeceased","stateDistCountMaharashtraactive","stateDistCountMaharashtrarecoverd","stateDistCountMaharashtradeceased","stateDistCountPunjabactive","stateDistCountPunjabrecoverd","stateDistCountPunjabdeceased","stateDistCountAndhraPradeshactive","stateDistCountAndhraPradeshrecoverd","stateDistCountAndhraPradeshdeceased","stateDistCountUttarakhandactive","stateDistCountUttarakhandrecoverd","stateDistCountUttarakhanddeceased","stateDistCountOdishaactive","stateDistCountOdisharecoverd","stateDistCountOdishadeceased","stateDistCountPuducherryactive","stateDistCountPuducherryrecoverd","stateDistCountPuducherrydeceased","stateDistCountWestBengalactive","stateDistCountWestBengalrecoverd","stateDistCountWestBengaldeceased","stateDistCountChandigarhactive","stateDistCountChandigarhrecoverd","stateDistCountChandigarhdeceased","stateDistCountGujaratactive","stateDistCountGujaratrecoverd","stateDistCountGujaratdeceased","stateDistCountHimachalPradeshactive","stateDistCountHimachalPradeshrecoverd","stateDistCountHimachalPradeshdeceased","stateDistCountMadhyaPradeshactive","stateDistCountMadhyaPradeshrecoverd","stateDistCountMadhyaPradeshdeceased","stateDistCountBiharactive","stateDistCountBiharrecoverd","stateDistCountBihardeceased","stateDistCountManipuractive","stateDistCountManipurrecoverd","stateDistCountManipurdeceased","stateDistCountMizoramactive","stateDistCountMizoramrecoverd","stateDistCountMizoramdeceased","stateDistCountGoaactive","stateDistCountGoarecoverd","stateDistCountGoadeceased","stateDistCountAndamanandNicobarIslandsactive","stateDistCountAndamanandNicobarIslandsrecoverd","stateDistCountAndamanandNicobarIslandsdeceased","stateDistCountJharkhandactive","stateDistCountJharkhandrecoverd","stateDistCountJharkhanddeceased","stateDistCountAssamactive","stateDistCountAssamrecoverd","stateDistCountAssamdeceased","stateDistCountArunachalPradeshactive","stateDistCountArunachalPradeshrecoverd","stateDistCountArunachalPradeshdeceased","stateDistCountDadraandNagarHaveliactive","stateDistCountDadraandNagarHavelirecoverd","stateDistCountDadraandNagarHavelideceased","stateDistCountTripuraactive","stateDistCountTripurarecoverd","stateDistCountTripuradeceased","stateDistCountNagalandaactive","stateDistCountNagalandarecoverd","stateDistCountNagalandadeceased","stateDistCountMeghalayaactive","stateDistCountMeghalayarecoverd","stateDistCountMeghalayadeceased","chartlabels","React","TabPanel","children","other","component","role","hidden","aria-labelledby","Box","p","a11yProps","flexGrow","palette","paper","dark_tabpanel_bg","tabpanel","dark_tabpnel","dark_tabtext","setValue","AppBar","position","Tabs","onChange","event","newValue","scrollButtons","indicatorColor","textColor","centered","aria-label","Tab","icon","textTransform","confirmChild1","alignItem","confirmChild2","up","activeChild1","activeChild2","recoveredChild1","recoveredChild2","deceasedChild1","deceasedChild2","FirstGridRow","SecondGridRow","ThirdGridRow","FourthGridRow","statewisedata","marginRight","dark_statewisedata","statechild","dark_statechild","statechild2","covidsymbol","highsysmbol","avgsysmbol","lowsysmbol","countryStat","setCountryStat","ConfirmCount","setConfirmCount","ActivityCount","setActivityCount","RecoveredCount","setRecoveredCount","DeceasedCount","setDeceasedCount","stat","statewise","deaths","deltaconfirmed","deltarecovered","deltadeaths","months","formatDate","unformattedDate","day","slice","month","year","time","appUpdateDiv","appUpdateFont1","dark_appUpdateFont1","appUpdateFont2","dark_appUpdateFont2","appUpdateFont3","appUpdateFont4","appUpdateFont5","setStates","fetched","setFetched","lastUpdated","setLastUpdated","getStates","a","Promise","all","axios","get","lastupdatedtime","isNaN","Date","parse","formatDistance","formatDateAbsolute","banner_parent","dark_banner_parent","banner","banner_text","dark_banner_text","Quotes","setQuotes","setInterval","quotes","randomNum","Math","abs","floor","random","factoids","GlobalStat","isModelVisible","WorldCountries","WorldCountriesCopy","getWorldCountryCases","nextProp","isCountryModalVisible","catch","err","error","e","target","searchedResult","filter","country","toLowerCase","includes","InputBase","handleCountrySearch","placeholder","inputProps","IconButton","Divider","orientation","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","eachCountry","scope","countryInfo","iso2","countryCode","svg","todayCases","todayDeaths","cases","WorldMap","isMapModalVisible","DailyCovidNews","DailyCovid19News","getCovidNews","isNewsModalVisible","myHeaders","Headers","append","method","headers","redirect","news","List","News","ListItem","ListItemAvatar","Avatar","alt","src","ListItemText","primary","title","secondary","excerpt","href","ampWebUrl","navbar","boxShadow","darkmode_bg","globalstat","darkglobalstat","darknotibell","notibell","modeswitch","transform","darkmodeswitch","grow","text","inherit","darktitle","sectionDesktop","sectionMobile","DarkModeAction","NewsCount","setNewsCount","setModalVisible","setNewsModalVisible","mobileMoreAnchorEl","setMobileMoreAnchorEl","isMobileMenuOpen","Boolean","handleDarkMode","handleCountryRecords","handleCovidNews","renderMobileMenu","Menu","anchorEl","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","open","onClose","MenuItem","Badge","badgeContent","Toolbar","noWrap","aria-controls","aria-haspopup","currentTarget","exact","path","Covidquotes","stateData","GoTo","darkapp","NavBar","window","location","hostname","match","initialState","combineReducers","action","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.f5b3b3e6.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './StateDetails.css';\r\nimport $ from 'jquery';\r\nimport Card from '@material-ui/core/Card';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport _ from 'lodash';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CountUp from 'react-countup';\r\nimport { connect } from 'react-redux';\r\n \r\n\r\nclass StateDetails extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      dynamicClassname:'extraCls',\r\n      sliderLog:'',\r\n      clearhandleautoslide:'',\r\n      StateWiseData:[],\r\n      StateTotalCases:[]\r\n    }\r\n  }\r\n  abortController = new AbortController()\r\n  componentDidMount(){\r\n    this.fetchStatesDetails();\r\n  }\r\n  componentWillUnmount(){\r\n    this.abortController.abort()\r\n  }\r\n  fetchStatesDetails(){\r\n    fetch('https://api.covid19india.org/state_district_wise.json', {signal : this.abortController.signal})\r\n    .then(res => res.json())\r\n    .then(statewisedetails =>{ \r\n      this.setState({ StateWiseData : {...statewisedetails} })\r\n      const statesTotalCount = [\r\n        {\r\n          state: '',\r\n          Districts:{}\r\n        }\r\n      ];\r\n      const stateTotalCases = [\r\n        {\r\n          state:'',\r\n          TotalCases:0\r\n        }\r\n      ]\r\n      let stateDistCountKerala = 0;\r\n      let stateDistCountDelhi = 0;\r\n      let stateDistCountTelangana = 0;\r\n      let stateDistCountRajasthan = 0;\r\n      let stateDistCountHaryana =0;\r\n      let UttarPradesh =0;\r\n      let Ladakh =0;\r\n      let TamilNadu =0;\r\n      let JammuandKashmir =0;\r\n      let Karnataka =0;\r\n      let Maharashtra =0;\r\n      let Punjab =0;\r\n      let AndhraPradesh =0;\r\n      let Uttarakhand =0;\r\n      let Odisha =0;\r\n      let Puducherry =0;\r\n      let WestBengal =0;\r\n      let Chandigarh =0;\r\n      let Gujarat =0;\r\n      let HimachalPradesh =0;\r\n      let MadhyaPradesh =0;\r\n      let Bihar =0;\r\n      let Manipur =0;\r\n      let Mizoram =0;\r\n      let Goa =0;\r\n      let AndamanandNicobarIslands =0;\r\n      let Jharkhand =0;\r\n      let Assam =0;\r\n      let ArunachalPradesh =0;\r\n      let DadraandNagarHaveli =0;\r\n      let Tripura =0;\r\n      let Nagaland =0;\r\n      let Meghalaya =0;\r\n\r\n      for(let state in statewisedetails){\r\n        statesTotalCount.push({state:state,Districts:statewisedetails[state].districtData})\r\n      }\r\n      for(let i=1; i<statesTotalCount.length; i++){\r\n        for(let district in statesTotalCount[i].Districts){\r\n          if(statesTotalCount[i].state == statesTotalCount[i].state){\r\n              if(statesTotalCount[i].state == 'Kerala'){\r\n                stateDistCountKerala += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'Delhi'){\r\n                stateDistCountDelhi += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'Telangana'){\r\n                stateDistCountTelangana += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'Rajasthan'){\r\n                stateDistCountRajasthan += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'Haryana'){\r\n                stateDistCountHaryana += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'Uttar Pradesh'){\r\n                UttarPradesh += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'Ladakh'){\r\n                Ladakh += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'Tamil Nadu'){\r\n                TamilNadu += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'Jammu and Kashmir'){\r\n                JammuandKashmir += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'Karnataka'){\r\n                Karnataka += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'Maharashtra'){\r\n                Maharashtra += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'Punjab'){\r\n                Punjab += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'Andhra Pradesh'){\r\n                AndhraPradesh += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'Uttarakhand'){\r\n                Uttarakhand += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'Odisha'){\r\n                Odisha += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'Puducherry'){\r\n                Puducherry += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'West Bengal'){\r\n                WestBengal += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'Chandigarh'){\r\n                Chandigarh += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'Gujarat'){\r\n                Gujarat += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'Himachal Pradesh'){\r\n                HimachalPradesh += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'Madhya Pradesh'){\r\n                MadhyaPradesh += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'Bihar'){\r\n                Bihar += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'Manipur'){\r\n                Manipur += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'Mizoram'){\r\n                Mizoram += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'Goa'){\r\n                Goa += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'Andaman and Nicobar Islands'){\r\n                AndamanandNicobarIslands += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'Jharkhand'){\r\n                Jharkhand += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'Assam'){\r\n                Assam += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'Arunachal Pradesh'){\r\n                ArunachalPradesh += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'Dadra and Nagar Haveli'){\r\n                DadraandNagarHaveli += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'Tripura'){\r\n                Tripura += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'Nagaland'){\r\n                Nagaland += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'Meghalaya'){\r\n                Meghalaya += statesTotalCount[i].Districts[district].confirmed\r\n              }\r\n          }\r\n        }\r\n      }\r\n\r\n      const StateArray = [\r\n        {state:'Kerala',totalcases:stateDistCountKerala},\r\n        {state:'Delhi',totalcases:stateDistCountDelhi},\r\n        {state:'Telangana',totalcases:stateDistCountTelangana},\r\n        {state:'Rajasthan',totalcases:stateDistCountRajasthan},\r\n        {state:'Haryana',totalcases:stateDistCountHaryana},\r\n        {state:'UttarPradesh',totalcases:UttarPradesh},\r\n        {state:'Ladakh',totalcases:Ladakh},\r\n        {state:'TamilNadu',totalcases:TamilNadu},\r\n        {state:'JammuandKashmir',totalcases:JammuandKashmir},\r\n        {state:'Karnataka',totalcases:Karnataka},\r\n        {state:'Maharashtra',totalcases:Maharashtra},\r\n        {state:'Punjab',totalcases:Punjab},\r\n        {state:'AndhraPradesh',totalcases:AndhraPradesh},\r\n        {state:'Uttarakhand',totalcases:Uttarakhand},\r\n        {state:'Odisha',totalcases:Odisha},\r\n        {state:'Puducherry',totalcases:Puducherry},\r\n        {state:'WestBengal',totalcases:WestBengal},\r\n        {state:'Chandigarh',totalcases:Chandigarh},\r\n        {state:'Gujarat',totalcases:Gujarat},\r\n        {state:'HimachalPradesh',totalcases:HimachalPradesh},\r\n        {state:'MadhyaPradesh',totalcases:MadhyaPradesh},\r\n        {state:'Bihar',totalcases:Bihar},\r\n        {state:'Manipur',totalcases:Manipur},\r\n        {state:'Mizoram',totalcases:Mizoram},\r\n        {state:'Goa',totalcases:Goa},\r\n        {state:'AndamanandNicobarIslands',totalcases:AndamanandNicobarIslands},\r\n        {state:'Jharkhand',totalcases:Jharkhand},\r\n        {state:'Assam',totalcases:Assam},\r\n        {state:'ArunachalPradesh',totalcases:ArunachalPradesh},\r\n        {state:'DadraandNagarHaveli',totalcases:DadraandNagarHaveli},\r\n        {state:'Tripura',totalcases:Tripura},\r\n        {state:'Nagaland',totalcases:Nagaland},\r\n        {state:'Meghalaya',totalcases:Meghalaya},\r\n      ]\r\n      const topStates = [\r\n        {\r\n        state:'',\r\n        total:0\r\n        }\r\n      ];\r\n      this.setState({ StateTotalCases: StateArray})\r\n      this.state.StateTotalCases.map((item) =>{\r\n         if(item.totalcases > 1000)\r\n         {\r\n          topStates.push({state:item.state,total:item.totalcases})\r\n         }\r\n      })\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Grid container\r\n        justify=\"space-evenly\"\r\n        alignItems=\"center\"\r\n        >\r\n          <Grid item md={11}>\r\n            <Card variant=\"outlined\" className={(this.props.darkmode)? 'dark_card' : '' }>\r\n              <CardContent>\r\n              <div style={{'display':'grid'}}>\r\n          <span style={{'width': '101%'}} className={(this.props.darkmode)? 'dark_covidsymbol' : 'covidsymbol' }><span className='highsysmbol'></span>States above <big  className='stateTotal'>1000</big> covid cases.</span><span className={(this.props.darkmode)? 'dark_covidsymbol' : 'covidsymbol' }><span className='avgsysmbol'></span>States above <big className='stateTotal'>500</big> covid cases.</span><span className={(this.props.darkmode)? 'dark_covidsymbol' : 'covidsymbol' }><span className='lowsysmbol'></span>States below <big className='stateTotal'>100</big> covid cases.</span>\r\n        </div>\r\n                <Grid container  spacing={2}>\r\n\r\n                  {\r\n                    this.state.StateTotalCases.map((stateWiseDetails, index) =>{\r\n                        return <Grid item xs={6} md={2} key={index}>\r\n                                  <Card variant=\"outlined\">\r\n                                    <CardContent className={(stateWiseDetails.totalcases > 1000 )? 'highCases': (stateWiseDetails.totalcases < 100)? 'safeZone' : 'avrageCases'}>\r\n                                      <div>\r\n                                      <Typography  className='stateCards'>\r\n                                        {stateWiseDetails.state}\r\n                                      </Typography>\r\n                                      </div>\r\n                                      <div>\r\n                                      <Typography  className='statetotal'>\r\n                                      <CountUp end={stateWiseDetails.totalcases} duration={3.75} separator=\",\"></CountUp> \r\n                                      </Typography>\r\n                                      </div>\r\n                                    </CardContent>\r\n                                  </Card>\r\n                                </Grid>\r\n                    })\r\n                  }\r\n                </Grid>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n  return {\r\n      darkmode : state.response.darkmode\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(StateDetails);","import React, { useState,useEffect } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { ComposableMap, Geographies, Geography } from 'react-simple-maps';\r\nimport { scaleQuantile } from 'd3-scale';\r\nimport ReactTooltip from 'react-tooltip';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CountUp from 'react-countup';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { SingleState } from '../../Actions/Single_State.js';\r\n\r\nconst useStyles = makeStyles((theme) =>({\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    justifyContent : 'center',\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n      width: theme.spacing(12),\r\n      height: theme.spacing(10),\r\n      [theme.breakpoints.down('xs')]: {\r\n        margin: theme.spacing(1),\r\n        width: theme.spacing(7),\r\n        height: theme.spacing(7),\r\n      }\r\n\r\n    },\r\n  },\r\n  notavailable:{\r\n    fontSize: '12px !important'\r\n  },\r\n  confirm_paper:{\r\n    background: 'rgba(255,7,58,.12549) !important'\r\n  },\r\n  active_paper:{\r\n    background: '#E7F9FE'\r\n  },\r\n  recovered_paper:{\r\n    background: '#CDFFCD'\r\n  },\r\n  deceased_paper:{\r\n    background: '#E6E6E2'\r\n  },\r\n  state:{\r\n    color: '#007bff',\r\n    textAlign: 'center',\r\n    fontWeight: 900,\r\n    fontFamily: 'archia'\r\n  },\r\n  linkstatepage: {\r\n    cursor: 'pointer',\r\n    marginLeft: '18%',\r\n    fontFamily: 'archia',\r\n    background: 'rgba(255,193,7,.12549)',\r\n    borderRadius: '5px',\r\n    color: '#fd7e14',\r\n    fontSize: '.75rem',\r\n    padding: '.5rem',\r\n    textDecoration: 'none',\r\n    transition: 'all .2s ease-in-out'\r\n  },\r\n  confirm:{\r\n    fontSize: '12px',\r\n    textAlign: 'center',\r\n    fontWeight: 900,\r\n    fontFamily: 'archia',\r\n    color: 'rgba(255,7,58,.6)',\r\n    marginTop: '12px',\r\n    [theme.breakpoints.down('xs')]: {\r\n      fontSize: '8px',\r\n    }\r\n  },\r\n  active:{\r\n    fontSize: '12px',\r\n    textAlign: 'center',\r\n    fontWeight: 900,\r\n    fontFamily: 'archia',\r\n    color: 'rgba(0,123,255,.6)',\r\n    marginTop: '12px',\r\n    [theme.breakpoints.down('xs')]: {\r\n      fontSize: '8px',\r\n    }\r\n  },\r\n  recovered:{\r\n    fontSize: '12px',\r\n    textAlign: 'center',\r\n    fontWeight: 900,\r\n    fontFamily: 'archia',\r\n    color: 'rgba(40,167,69,.6)',\r\n    marginTop: '12px',\r\n    [theme.breakpoints.down('xs')]: {\r\n      fontSize: '8px',\r\n    }\r\n  },\r\n  deceased:{\r\n    fontSize: '12px',\r\n    textAlign: 'center',\r\n    fontWeight: 900,\r\n    fontFamily: 'archia',\r\n    color: 'rgba(108,117,125,.6)',\r\n    marginTop: '12px',\r\n    [theme.breakpoints.down('xs')]: {\r\n      fontSize: '8px',\r\n    }\r\n  },\r\n  confirmCount:{\r\n    color: '#ff073a',\r\n    textAlign: 'center',\r\n    fontWeight: 900,\r\n    fontFamily: 'archia',\r\n    fontSize: '20px',\r\n    [theme.breakpoints.down('xs')]: {\r\n      fontSize: '14px',\r\n    }\r\n  },\r\n  activeCount:{\r\n    color: '#007bff',\r\n    textAlign: 'center',\r\n    fontWeight: 900,\r\n    fontFamily: 'archia',\r\n    fontSize: '20px',\r\n    [theme.breakpoints.down('xs')]: {\r\n      fontSize: '14px',\r\n    }\r\n  },\r\n  recoveredCount:{\r\n    color: '#28a745',\r\n    textAlign: 'center',\r\n    fontWeight: 900,\r\n    fontFamily: 'archia',\r\n    fontSize: '20px',\r\n    [theme.breakpoints.down('xs')]: {\r\n      fontSize: '14px',\r\n    }\r\n  },\r\n  decreasedCount:{\r\n    color: '#6c757d',\r\n    textAlign: 'center',\r\n    fontWeight: 900,\r\n    fontFamily: 'archia',\r\n    fontSize: '20px',\r\n    [theme.breakpoints.down('xs')]: {\r\n      fontSize: '14px',\r\n    }\r\n  },\r\n  GridRow: {\r\n    marginTop: '10px !important'\r\n  }\r\n}))\r\nconst INDIA_TOPO_JSON = require('./india.topo.json');\r\n\r\nconst PROJECTION_CONFIG = {\r\n  scale: 350,\r\n  center: [78.9629, 22.5937] \r\n};\r\n\r\n// Red Variants\r\nconst COLOR_RANGE = [\r\n  '#ffedea',\r\n  '#ffcec5',\r\n  '#ffad9f',\r\n  '#ff8a75',\r\n  '#ff5533',\r\n  '#e2492d',\r\n  '#be3d26',\r\n  '#9a311f',\r\n  '#782618'\r\n];\r\n\r\nconst DEFAULT_COLOR = '#EEE';\r\n\r\nconst getRandomInt = () => {\r\n  return parseInt(Math.random() * 100);\r\n};\r\n\r\nconst geographyStyle = {\r\n  default: {\r\n    outline: 'none'\r\n  },\r\n  hover: {\r\n    fill: '#ccc',\r\n    transition: 'all 250ms',\r\n    outline: 'none'\r\n  },\r\n  pressed: {\r\n    outline: 'none'\r\n  }\r\n};\r\n\r\nconst getHeatMapData = () => {\r\n  return [\r\n    { id: 'AP', state: 'Andhra Pradesh', value: 0 },\r\n    { id: 'AR', state: 'Arunachal Pradesh', value: 0 },\r\n    { id: 'AS', state: 'Assam', value: 0 },\r\n    { id: 'BR', state: 'Bihar', value: 0 },\r\n    { id: 'CT', state: 'Chhattisgarh', value: 0 },\r\n    { id: 'GA', state: 'Goa', value: 0 },\r\n    { id: 'GJ', state: 'Gujarat', value: 0 },\r\n    { id: 'HR', state: 'Haryana', value: 0 },\r\n    { id: 'HP', state: 'Himachal Pradesh', value: 0 },\r\n    { id: 'JH', state: 'Jharkhand', value: 0 },\r\n    { id: 'KA', state: 'Karnataka', value: 0 },\r\n    { id: 'KL', state: 'Kerala', value: 0 },\r\n    { id: 'MP', state: 'Madhya Pradesh', value: 0 },\r\n    { id: 'MH', state: 'Maharashtra', value: 0 },\r\n    { id: 'MN', state: 'Manipur', value: 0 },\r\n    { id: 'ML', state: 'Meghalaya', value: 0 },\r\n    { id: 'MZ', state: 'Mizoram', value: 0 },\r\n    { id: 'NL', state: 'Nagaland', value: 0 },\r\n    { id: 'OR', state: 'Orissa', value: 0 },\r\n    { id: 'PB', state: 'Punjab', value: 0 },\r\n    { id: 'RJ', state: 'Rajasthan', value: 0 },\r\n    { id: 'SK', state: 'Sikkim', value: 0 },\r\n    { id: 'TN', state: 'Tamil Nadu', value: 0 },\r\n    { id: 'TG', state: 'Telangana', value: 0 },\r\n    { id: 'TR', state: 'Tripura', value: 0 },\r\n    { id: 'UT', state: 'Uttarakhand', value: 0 },\r\n    { id: 'UP', state: 'Uttar Pradesh', value: 0 },\r\n    { id: 'WB', state: 'West Bengal', value: 0 },\r\n    { id: 'WB', state: 'West Bengal', value: 0 },\r\n    { id: 'AN', state: 'Andaman and Nicobar Islands', value: 0 },\r\n    { id: 'CH', state: 'Chandigarh', value: 0 },\r\n    { id: 'DN', state: 'Dadra and Nagar Haveli', value: 0 },\r\n    { id: 'DD', state: 'Daman and Diu', value: 0 },\r\n    { id: 'DL', state: 'Delhi', value: 0 },\r\n    { id: 'JK', state: 'Jammu and Kashmir', value: 0 },\r\n    { id: 'LA', state: 'Ladakh', value: 0 },\r\n    { id: 'LD', state: 'Lakshadweep', value: 0 },\r\n    { id: 'PY', state: 'Puducherry', value: 0 }\r\n  ];\r\n};\r\n\r\nfunction App(props) {\r\n\r\n  const classes = useStyles();\r\n  const [tooltipContent, setTooltipContent] = useState('');\r\n  const [stateContent, setstateContent] = useState('');\r\n  const [stateTotal,setstateTotal] = useState(0);\r\n  const [stateactiveTotal,setstateactiveTotal] = useState(0);\r\n  const [staterecoveredTotal,setstaterecoveredTotal] = useState(0);\r\n  const [statedeceasedTotal,setstatedeceasedTotal] = useState(0);\r\n\r\n\r\n  const [data, setData] = useState(getHeatMapData());\r\n\r\n  useEffect(()=>{\r\n    console.log('singleStateData',props.stateResponse)\r\n      if(props.StateMapData.length !== 0){\r\n    const getHeatMapData2 = () => {\r\n        return [\r\n          { id: 'OR', state: 'Orissa', value: props.StateMapData[14].totalcases,active:props.StateMapData[14].activetotal,recovered:props.StateMapData[14].recoveredtotal,deceased:props.StateMapData[14].deceasedtotal },\r\n          { id: 'AP', state: 'Andhra Pradesh', value: props.StateMapData[12].totalcases,active:props.StateMapData[12].activetotal,recovered:props.StateMapData[12].recoveredtotal,deceased:props.StateMapData[12].deceasedtotal },\r\n          { id: 'AR', state: 'Arunachal Pradesh', value: props.StateMapData[28].totalcases,active:props.StateMapData[28].activetotal,recovered:props.StateMapData[28].recoveredtotal,deceased:props.StateMapData[28].deceasedtotal },\r\n          { id: 'AS', state: 'Assam', value: props.StateMapData[27].totalcases,active: props.StateMapData[27].activetotal,recovered: props.StateMapData[27].recoveredtotal,deceased: props.StateMapData[27].deceasedtotal },\r\n          { id: 'BR', state: 'Bihar', value: props.StateMapData[21].totalcases,active:props.StateMapData[21].activetotal,recovered:props.StateMapData[21].recoveredtotal,deceased:props.StateMapData[21].deceasedtotal },\r\n          // { id: 'CT', state: 'Chhattisgarh', value: props.StateMapData[17].totalcases,active:props.StateMapData[17].activetotal,recovered:props.StateMapData[17].recoveredtotal,deceased:props.StateMapData[17].deceasedtotal },\r\n          { id: 'GA', state: 'Goa', value: props.StateMapData[24].totalcases,active:props.StateMapData[24].activetotal,recovered:props.StateMapData[24].recoveredtotal,deceased:props.StateMapData[24].deceasedtotal },\r\n          { id: 'GJ', state: 'Gujarat', value: props.StateMapData[18].totalcases,active:props.StateMapData[18].activetotal,recovered:props.StateMapData[18].recoveredtotal,deceased:props.StateMapData[18].deceasedtotal },\r\n          { id: 'HR', state: 'Haryana', value: props.StateMapData[4].totalcases,active:props.StateMapData[4].activetotal,recovered:props.StateMapData[4].recoveredtotal,deceased:props.StateMapData[4].deceasedtotal },\r\n          { id: 'HP', state: 'Himachal Pradesh', value: props.StateMapData[19].totalcases,active:props.StateMapData[19].activetotal,recovered:props.StateMapData[19].recoveredtotal,deceased:props.StateMapData[19].deceasedtotal },\r\n          { id: 'JH', state: 'Jharkhand', value: props.StateMapData[26].totalcases,active:props.StateMapData[26].activetotal,recovered:props.StateMapData[26].recoveredtotal,deceased:props.StateMapData[26].deceasedtotal },\r\n          { id: 'KA', state: 'Karnataka', value: props.StateMapData[9].totalcases,active:props.StateMapData[9].activetotal,recovered:props.StateMapData[9].recoveredtotal,deceased:props.StateMapData[9].deceasedtotal },\r\n          { id: 'KL', state: 'Kerala', value: props.StateMapData[0].totalcases, active: props.StateMapData[0].activetotal, recovered: props.StateMapData[0].recoveredtotal,deceased: props.StateMapData[0].deceasedtotal},\r\n          { id: 'MP', state: 'Madhya Pradesh', value: props.StateMapData[20].totalcases,active:props.StateMapData[20].activetotal,recovered:props.StateMapData[20].recoveredtotal,deceased:props.StateMapData[20].deceasedtotal },\r\n          { id: 'MH', state: 'Maharashtra', value: props.StateMapData[10].totalcases,active:props.StateMapData[10].activetotal,recovered:props.StateMapData[10].recoveredtotal,deceased: props.StateMapData[10].deceasedtotal},\r\n          { id: 'MN', state: 'Manipur', value: props.StateMapData[22].totalcases,active:props.StateMapData[22].activetotal,recovered:props.StateMapData[22].recoveredtotal,deceased:props.StateMapData[22].deceasedtotal },\r\n          { id: 'ML', state: 'Meghalaya', value: props.StateMapData[32].totalcases,active:props.StateMapData[32].activetotal,recovered:props.StateMapData[32].recoveredtotal,deceased:props.StateMapData[32].deceasedtotal },\r\n          { id: 'MZ', state: 'Mizoram', value: props.StateMapData[23].totalcases,active:props.StateMapData[23].activetotal,recovered:props.StateMapData[23].recoveredtotal,deceased:props.StateMapData[23].deceasedtotal },\r\n          { id: 'NL', state: 'Nagaland', value: props.StateMapData[31].totalcases,active:props.StateMapData[31].activetotal,recovered:props.StateMapData[31].recoveredtotal,deceased:props.StateMapData[31].deceasedtotal },\r\n          \r\n          { id: 'PB', state: 'Punjab', value: props.StateMapData[11].totalcases,active:props.StateMapData[11].activetotal,recovered:props.StateMapData[11].recoveredtotal,deceased:props.StateMapData[11].deceasedtotal },\r\n          { id: 'RJ', state: 'Rajasthan', value: props.StateMapData[3].totalcases,active:props.StateMapData[3].activetotal,recovered:props.StateMapData[3].recoveredtotal,deceased:props.StateMapData[3].deceasedtotal },\r\n          { id: 'SK', state: 'Sikkim', value: 'NA' },\r\n          { id: 'TN', state: 'Tamil Nadu', value: props.StateMapData[7].totalcases,active:props.StateMapData[7].activetotal,recovered:props.StateMapData[7].recoveredtotal,deceased:props.StateMapData[7].deceasedtotal },\r\n          { id: 'TG', state: 'Telangana', value: props.StateMapData[2].totalcases,active:props.StateMapData[2].activetotal,recovered:props.StateMapData[2].recoveredtotal,deceased:props.StateMapData[2].deceasedtotal },\r\n          { id: 'TR', state: 'Tripura', value: props.StateMapData[30].totalcases,active:props.StateMapData[30].activetotal,recovered:props.StateMapData[30].recoveredtotal,deceased: props.StateMapData[30].deceasedtotal},\r\n          { id: 'UT', state: 'Uttarakhand', value: props.StateMapData[13].totalcases,active:props.StateMapData[13].activetotal,recovered:props.StateMapData[13].recoveredtotal,deceased:props.StateMapData[13].deceasedtotal },\r\n          { id: 'UP', state: 'Uttar Pradesh', value: props.StateMapData[5].totalcases,active:props.StateMapData[5].activetotal,recovered:props.StateMapData[5].recoveredtotal,deceased:props.StateMapData[5].deceasedtotal },\r\n          { id: 'WB', state: 'West Bengal', value: props.StateMapData[16].totalcases,active:props.StateMapData[16].activetotal,recovered:props.StateMapData[16].recoveredtotal,deceased:props.StateMapData[16].deceasedtotal },\r\n          { id: 'AN', state: 'Andaman and Nicobar Islands', value: props.StateMapData[25].totalcases,active:props.StateMapData[25].activetotal,recovered:props.StateMapData[25].recoveredtotal,deceased:props.StateMapData[25].deceasedtotal },\r\n          { id: 'CH', state: 'Chandigarh', value: props.StateMapData[17].totalcases,active:props.StateMapData[17].activetotal,recovered:props.StateMapData[17].recoveredtotal,deceased:props.StateMapData[17].deceasedtotal },\r\n          { id: 'DN', state: 'Dadra and Nagar Haveli', value: props.StateMapData[29].totalcases,active:props.StateMapData[29].activetotal,recovered:props.StateMapData[29].recoveredtotal,deceased:props.StateMapData[29].deceasedtotal },\r\n          { id: 'DD', state: 'Daman and Diu', value: 'NA' },\r\n          { id: 'DL', state: 'Delhi', value: props.StateMapData[1].totalcases,active:props.StateMapData[1].activetotal,recovered:props.StateMapData[1].recoveredtotal,deceased:props.StateMapData[1].deceasedtotal },\r\n          { id: 'JK', state: 'Jammu and Kashmir', value: props.StateMapData[8].totalcases,active:props.StateMapData[8].activetotal,recovered:props.StateMapData[8].recoveredtotal,deceased:props.StateMapData[8].deceasedtotal },\r\n          { id: 'LA', state: 'Ladakh', value: props.StateMapData[6].totalcases,active:props.StateMapData[6].activetotal,recovered:props.StateMapData[6].recoveredtotal,deceased:props.StateMapData[6].deceasedtotal },\r\n          { id: 'LD', state: 'Lakshadweep', value: \"NA\" },\r\n          { id: 'PY', state: 'Puducherry', value: props.StateMapData[15].totalcases,active:props.StateMapData[15].activetotal,recovered:props.StateMapData[15].recoveredtotal,deceased:props.StateMapData[15].deceasedtotal }\r\n        ]\r\n      }\r\n      setData(getHeatMapData2());\r\n    }else{\r\n        console.log('undefined')\r\n    }\r\n  },[props]);\r\n\r\n  const gradientData = {\r\n    fromColor: COLOR_RANGE[0],\r\n    toColor: COLOR_RANGE[COLOR_RANGE.length - 1],\r\n    min: 0,\r\n    max: data.reduce((max, item) => (item.value > max ? item.value : max), 0)\r\n  };\r\n\r\n  const colorScale = scaleQuantile()\r\n    .domain(data.map(d => d.value))\r\n    .range(COLOR_RANGE);\r\n\r\n  const onMouseEnter = (geo, current = { value: 'NA' }) => {\r\n    return () => {\r\n      console.log('Mapped state',current)\r\n      setTooltipContent(`${geo.properties.name}: ${current.value}`);\r\n      setstateContent(`${geo.properties.name}`);\r\n      setstateTotal(`${current.value}`);\r\n      setstateactiveTotal(`${current.active}`);\r\n      setstaterecoveredTotal(`${current.recovered}`);\r\n      setstatedeceasedTotal(`${current.deceased}`);\r\n    };\r\n  };\r\n\r\n  const onMouseLeave = () => {\r\n    setTooltipContent('');\r\n  };\r\n\r\n  const handelStateRoute = (stateName,confirm,active,recovered,deceased) => {\r\n    console.log('Route Data','State',stateName,'C',confirm,'A',active,'R',recovered,'D',deceased)\r\n    let stateDetails = {\r\n      state: stateName,\r\n      confirm: confirm,\r\n      active:active,\r\n      recovered:recovered,\r\n      deceased:deceased\r\n    }\r\n    props.SingleState(stateDetails)\r\n    props.history.push('/state/' + stateName)\r\n  }\r\n  return (\r\n    <div className=\"full-width-height container\">\r\n      <Grid container className={classes.GridRow}>\r\n        <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n        <div className={classes.root}>\r\n          <Paper elevation={0} className={classes.confirm_paper}>\r\n          <Typography variant=\"subtitle1\" className={classes.confirm} gutterBottom>Confirmed</Typography>\r\n          <Typography variant=\"subtitle1\" className={classes.confirmCount} gutterBottom>\r\n            {\r\n            (stateTotal == 'NA')?<span className={classes.notavailable}>Not Available</span>:<CountUp end={parseInt(stateTotal)} duration={3.75} separator=\",\"></CountUp> \r\n            }\r\n          </Typography>\r\n          </Paper>\r\n          <Paper elevation={0} className={classes.active_paper}>\r\n          <Typography variant=\"subtitle1\" className={classes.active} gutterBottom>Active</Typography>\r\n          <Typography variant=\"subtitle1\" className={classes.activeCount} gutterBottom>\r\n          {\r\n            (stateTotal == 'NA')?<span className={classes.notavailable}>Not Available</span>:<CountUp end={parseInt(stateactiveTotal)} duration={3.75} separator=\",\"></CountUp> \r\n          }\r\n            </Typography>\r\n          </Paper>\r\n          <Paper elevation={0} className={classes.recovered_paper}>\r\n          <Typography variant=\"subtitle1\" className={classes.recovered} gutterBottom>Recovered</Typography>\r\n          <Typography variant=\"subtitle1\" className={classes.recoveredCount} gutterBottom>\r\n          {\r\n            (stateTotal == 'NA')?<span className={classes.notavailable}>Not Available</span>:<CountUp end={parseInt(staterecoveredTotal)} duration={3.75} separator=\",\"></CountUp> \r\n          }\r\n            </Typography>\r\n          </Paper>\r\n          <Paper elevation={0} className={classes.deceased_paper}>\r\n          <Typography variant=\"subtitle1\" className={classes.deceased} gutterBottom>Deceased</Typography>\r\n          <Typography variant=\"subtitle1\" className={classes.decreasedCount} gutterBottom>\r\n          {\r\n            (stateTotal == 'NA')?<span className={classes.notavailable}>Not Available</span>:<CountUp end={parseInt(statedeceasedTotal)} duration={3.75} separator=\",\"></CountUp>  \r\n          }\r\n            </Typography>\r\n          </Paper>\r\n        </div>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid container className={classes.GridRow}>\r\n        <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n        <Typography variant=\"subtitle1\" className={classes.state} gutterBottom>{stateContent || 'No State Selected'}<span className={classes.linkstatepage} onClick={() =>handelStateRoute(stateContent,stateTotal,stateactiveTotal,staterecoveredTotal,statedeceasedTotal)}>Visit state page</span></Typography>\r\n        </Grid>\r\n      </Grid>\r\n      {/* <ReactTooltip>{tooltipContent}</ReactTooltip> */}\r\n        <ComposableMap\r\n          projectionConfig={PROJECTION_CONFIG}\r\n          projection=\"geoMercator\"\r\n          width={350}\r\n          height={190}\r\n          data-tip=\"\"\r\n        >\r\n          <Geographies geography={INDIA_TOPO_JSON}>\r\n            {({ geographies }) =>\r\n              geographies.map(geo => {\r\n                const current = data.find(s => s.id === geo.id);\r\n                return (\r\n                  <Geography\r\n                    key={geo.rsmKey}\r\n                    geography={geo}\r\n                    fill={current ? colorScale(current.value) : DEFAULT_COLOR}\r\n                    style={geographyStyle}\r\n                    onMouseEnter={onMouseEnter(geo, current)}\r\n                    onMouseLeave={onMouseLeave}\r\n                  />\r\n                );\r\n              })\r\n            }\r\n          </Geographies>\r\n        </ComposableMap>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n  return {\r\n      stateResponse : state.steteresponse.singlestate\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, {SingleState})(withRouter(App));\r\n","import { SINGLE_STATE } from './type.js';\r\n\r\nexport const SingleState = (stateobj) => dispatch =>{\r\n    console.log('Single state Action...',stateobj)\r\n    dispatch({type: SINGLE_STATE, payload: stateobj})\r\n}","export const FETCH_QUOTES = 'FETCH_QUOTES';\r\nexport const FETCH_COVID19_NEWS =  'FETCH_COVID19_NEWS';\r\nexport const DARK_MODE = 'DARK_MODE';\r\nexport const SINGLE_STATE = 'SINGLE_STATE';\r\n\r\n\r\n","import React from 'react';\r\nimport './StateDetails.css';\r\nimport { HorizontalBar,Bar } from 'react-chartjs-2';\r\nimport StatMap from '../StateMap/StateMap.js';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nclass StateChart extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n          isVertical: true,\r\n          StateData:[],\r\n          data : {\r\n            labels: [],\r\n            datasets: [\r\n              {\r\n                label: 'States',\r\n                backgroundColor: '#FF4141',\r\n                borderColor: 'none',\r\n                borderWidth: 1,\r\n                hoverBackgroundColor: 'rgba(255,9,12,0.4)',\r\n                hoverBorderColor: 'rgba(255,9,12,1)',\r\n                data: []\r\n              }\r\n            ]\r\n          }\r\n        }\r\n        this.handelGraphToggle = this.handelGraphToggle.bind(this);\r\n    }\r\n    abortController = new AbortController()\r\n    componentDidMount(){\r\n      this.fetchStatesDetails();\r\n    }\r\n    componentWillUnmount(){\r\n      this.abortController.abort()\r\n    }\r\n    handelGraphToggle(){\r\n      if(this.state.isVertical == true){\r\n        this.setState({ isVertical: false })\r\n      }else if(this.state.isVertical == false){\r\n        this.setState({ isVertical: true })\r\n      }\r\n    }\r\n    fetchStatesDetails(){\r\n      fetch('https://api.covid19india.org/state_district_wise.json', {signal: this.abortController.signal})\r\n      .then(res => res.json())\r\n      .then(statewisedetails =>{ \r\n        console.log('State records...',statewisedetails)\r\n        this.setState({ StateWiseData : {...statewisedetails} })\r\n        const statesTotalCount = [\r\n          {\r\n            state: '',\r\n            Districts:{}\r\n          }\r\n        ];\r\n        const stateTotalCases = [\r\n          {\r\n            state:'',\r\n            TotalCases:0\r\n          }\r\n        ]\r\n        //Kerela\r\n        let stateDistCountKerala = 0;\r\n        let stateDistCountKeralaactive = 0;\r\n        let stateDistCountKeralarecoverd = 0;\r\n        let stateDistCountKeraladeceased = 0;\r\n        //Delhi\r\n        let stateDistCountDelhi = 0;\r\n        let stateDistCountDelhiactive = 0;\r\n        let stateDistCountDelhirecoverd = 0;\r\n        let stateDistCountDelhideceased = 0;\r\n        //Telangana\r\n        let stateDistCountTelangana = 0;\r\n        let stateDistCountTelanganaactive = 0;\r\n        let stateDistCountTelanganarecoverd = 0;\r\n        let stateDistCountTelanganadeceased = 0;\r\n        //Rajasthan\r\n        let stateDistCountRajasthan = 0;\r\n        let stateDistCountRajasthanactive = 0; \r\n        let stateDistCountRajasthanrecoverd = 0; \r\n        let stateDistCountRajasthandeceased = 0; \r\n\r\n        //Haryana\r\n        let stateDistCountHaryana =0;\r\n        let stateDistCountHaryanaactive =0; \r\n        let stateDistCountHaryanarecoverd =0; \r\n        let stateDistCountHaryanadeceased =0; \r\n\r\n        //UttarPradesh\r\n        let UttarPradesh =0;\r\n        let stateDistCountUttarPradeshactive =0; \r\n        let stateDistCountUttarPradeshrecoverd =0; \r\n        let stateDistCountUttarPradeshdeceased =0; \r\n\r\n        //Ladakh\r\n        let Ladakh =0;\r\n        let stateDistCountLadakhactive =0; \r\n        let stateDistCountLadakhrecoverd =0; \r\n        let stateDistCountLadakhdeceased =0;\r\n        \r\n        //TamilNadu\r\n        let TamilNadu =0;\r\n        let stateDistCountTamilNaduactive =0; \r\n        let stateDistCountTamilNadurecoverd =0; \r\n        let stateDistCountTamilNadudeceased =0; \r\n\r\n        //JammuandKashmir\r\n        let JammuandKashmir =0;\r\n        let stateDistCountJammuandKashmiractive =0; \r\n        let stateDistCountJammuandKashmirrecoverd =0; \r\n        let stateDistCountJammuandKashmirdeceased =0; \r\n\r\n        //Karnataka\r\n        let Karnataka =0;\r\n        let stateDistCountKarnatakaactive =0; \r\n        let stateDistCountKarnatakarecoverd =0; \r\n        let stateDistCountKarnatakadeceased =0; \r\n\r\n        //Maharashtra\r\n        let Maharashtra =0;\r\n        let stateDistCountMaharashtraactive =0; \r\n        let stateDistCountMaharashtrarecoverd =0; \r\n        let stateDistCountMaharashtradeceased =0; \r\n\r\n        //Punjab\r\n        let Punjab =0;\r\n        let stateDistCountPunjabactive =0; \r\n        let stateDistCountPunjabrecoverd =0; \r\n        let stateDistCountPunjabdeceased =0; \r\n\r\n        //AndhraPradesh\r\n        let AndhraPradesh =0;\r\n        let stateDistCountAndhraPradeshactive =0; \r\n        let stateDistCountAndhraPradeshrecoverd =0; \r\n        let stateDistCountAndhraPradeshdeceased =0; \r\n\r\n        //Uttarakhand\r\n        let Uttarakhand =0;\r\n        let stateDistCountUttarakhandactive =0; \r\n        let stateDistCountUttarakhandrecoverd =0; \r\n        let stateDistCountUttarakhanddeceased =0;\r\n\r\n        //Odisha\r\n        let Odisha =0;\r\n        let stateDistCountOdishaactive =0; \r\n        let stateDistCountOdisharecoverd =0; \r\n        let stateDistCountOdishadeceased =0; \r\n\r\n        //Puducherry\r\n        let Puducherry =0;\r\n        let stateDistCountPuducherryactive =0; \r\n        let stateDistCountPuducherryrecoverd =0; \r\n        let stateDistCountPuducherrydeceased =0; \r\n\r\n        //WestBengal\r\n        let WestBengal =0;\r\n        let stateDistCountWestBengalactive =0;\r\n        let stateDistCountWestBengalrecoverd =0; \r\n        let stateDistCountWestBengaldeceased =0;\r\n\r\n        //Chandigarh\r\n        let Chandigarh =0;\r\n        let stateDistCountChandigarhactive =0; \r\n        let stateDistCountChandigarhrecoverd =0; \r\n        let stateDistCountChandigarhdeceased =0; \r\n\r\n        //Gujarat\r\n        let Gujarat =0;\r\n        let stateDistCountGujaratactive =0; \r\n        let stateDistCountGujaratrecoverd =0; \r\n        let stateDistCountGujaratdeceased =0;\r\n\r\n        //HimachalPradesh\r\n        let HimachalPradesh =0;\r\n        let stateDistCountHimachalPradeshactive =0; \r\n        let stateDistCountHimachalPradeshrecoverd =0; \r\n        let stateDistCountHimachalPradeshdeceased =0; \r\n\r\n        //MadhyaPradesh\r\n        let MadhyaPradesh =0;\r\n        let stateDistCountMadhyaPradeshactive =0; \r\n        let stateDistCountMadhyaPradeshrecoverd =0; \r\n        let stateDistCountMadhyaPradeshdeceased =0; \r\n\r\n        //Bihar\r\n        let Bihar =0;\r\n        let stateDistCountBiharactive =0; \r\n        let stateDistCountBiharrecoverd =0; \r\n        let stateDistCountBihardeceased =0; \r\n\r\n        //Manipur\r\n        let Manipur =0;\r\n        let stateDistCountManipuractive =0; \r\n        let stateDistCountManipurrecoverd =0; \r\n        let stateDistCountManipurdeceased =0;\r\n\r\n        //Mizoram\r\n        let Mizoram =0;\r\n        let stateDistCountMizoramactive =0; \r\n        let stateDistCountMizoramrecoverd =0; \r\n        let stateDistCountMizoramdeceased =0; \r\n\r\n        //Goa\r\n        let Goa =0;\r\n        let stateDistCountGoaactive =0; \r\n        let stateDistCountGoarecoverd =0; \r\n        let stateDistCountGoadeceased =0;\r\n\r\n        //AndamanandNicobarIslands\r\n        let AndamanandNicobarIslands =0;\r\n        let stateDistCountAndamanandNicobarIslandsactive =0; \r\n        let stateDistCountAndamanandNicobarIslandsrecoverd =0; \r\n        let stateDistCountAndamanandNicobarIslandsdeceased =0; \r\n\r\n        //Jharkhand\r\n        let Jharkhand =0;\r\n        let stateDistCountJharkhandactive =0; \r\n        let stateDistCountJharkhandrecoverd =0; \r\n        let stateDistCountJharkhanddeceased =0;\r\n\r\n        //Assam\r\n        let Assam =0;\r\n        let stateDistCountAssamactive =0; \r\n        let stateDistCountAssamrecoverd =0; \r\n        let stateDistCountAssamdeceased =0;\r\n\r\n        //ArunachalPradesh\r\n        let ArunachalPradesh =0;\r\n        let stateDistCountArunachalPradeshactive =0;\r\n        let stateDistCountArunachalPradeshrecoverd =0;\r\n        let stateDistCountArunachalPradeshdeceased =0;\r\n\r\n        //DadraandNagarHaveli\r\n        let DadraandNagarHaveli =0;\r\n        let stateDistCountDadraandNagarHaveliactive =0; \r\n        let stateDistCountDadraandNagarHavelirecoverd =0; \r\n        let stateDistCountDadraandNagarHavelideceased =0; \r\n\r\n        //Tripura\r\n        let Tripura =0;\r\n        let stateDistCountTripuraactive =0;\r\n        let stateDistCountTripurarecoverd =0;\r\n        let stateDistCountTripuradeceased =0;\r\n        //Nagaland\r\n        let Nagaland =0;\r\n        let stateDistCountNagalandaactive =0;\r\n        let stateDistCountNagalandarecoverd =0;\r\n        let stateDistCountNagalandadeceased =0;\r\n\r\n        //Meghalaya\r\n        let Meghalaya =0;\r\n        let stateDistCountMeghalayaactive =0; \r\n        let stateDistCountMeghalayarecoverd =0; \r\n        let stateDistCountMeghalayadeceased =0; \r\n  \r\n        for(let state in statewisedetails){\r\n          statesTotalCount.push({state:state,Districts:statewisedetails[state].districtData})\r\n        }\r\n        for(let i=1; i<statesTotalCount.length; i++){\r\n          for(let district in statesTotalCount[i].Districts){\r\n            if(statesTotalCount[i].state == statesTotalCount[i].state){\r\n                if(statesTotalCount[i].state == 'Kerala'){\r\n                  stateDistCountKerala += statesTotalCount[i].Districts[district].confirmed\r\n                  stateDistCountKeralaactive += statesTotalCount[i].Districts[district].active\r\n                  stateDistCountKeralarecoverd += statesTotalCount[i].Districts[district].recovered\r\n                  stateDistCountKeraladeceased += statesTotalCount[i].Districts[district].deceased\r\n                }else if(statesTotalCount[i].state == 'Delhi'){\r\n                  stateDistCountDelhi += statesTotalCount[i].Districts[district].confirmed\r\n                  stateDistCountDelhiactive += statesTotalCount[i].Districts[district].active\r\n                  stateDistCountDelhirecoverd += statesTotalCount[i].Districts[district].recovered\r\n                  stateDistCountDelhideceased += statesTotalCount[i].Districts[district].deceased\r\n                }else if(statesTotalCount[i].state == 'Telangana'){\r\n                  stateDistCountTelangana += statesTotalCount[i].Districts[district].confirmed\r\n                  stateDistCountTelanganaactive += statesTotalCount[i].Districts[district].active\r\n                  stateDistCountTelanganarecoverd += statesTotalCount[i].Districts[district].recovered\r\n                  stateDistCountTelanganadeceased += statesTotalCount[i].Districts[district].deceased\r\n                }else if(statesTotalCount[i].state == 'Rajasthan'){\r\n                  stateDistCountRajasthan += statesTotalCount[i].Districts[district].confirmed\r\n                  stateDistCountRajasthanactive += statesTotalCount[i].Districts[district].active\r\n                  stateDistCountRajasthanrecoverd += statesTotalCount[i].Districts[district].recovered\r\n                  stateDistCountRajasthandeceased += statesTotalCount[i].Districts[district].deceased\r\n                }else if(statesTotalCount[i].state == 'Haryana'){\r\n                  stateDistCountHaryana += statesTotalCount[i].Districts[district].confirmed\r\n                  stateDistCountHaryanaactive += statesTotalCount[i].Districts[district].active\r\n                  stateDistCountHaryanarecoverd += statesTotalCount[i].Districts[district].recovered\r\n                  stateDistCountHaryanadeceased += statesTotalCount[i].Districts[district].deceased\r\n                }else if(statesTotalCount[i].state == 'Uttar Pradesh'){\r\n                  UttarPradesh += statesTotalCount[i].Districts[district].confirmed\r\n                  stateDistCountUttarPradeshactive += statesTotalCount[i].Districts[district].active\r\n                  stateDistCountUttarPradeshrecoverd += statesTotalCount[i].Districts[district].recovered\r\n                  stateDistCountUttarPradeshdeceased += statesTotalCount[i].Districts[district].deceased\r\n                }else if(statesTotalCount[i].state == 'Ladakh'){\r\n                  Ladakh += statesTotalCount[i].Districts[district].confirmed\r\n                  stateDistCountLadakhactive += statesTotalCount[i].Districts[district].active\r\n                  stateDistCountLadakhrecoverd += statesTotalCount[i].Districts[district].recovered\r\n                  stateDistCountLadakhdeceased += statesTotalCount[i].Districts[district].deceased\r\n                }else if(statesTotalCount[i].state == 'Tamil Nadu'){\r\n                  TamilNadu += statesTotalCount[i].Districts[district].confirmed\r\n                  stateDistCountTamilNaduactive += statesTotalCount[i].Districts[district].active\r\n                  stateDistCountTamilNadurecoverd += statesTotalCount[i].Districts[district].recovered\r\n                  stateDistCountTamilNadudeceased += statesTotalCount[i].Districts[district].deceased\r\n                }else if(statesTotalCount[i].state == 'Jammu and Kashmir'){\r\n                  JammuandKashmir += statesTotalCount[i].Districts[district].confirmed\r\n                  stateDistCountJammuandKashmiractive += statesTotalCount[i].Districts[district].active\r\n                  stateDistCountJammuandKashmirrecoverd += statesTotalCount[i].Districts[district].recovered\r\n                  stateDistCountJammuandKashmirdeceased += statesTotalCount[i].Districts[district].deceased\r\n                }else if(statesTotalCount[i].state == 'Karnataka'){\r\n                  Karnataka += statesTotalCount[i].Districts[district].confirmed\r\n                  stateDistCountKarnatakaactive += statesTotalCount[i].Districts[district].active\r\n                  stateDistCountKarnatakarecoverd += statesTotalCount[i].Districts[district].recovered\r\n                  stateDistCountKarnatakadeceased += statesTotalCount[i].Districts[district].deceased\r\n                }else if(statesTotalCount[i].state == 'Maharashtra'){\r\n                  Maharashtra += statesTotalCount[i].Districts[district].confirmed\r\n                  stateDistCountMaharashtraactive += statesTotalCount[i].Districts[district].active\r\n                  stateDistCountMaharashtrarecoverd += statesTotalCount[i].Districts[district].recovered\r\n                  stateDistCountMaharashtradeceased += statesTotalCount[i].Districts[district].deceased\r\n                }else if(statesTotalCount[i].state == 'Punjab'){\r\n                  Punjab += statesTotalCount[i].Districts[district].confirmed\r\n                  stateDistCountPunjabactive += statesTotalCount[i].Districts[district].active\r\n                  stateDistCountPunjabrecoverd += statesTotalCount[i].Districts[district].recovered\r\n                  stateDistCountPunjabdeceased += statesTotalCount[i].Districts[district].deceased\r\n                }else if(statesTotalCount[i].state == 'Andhra Pradesh'){\r\n                  AndhraPradesh += statesTotalCount[i].Districts[district].confirmed\r\n                  stateDistCountAndhraPradeshactive += statesTotalCount[i].Districts[district].active\r\n                  stateDistCountAndhraPradeshrecoverd += statesTotalCount[i].Districts[district].recovered\r\n                  stateDistCountAndhraPradeshdeceased += statesTotalCount[i].Districts[district].deceased\r\n                }else if(statesTotalCount[i].state == 'Uttarakhand'){\r\n                  Uttarakhand += statesTotalCount[i].Districts[district].confirmed\r\n                  stateDistCountUttarakhandactive += statesTotalCount[i].Districts[district].active\r\n                  stateDistCountUttarakhandrecoverd += statesTotalCount[i].Districts[district].recovered\r\n                  stateDistCountUttarakhanddeceased += statesTotalCount[i].Districts[district].deceased\r\n                }else if(statesTotalCount[i].state == 'Odisha'){\r\n                  Odisha += statesTotalCount[i].Districts[district].confirmed\r\n                  stateDistCountOdishaactive += statesTotalCount[i].Districts[district].active\r\n                  stateDistCountOdisharecoverd += statesTotalCount[i].Districts[district].recovered\r\n                  stateDistCountOdishadeceased += statesTotalCount[i].Districts[district].deceased\r\n                }else if(statesTotalCount[i].state == 'Puducherry'){\r\n                  Puducherry += statesTotalCount[i].Districts[district].confirmed\r\n                  stateDistCountPuducherryactive += statesTotalCount[i].Districts[district].active\r\n                  stateDistCountPuducherryrecoverd += statesTotalCount[i].Districts[district].recovered\r\n                  stateDistCountPuducherrydeceased += statesTotalCount[i].Districts[district].deceased\r\n                }else if(statesTotalCount[i].state == 'West Bengal'){\r\n                  WestBengal += statesTotalCount[i].Districts[district].confirmed\r\n                  stateDistCountWestBengalactive += statesTotalCount[i].Districts[district].active\r\n                  stateDistCountWestBengalrecoverd += statesTotalCount[i].Districts[district].recovered\r\n                  stateDistCountWestBengaldeceased += statesTotalCount[i].Districts[district].deceased\r\n                }else if(statesTotalCount[i].state == 'Chandigarh'){\r\n                  Chandigarh += statesTotalCount[i].Districts[district].confirmed\r\n                  stateDistCountChandigarhactive += statesTotalCount[i].Districts[district].active\r\n                  stateDistCountChandigarhrecoverd += statesTotalCount[i].Districts[district].recovered\r\n                  stateDistCountChandigarhdeceased += statesTotalCount[i].Districts[district].deceased\r\n                }else if(statesTotalCount[i].state == 'Gujarat'){\r\n                  Gujarat += statesTotalCount[i].Districts[district].confirmed\r\n                  stateDistCountGujaratactive += statesTotalCount[i].Districts[district].active\r\n                  stateDistCountGujaratrecoverd += statesTotalCount[i].Districts[district].recovered\r\n                  stateDistCountGujaratdeceased += statesTotalCount[i].Districts[district].deceased\r\n                }else if(statesTotalCount[i].state == 'Himachal Pradesh'){\r\n                  HimachalPradesh += statesTotalCount[i].Districts[district].confirmed\r\n                  stateDistCountHimachalPradeshactive += statesTotalCount[i].Districts[district].active\r\n                  stateDistCountHimachalPradeshrecoverd += statesTotalCount[i].Districts[district].recovered\r\n                  stateDistCountHimachalPradeshdeceased += statesTotalCount[i].Districts[district].deceased\r\n                }else if(statesTotalCount[i].state == 'Madhya Pradesh'){\r\n                  MadhyaPradesh += statesTotalCount[i].Districts[district].confirmed\r\n                  stateDistCountMadhyaPradeshactive += statesTotalCount[i].Districts[district].active\r\n                  stateDistCountMadhyaPradeshrecoverd += statesTotalCount[i].Districts[district].recovered\r\n                  stateDistCountMadhyaPradeshdeceased += statesTotalCount[i].Districts[district].deceased\r\n                }else if(statesTotalCount[i].state == 'Bihar'){\r\n                  Bihar += statesTotalCount[i].Districts[district].confirmed\r\n                  stateDistCountBiharactive += statesTotalCount[i].Districts[district].active\r\n                  stateDistCountBiharrecoverd += statesTotalCount[i].Districts[district].recovered\r\n                  stateDistCountBihardeceased += statesTotalCount[i].Districts[district].deceased\r\n                }else if(statesTotalCount[i].state == 'Manipur'){\r\n                  Manipur += statesTotalCount[i].Districts[district].confirmed\r\n                  stateDistCountManipuractive += statesTotalCount[i].Districts[district].active\r\n                  stateDistCountManipurrecoverd += statesTotalCount[i].Districts[district].recovered\r\n                  stateDistCountManipurdeceased += statesTotalCount[i].Districts[district].deceased\r\n                }else if(statesTotalCount[i].state == 'Mizoram'){\r\n                  Mizoram += statesTotalCount[i].Districts[district].confirmed\r\n                  stateDistCountMizoramactive += statesTotalCount[i].Districts[district].active\r\n                  stateDistCountMizoramrecoverd += statesTotalCount[i].Districts[district].recovered\r\n                  stateDistCountMizoramdeceased += statesTotalCount[i].Districts[district].deceased\r\n                }else if(statesTotalCount[i].state == 'Goa'){\r\n                  Goa += statesTotalCount[i].Districts[district].confirmed\r\n                  stateDistCountGoaactive += statesTotalCount[i].Districts[district].active\r\n                  stateDistCountGoarecoverd += statesTotalCount[i].Districts[district].recovered\r\n                  stateDistCountGoadeceased += statesTotalCount[i].Districts[district].deceased\r\n                }else if(statesTotalCount[i].state == 'Andaman and Nicobar Islands'){\r\n                  AndamanandNicobarIslands += statesTotalCount[i].Districts[district].confirmed\r\n                  stateDistCountAndamanandNicobarIslandsactive += statesTotalCount[i].Districts[district].active\r\n                  stateDistCountAndamanandNicobarIslandsrecoverd += statesTotalCount[i].Districts[district].recovered\r\n                  stateDistCountAndamanandNicobarIslandsdeceased += statesTotalCount[i].Districts[district].deceased\r\n                }else if(statesTotalCount[i].state == 'Jharkhand'){\r\n                  Jharkhand += statesTotalCount[i].Districts[district].confirmed\r\n                  stateDistCountJharkhandactive += statesTotalCount[i].Districts[district].active\r\n                  stateDistCountJharkhandrecoverd += statesTotalCount[i].Districts[district].recovered\r\n                  stateDistCountJharkhanddeceased += statesTotalCount[i].Districts[district].deceased\r\n                }else if(statesTotalCount[i].state == 'Assam'){\r\n                  Assam += statesTotalCount[i].Districts[district].confirmed\r\n                  stateDistCountAssamactive += statesTotalCount[i].Districts[district].active\r\n                  stateDistCountAssamrecoverd += statesTotalCount[i].Districts[district].recovered\r\n                  stateDistCountAssamdeceased += statesTotalCount[i].Districts[district].deceased\r\n                }else if(statesTotalCount[i].state == 'Arunachal Pradesh'){\r\n                  ArunachalPradesh += statesTotalCount[i].Districts[district].confirmed\r\n                  stateDistCountArunachalPradeshactive += statesTotalCount[i].Districts[district].active\r\n                  stateDistCountArunachalPradeshrecoverd += statesTotalCount[i].Districts[district].recovered\r\n                  stateDistCountArunachalPradeshdeceased += statesTotalCount[i].Districts[district].deceased\r\n                }else if(statesTotalCount[i].state == 'Dadra and Nagar Haveli'){\r\n                  DadraandNagarHaveli += statesTotalCount[i].Districts[district].confirmed\r\n                  stateDistCountDadraandNagarHaveliactive += statesTotalCount[i].Districts[district].active\r\n                  stateDistCountDadraandNagarHavelirecoverd += statesTotalCount[i].Districts[district].recovered\r\n                  stateDistCountDadraandNagarHavelideceased += statesTotalCount[i].Districts[district].deceased\r\n                }else if(statesTotalCount[i].state == 'Tripura'){\r\n                  Tripura += statesTotalCount[i].Districts[district].confirmed\r\n                  stateDistCountTripuraactive += statesTotalCount[i].Districts[district].active\r\n                  stateDistCountTripurarecoverd += statesTotalCount[i].Districts[district].recovered\r\n                  stateDistCountTripuradeceased += statesTotalCount[i].Districts[district].deceased\r\n                }else if(statesTotalCount[i].state == 'Nagaland'){\r\n                  Nagaland += statesTotalCount[i].Districts[district].confirmed\r\n                  stateDistCountNagalandaactive += statesTotalCount[i].Districts[district].active\r\n                  stateDistCountNagalandarecoverd += statesTotalCount[i].Districts[district].recovered\r\n                  stateDistCountNagalandadeceased += statesTotalCount[i].Districts[district].deceased\r\n                }else if(statesTotalCount[i].state == 'Meghalaya'){\r\n                  Meghalaya += statesTotalCount[i].Districts[district].confirmed\r\n                  stateDistCountMeghalayaactive += statesTotalCount[i].Districts[district].active\r\n                  stateDistCountMeghalayarecoverd += statesTotalCount[i].Districts[district].recovered\r\n                  stateDistCountMeghalayadeceased += statesTotalCount[i].Districts[district].deceased\r\n                }\r\n            }\r\n          }\r\n        }\r\n        \r\n        const StateArray = [\r\n          {state:'Kerala',totalcases:stateDistCountKerala,activetotal:stateDistCountKeralaactive,recoveredtotal:stateDistCountKeralarecoverd,deceasedtotal:stateDistCountKeraladeceased},\r\n          {state:'Delhi',totalcases:stateDistCountDelhi,activetotal:stateDistCountDelhiactive,recoveredtotal:stateDistCountDelhirecoverd,deceasedtotal:stateDistCountDelhideceased},\r\n          {state:'Telangana',totalcases:stateDistCountTelangana,activetotal:stateDistCountTelanganaactive,recoveredtotal:stateDistCountTelanganarecoverd,deceasedtotal:stateDistCountTelanganadeceased},\r\n          {state:'Rajasthan',totalcases:stateDistCountRajasthan,activetotal:stateDistCountRajasthanactive,recoveredtotal:stateDistCountRajasthanrecoverd,deceasedtotal:stateDistCountRajasthandeceased},\r\n          {state:'Haryana',totalcases:stateDistCountHaryana,activetotal:stateDistCountHaryanaactive,recoveredtotal:stateDistCountHaryanarecoverd,deceasedtotal:stateDistCountHaryanadeceased},\r\n          {state:'UttarPradesh',totalcases:UttarPradesh,activetotal:stateDistCountUttarPradeshactive,recoveredtotal:stateDistCountUttarPradeshrecoverd,deceasedtotal:stateDistCountUttarPradeshdeceased},\r\n          {state:'Ladakh',totalcases:Ladakh,activetotal:stateDistCountLadakhactive,recoveredtotal:stateDistCountLadakhrecoverd,deceasedtotal:stateDistCountLadakhdeceased},\r\n          {state:'TamilNadu',totalcases:TamilNadu,activetotal:stateDistCountTamilNaduactive,recoveredtotal:stateDistCountTamilNadurecoverd,deceasedtotal:stateDistCountTamilNadudeceased},\r\n          {state:'JammuandKashmir',totalcases:JammuandKashmir,activetotal:stateDistCountJammuandKashmiractive,recoveredtotal:stateDistCountJammuandKashmirrecoverd,deceasedtotal:stateDistCountJammuandKashmirdeceased},\r\n          {state:'Karnataka',totalcases:Karnataka,activetotal:stateDistCountKarnatakaactive,recoveredtotal:stateDistCountKarnatakarecoverd,deceasedtotal:stateDistCountKarnatakadeceased},\r\n          {state:'Maharashtra',totalcases:Maharashtra,activetotal:stateDistCountMaharashtraactive,recoveredtotal:stateDistCountMaharashtrarecoverd,deceasedtotal:stateDistCountMaharashtradeceased},\r\n          {state:'Punjab',totalcases:Punjab,activetotal:stateDistCountPunjabactive,recoveredtotal:stateDistCountPunjabrecoverd,deceasedtotal:stateDistCountPunjabdeceased},\r\n          {state:'AndhraPradesh',totalcases:AndhraPradesh,activetotal:stateDistCountAndhraPradeshactive,recoveredtotal:stateDistCountAndhraPradeshrecoverd,deceasedtotal:stateDistCountAndhraPradeshdeceased},\r\n          {state:'Uttarakhand',totalcases:Uttarakhand,activetotal:stateDistCountUttarakhandactive,recoveredtotal:stateDistCountUttarakhandrecoverd,deceasedtotal:stateDistCountUttarakhanddeceased},\r\n          {state:'Odisha',totalcases:Odisha,activetotal:stateDistCountOdishaactive,recoveredtotal:stateDistCountOdisharecoverd,deceasedtotal:stateDistCountOdishadeceased},\r\n          {state:'Puducherry',totalcases:Puducherry,activetotal:stateDistCountPuducherryactive,recoveredtotal:stateDistCountPuducherryrecoverd,deceasedtotal:stateDistCountPuducherrydeceased},\r\n          {state:'WestBengal',totalcases:WestBengal,activetotal:stateDistCountWestBengalactive,recoveredtotal:stateDistCountWestBengalrecoverd,deceasedtotal:stateDistCountWestBengaldeceased},\r\n          {state:'Chandigarh',totalcases:Chandigarh,activetotal:stateDistCountChandigarhactive,recoveredtotal:stateDistCountChandigarhrecoverd,deceasedtotal:stateDistCountChandigarhdeceased},\r\n          {state:'Gujarat',totalcases:Gujarat,activetotal:stateDistCountGujaratactive,recoveredtotal:stateDistCountGujaratrecoverd,deceasedtotal:stateDistCountGujaratdeceased},\r\n          {state:'HimachalPradesh',totalcases:HimachalPradesh,activetotal:stateDistCountHimachalPradeshactive,recoveredtotal:stateDistCountHimachalPradeshrecoverd,deceasedtotal:stateDistCountHimachalPradeshdeceased},\r\n          {state:'MadhyaPradesh',totalcases:MadhyaPradesh,activetotal:stateDistCountMadhyaPradeshactive,recoveredtotal:stateDistCountMadhyaPradeshrecoverd,deceasedtotal:stateDistCountMadhyaPradeshdeceased},\r\n          {state:'Bihar',totalcases:Bihar,activetotal:stateDistCountBiharactive,recoveredtotal:stateDistCountBiharrecoverd,deceasedtotal:stateDistCountBihardeceased},\r\n          {state:'Manipur',totalcases:Manipur,activetotal:stateDistCountManipuractive,recoveredtotal:stateDistCountManipurrecoverd,deceasedtotal:stateDistCountManipurdeceased},\r\n          {state:'Mizoram',totalcases:Mizoram,activetotal:stateDistCountMizoramactive,recoveredtotal:stateDistCountMizoramrecoverd,deceasedtotal:stateDistCountMizoramdeceased},\r\n          {state:'Goa',totalcases:Goa,activetotal:stateDistCountGoaactive,recoveredtotal:stateDistCountGoarecoverd,deceasedtotal:stateDistCountGoadeceased},\r\n          {state:'AndamanandNicobarIslands',totalcases:AndamanandNicobarIslands,activetotal:stateDistCountAndamanandNicobarIslandsactive,recoveredtotal:stateDistCountAndamanandNicobarIslandsrecoverd,deceasedtotal:stateDistCountAndamanandNicobarIslandsdeceased},\r\n          {state:'Jharkhand',totalcases:Jharkhand,activetotal:stateDistCountJharkhandactive,recoveredtotal:stateDistCountJharkhandrecoverd,deceasedtotal:stateDistCountJharkhanddeceased},\r\n          {state:'Assam',totalcases:Assam,activetotal:stateDistCountAssamactive,recoveredtotal:stateDistCountAssamrecoverd,deceasedtotal:stateDistCountAssamdeceased},\r\n          {state:'ArunachalPradesh',totalcases:ArunachalPradesh,activetotal:stateDistCountArunachalPradeshactive,recoveredtotal:stateDistCountArunachalPradeshrecoverd,deceasedtotal:stateDistCountArunachalPradeshdeceased},\r\n          {state:'DadraandNagarHaveli',totalcases:DadraandNagarHaveli,activetotal:stateDistCountDadraandNagarHaveliactive,recoveredtotal:stateDistCountDadraandNagarHavelirecoverd,deceasedtotal:stateDistCountDadraandNagarHavelideceased},\r\n          {state:'Tripura',totalcases:Tripura,activetotal:stateDistCountTripuraactive,recoveredtotal:stateDistCountTripurarecoverd,deceasedtotal:stateDistCountTripuradeceased},\r\n          {state:'Nagaland',totalcases:Nagaland,activetotal:stateDistCountNagalandaactive,recoveredtotal:stateDistCountNagalandarecoverd,deceasedtotal:stateDistCountNagalandadeceased},\r\n          {state:'Meghalaya',totalcases:Meghalaya,activetotal:stateDistCountMeghalayaactive,recoveredtotal:stateDistCountMeghalayarecoverd,deceasedtotal:stateDistCountMeghalayadeceased},\r\n        ]\r\n        this.setState({ StateData: StateArray});\r\n        console.log('All Details State...',this.state.StateData)\r\n\r\n        let labels = [];\r\n        let totalcases = [];\r\n        StateArray.map((state) =>{\r\n          labels.push(state.state);\r\n          totalcases.push(state.totalcases);\r\n        })\r\n        var chartlabels = {...this.state.data}\r\n        chartlabels.labels = [...labels]\r\n        chartlabels.datasets[0].data = [...totalcases]\r\n        this.setState({ data : chartlabels})\r\n      })\r\n    }\r\n    render() {\r\n        return (\r\n          <React.Fragment>\r\n          <Grid item xs={12} sm={12} md={8} lg={12} xl={12}>  \r\n              <Typography variant=\"subtitle1\" className={(this.props.darkmode)? 'dark_statewisedata' : 'statewisedata' } gutterBottom>\r\n                <div style={{'fontWeight': '600'}} >INDIA Map\r\n                  <span className='childtext'>Hover over a state/UT for more details</span>\r\n                </div>\r\n              </Typography>\r\n          </Grid>\r\n          {/* <span className='switch1'>INDIA Map</span> */}\r\n            <div className=\"BarGraph\">\r\n              <StatMap StateMapData={this.state.StateData} />\r\n            </div>\r\n          {/* <div className=\"switch\">\r\n            <input id=\"switch-1\" type=\"checkbox\" className=\"switch-input\" onChange={this.handelGraphToggle} />\r\n              <label htmlFor=\"switch-1\" className=\"switch-label\">Switch</label>\r\n              </div><span className='switch2'>Horizontal</span>\r\n              {\r\n                (this.state.isVertical)?\r\n                 <div className=\"BarGraph\">\r\n                  <StatMap StateMapData={this.state.StateData} />\r\n                <Bar\r\n                  data={this.state.data}\r\n                  width={1000}\r\n                  height={300}\r\n                  options={{\r\n                    scales :{\r\n                      yAxes:[{\r\n                        gridLines: {\r\n                          display : false\r\n                        }\r\n                      }],\r\n                      xAxes:[{\r\n                        gridLines: {\r\n                          display : false\r\n                        },\r\n                        display: false\r\n                      }]\r\n                    },\r\n                    maintainAspectRatio: false\r\n                  }}\r\n            />\r\n               </div> : <div className=\"BarGraph\"><HorizontalBar data={this.state.data} options={{\r\n                    scales :{\r\n                      yAxes:[{\r\n                        gridLines: {\r\n                          display : false\r\n                        }\r\n                      }],\r\n                      xAxes:[{\r\n                        gridLines: {\r\n                          display : false\r\n                        }\r\n                      }]\r\n                    },\r\n                    maintainAspectRatio: false\r\n                  }} /> \r\n                  </div>\r\n              } */}\r\n        \r\n          </React.Fragment>\r\n        );\r\n      }\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n  return {\r\n      darkmode : state.response.darkmode\r\n  }\r\n} \r\n\r\nexport default connect(mapStateToProps)(StateChart);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport NewReleasesIcon from '@material-ui/icons/NewReleases';\r\nimport NetworkCellIcon from '@material-ui/icons/NetworkCell';\r\nimport SignalCellularAltIcon from '@material-ui/icons/SignalCellularAlt';\r\nimport StateDetails from '../StateDetailsSlider/StateDetails.js';\r\nimport StateChart from '../StateDetailsSlider/StateChart.js';\r\nimport './Tab.css';\r\nimport { connect } from 'react-redux';\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <Typography\r\n      component=\"div\"\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`scrollable-force-tabpanel-${index}`}\r\n      aria-labelledby={`scrollable-force-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && <Box p={3}>{children}</Box>}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `scrollable-force-tab-${index}`,\r\n    'aria-controls': `scrollable-force-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    width: '100%',\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  dark_tabpanel_bg :{\r\n    background : '#161625 !important'\r\n  },\r\n  tabpanel:{\r\n    background : \"#fff\"\r\n  },\r\n  dark_tabpnel:{\r\n    background : \"#1e1e30 !important\"\r\n  },\r\n  dark_tabtext : {\r\n    color: '#ADACAC'\r\n  }\r\n}));\r\n\r\nconst  ScrollableTabsButtonForce = (props) => {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(0);\r\n  const [ishorizontal, setHorizontal] = React.useState(false);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Tabs className={(props.darkmode)? classes.dark_tabpnel : classes.root}\r\n          value={value}\r\n          onChange={handleChange}\r\n          scrollButtons=\"on\"\r\n          indicatorColor=\"primary\"\r\n          textColor=\"primary\"\r\n          centered\r\n          aria-label=\"scrollable force tabs example\"\r\n        >\r\n          <Tab  label=\"Demographic\" icon={<NetworkCellIcon />} className={(props.darkmode)? classes.dark_tabtext : \"\"}  {...a11yProps(0)} />\r\n          <Tab  label=\"Statistical\" icon={<SignalCellularAltIcon />} className={(props.darkmode)? classes.dark_tabtext : \"\"} {...a11yProps(1)} />\r\n          {/* <Tab label=\"Comming Soon...\" icon={<NewReleasesIcon />} {...a11yProps(2)} /> */}\r\n        </Tabs>\r\n      </AppBar>\r\n      <TabPanel className={(props.darkmode)? classes.dark_tabpanel_bg : classes.root} value={value} index={0}>\r\n        <StateChart />\r\n      </TabPanel>\r\n      <TabPanel className={(props.darkmode)? classes.dark_tabpanel_bg : classes.root} value={value} index={1}>\r\n        <StateDetails />\r\n      </TabPanel>\r\n      {/* <TabPanel value={value} index={2}>\r\n        Comming Soon...\r\n      </TabPanel> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n  return {\r\n      darkmode : state.response.darkmode\r\n  }\r\n} \r\n\r\nexport default connect(mapStateToProps)(ScrollableTabsButtonForce);","import React, { useState, useEffect } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport StateDetails from '../StateDetailsSlider/StateDetails.js';\r\nimport CountUp from 'react-countup';\r\nimport Tabs from '../TabPanel/Tabs.js';\r\nimport StatMap from '../StateMap/StateMap.js';\r\nimport { connect } from 'react-redux';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  confirm: {\r\n    color: 'rgba(255,7,58,.6)',\r\n    fontFamily: 'archia',\r\n    fontWeight: '900',\r\n    textTransform: 'uppercase',\r\n    fontSize: '12px !important',\r\n  },\r\n  confirmChild1: {\r\n    textAlign: 'center',\r\n    alignItem: 'center',\r\n    justifyContent: 'center',\r\n    marginTop: '.5rem',\r\n    color: 'rgba(255,7,58,.6)',\r\n    fontFamily: 'archia',\r\n    fontWeight: 900,\r\n    fontSize: '12px !important',\r\n    textTransform: 'uppercase'\r\n  },\r\n  confirmChild2: {\r\n    color: '#ff073a',\r\n    fontWeight: '600',\r\n    textAlign: 'center',\r\n    fontFamily: 'archia',\r\n    fontSize: '24px !important',\r\n    fontWeight: '900',\r\n    textTransform: 'uppercase'\r\n\r\n  },\r\n  active: {\r\n    color: 'rgba(0,123,255,.6)',\r\n    fontFamily: 'archia',\r\n    fontWeight: '900',\r\n    textTransform: 'uppercase',\r\n    fontSize: '12px !important',\r\n    [theme.breakpoints.up('xs')]: {\r\n      marginLeft: '20px'\r\n    }\r\n  },\r\n  activeChild1: {\r\n    textAlign: 'center',\r\n    alignItem: 'center',\r\n    justifyContent: 'center',\r\n    marginTop: '.5rem',\r\n    color: '#ffffff',\r\n    fontFamily: 'archia',\r\n    fontWeight: 900,\r\n    fontSize: '12px !important',\r\n    textTransform: 'uppercase'\r\n  },\r\n  activeChild2: {\r\n    color: '#007bff',\r\n    fontWeight: '600',\r\n    textAlign: 'center',\r\n    fontFamily: 'archia',\r\n    fontSize: '24px !important',\r\n    fontWeight: '900',\r\n    textTransform: 'uppercase'\r\n  },\r\n  recovered: {\r\n    color: 'rgba(40,167,69,.6)',\r\n    fontFamily: 'archia',\r\n    fontWeight: '900',\r\n    textTransform: 'uppercase',\r\n    fontSize: '12px !important',\r\n  },\r\n  recoveredChild1: {\r\n    textAlign: 'center',\r\n    alignItem: 'center',\r\n    justifyContent: 'center',\r\n    marginTop: '.5rem',\r\n    color: 'rgba(40,167,69,.6)',\r\n    fontFamily: 'archia',\r\n    fontWeight: 900,\r\n    fontSize: '12px !important',\r\n    textTransform: 'uppercase'\r\n  },\r\n  recoveredChild2: {\r\n    color: '#28a745',\r\n    fontWeight: '600',\r\n    textAlign: 'center',\r\n    fontFamily: 'archia',\r\n    fontSize: '24px !important',\r\n    fontWeight: '900',\r\n    textTransform: 'uppercase'\r\n\r\n  },\r\n  deceased: {\r\n    color: 'rgba(108,117,125,.6)',\r\n    fontFamily: 'archia',\r\n    fontWeight: '900',\r\n    textTransform: 'uppercase',\r\n    fontSize: '12px !important',\r\n  },\r\n  deceasedChild1: {\r\n    textAlign: 'center',\r\n    alignItem: 'center',\r\n    justifyContent: 'center',\r\n    marginTop: '.5rem',\r\n    color: 'rgba(108,117,125,.6)',\r\n    fontFamily: 'archia',\r\n    fontWeight: 900,\r\n    fontSize: '12px !important',\r\n    textTransform: 'uppercase'\r\n  },\r\n  deceasedChild2: {\r\n    color: '#6c757d',\r\n    fontWeight: '600',\r\n    textAlign: 'center',\r\n    fontFamily: 'archia',\r\n    fontSize: '24px !important',\r\n    fontWeight: '900',\r\n    textTransform: 'uppercase'\r\n\r\n  },\r\n  FirstGridRow: {\r\n    marginTop: '40px !important'\r\n  },\r\n  SecondGridRow: {\r\n    marginTop: '40px !important'\r\n  },\r\n  ThirdGridRow: {\r\n    marginTop: '40px !important'\r\n  },\r\n  FourthGridRow: {\r\n    marginTop: '0px',\r\n    [theme.breakpoints.up('xs')]: {\r\n      marginTop: '10px'\r\n    }\r\n  },\r\n  statewisedata:{\r\n      marginRight: '40px',\r\n      textAlign: 'center',\r\n      fontFamily: 'archia !important',\r\n      fontWeight: '900',\r\n      fontSize: '24px !important',\r\n      textTransform: 'uppercase',\r\n      color: '#343a40',\r\n      [theme.breakpoints.up('xs')]: {\r\n          marginTop: '20px'\r\n      }\r\n  },\r\n  dark_statewisedata:{\r\n    marginRight: '40px',\r\n    textAlign: 'center',\r\n    fontFamily: 'archia !important',\r\n    fontWeight: '900',\r\n    fontSize: '24px !important',\r\n    textTransform: 'uppercase',\r\n    color: '#FFD993',\r\n    [theme.breakpoints.up('xs')]: {\r\n        marginTop: '20px'\r\n    }\r\n},\r\n  statechild:{\r\n    color: 'rgba(108,117,125,.6)',\r\n    fontSize: '12px !important',\r\n    fontFamily: 'archia',\r\n    fontWeight: '900',\r\n    textTransform: 'uppercase',\r\n    marginLeft: '37px'\r\n  },\r\n  dark_statechild:{\r\n    color: '#AEA4A2',\r\n    fontSize: '12px !important',\r\n    fontFamily: 'archia',\r\n    fontWeight: '900',\r\n    textTransform: 'uppercase',\r\n    marginLeft: '37px'\r\n  },\r\n  statechild2:{\r\n    color: '#4c75f2',\r\n    fontSize: '12px',\r\n    fontFamily: 'archia',\r\n    fontWeight: '900',\r\n    textTransform: 'uppercase',\r\n    marginLeft: '37px',\r\n    [theme.breakpoints.up('xs')]: {\r\n      marginLeft: '0px',\r\n      fontSize:'10px'\r\n  }\r\n  },\r\n  covidsymbol:{\r\n    fontSize: '10px'\r\n  },\r\n  highsysmbol:{\r\n    padding: '0px 6px 0px 6px',\r\n    background: '#FF9999',\r\n    marginRight: '6px'\r\n  },\r\n  avgsysmbol:{\r\n    padding: '0px 6px 0px 6px',\r\n    background: '#FCC88C',\r\n    marginRight: '6px'\r\n  },\r\n  lowsysmbol:{\r\n    padding: '0px 6px 0px 6px',\r\n    background: '#B1DC88',\r\n    marginRight: '6px'\r\n  },\r\n  stateTotal:{\r\n    color: '#46A4D1'\r\n  }\r\n}));\r\n\r\nconst CountryStat = (props) => {\r\n  const classes = useStyles();\r\n  const [countryStat, setCountryStat] = useState(0);\r\n  const [ConfirmCount, setConfirmCount] = useState(0);\r\n  const [ActivityCount, setActivityCount] = useState(0);\r\n  const [RecoveredCount, setRecoveredCount] = useState(0);\r\n  const [DeceasedCount, setDeceasedCount] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const abortController = new AbortController()\r\n    const signal = abortController.signal\r\n    fetch('https://api.covid19india.org/data.json', {signal : signal })\r\n      .then(res => res.json())\r\n      .then((stat) =>{\r\n          setCountryStat(stat.statewise[0]);\r\n          setConfirmCount((function () {\r\n            let confirm = parseInt(stat.statewise[0].confirmed);\r\n              return confirm\r\n              // return stat.statewise[0].confirmed.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\r\n          })())\r\n          setActivityCount((function () {\r\n            let active = parseInt(stat.statewise[0].active);\r\n              return active\r\n          })())\r\n          setRecoveredCount((function () {\r\n            let recovered = parseInt(stat.statewise[0].recovered);\r\n              return recovered\r\n          })())\r\n          setDeceasedCount((function () {\r\n            let deaths = parseInt(stat.statewise[0].deaths);\r\n              return deaths\r\n          })())\r\n      })\r\n      return function cleanup(){\r\n        abortController.abort()\r\n      }\r\n  }, []);\r\n  return (\r\n    <React.Fragment>\r\n      <Grid container\r\n        justify=\"space-evenly\"\r\n        alignItems=\"center\"\r\n        className={classes.FirstGridRow}\r\n      >\r\n        <Grid item>\r\n          <Typography variant=\"subtitle1\" className={classes.confirm} gutterBottom>\r\n            Confirmed\r\n          </Typography>\r\n          <div>\r\n            <Typography variant=\"subtitle1\" className={classes.confirmChild1} gutterBottom>\r\n              {'[' + '+' + countryStat.deltaconfirmed + ']'}\r\n            </Typography>\r\n          </div>\r\n          <div>\r\n            <Typography variant=\"subtitle1\" className={classes.confirmChild2} gutterBottom>\r\n             <CountUp end={ConfirmCount} duration={3.75} separator=\",\"></CountUp> \r\n            </Typography>\r\n          </div>\r\n        </Grid>\r\n        <Grid item>\r\n          <Typography variant=\"subtitle1\" className={classes.active} gutterBottom>\r\n            Active\r\n                </Typography>\r\n          <div>\r\n            <Typography variant=\"subtitle1\" className={classes.activeChild1} gutterBottom>\r\n              0\r\n                    </Typography>\r\n          </div>\r\n          <div>\r\n            <Typography variant=\"subtitle1\" className={classes.activeChild2} gutterBottom>\r\n              <CountUp end={ActivityCount} duration={3.75} separator=\",\"></CountUp> \r\n            </Typography>\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Grid container\r\n        justify=\"space-evenly\"\r\n        alignItems=\"center\"\r\n        className={classes.SecondGridRow}\r\n      >\r\n        <Grid item>\r\n          <Typography variant=\"subtitle1\" className={classes.recovered} gutterBottom>\r\n            Recovered\r\n                </Typography>\r\n          <div>\r\n            <Typography variant=\"subtitle1\" className={classes.recoveredChild1} gutterBottom>\r\n              {'[' + '+' + countryStat.deltarecovered + ']'}\r\n            </Typography>\r\n          </div>\r\n          <div>\r\n            <Typography variant=\"subtitle1\" className={classes.recoveredChild2} gutterBottom>\r\n              <CountUp end={RecoveredCount} duration={3.75} separator=\",\"></CountUp> \r\n            </Typography>\r\n          </div>\r\n        </Grid>\r\n        <Grid item>\r\n          <Typography variant=\"subtitle1\" className={classes.deceased} gutterBottom>\r\n            Deceased\r\n                </Typography>\r\n          <div>\r\n            <Typography variant=\"subtitle1\" className={classes.deceasedChild1} gutterBottom>\r\n              {'[' + '+' + countryStat.deltadeaths + ']'}\r\n            </Typography>\r\n          </div>\r\n          <div>\r\n            <Typography variant=\"subtitle1\" className={classes.deceasedChild2} gutterBottom>\r\n              <CountUp end={DeceasedCount} duration={3.75} separator=\",\"></CountUp> \r\n            </Typography>\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid container\r\n      className={classes.FourthGridRow}\r\n      >\r\n        <Grid item xs={12} sm={12} md={8} lg={12} xl={12}>  \r\n        <Typography variant=\"subtitle1\" className={(props.darkmode)? classes.dark_statewisedata : classes.statewisedata}  gutterBottom>\r\n            <div>State Wise Data</div>\r\n            <div className={(props.darkmode)? classes.dark_statechild : classes.statechild}>COMPILED FROM STATE GOVT. NUMBERS\r\n            {/* <div className={classes.statechild2}>CLICK ON ANY BELOW STATE TO KNOW MORE.</div> */}\r\n            </div>\r\n        </Typography>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid container className={classes.ThirdGridRow}>\r\n        <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n          <Tabs />\r\n        </Grid>\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n  return {\r\n      darkmode : state.response.darkmode\r\n  }\r\n} \r\n\r\nexport default connect(mapStateToProps)(CountryStat);","import moment from 'moment';\r\n\r\nconst months = {\r\n  '01': 'Jan',\r\n  '02': 'Feb',\r\n  '03': 'Mar',\r\n  '04': 'Apr',\r\n  '05': 'May',\r\n  '06': 'Jun',\r\n  '07': 'Jul',\r\n  '08': 'Aug',\r\n  '09': 'Sep',\r\n  '10': 'Oct',\r\n  '11': 'Nov',\r\n  '12': 'Dec',\r\n};\r\n\r\nconst stateCodes = {\r\n  AP: 'Andhra Pradesh',\r\n  AR: 'Arunachal Pradesh',\r\n  AS: 'Assam',\r\n  BR: 'Bihar',\r\n  CT: 'Chhattisgarh',\r\n  GA: 'Goa',\r\n  GJ: 'Gujarat',\r\n  HR: 'Haryana',\r\n  HP: 'Himachal Pradesh',\r\n  JH: 'Jharkhand',\r\n  KA: 'Karnataka',\r\n  KL: 'Kerala',\r\n  MP: 'Madhya Pradesh',\r\n  MH: 'Maharashtra',\r\n  MN: 'Manipur',\r\n  ML: 'Meghalaya',\r\n  MZ: 'Mizoram',\r\n  NL: 'Nagaland',\r\n  OR: 'Odisha',\r\n  PB: 'Punjab',\r\n  RJ: 'Rajasthan',\r\n  SK: 'Sikkim',\r\n  TN: 'Tamil Nadu',\r\n  TG: 'Telangana',\r\n  TR: 'Tripura',\r\n  UT: 'Uttarakhand',\r\n  UP: 'Uttar Pradesh',\r\n  WB: 'West Bengal',\r\n  AN: 'Andaman and Nicobar Islands',\r\n  CH: 'Chandigarh',\r\n  DN: 'Dadra and Nagar Haveli',\r\n  DD: 'Daman and Diu',\r\n  DL: 'Delhi',\r\n  JK: 'Jammu and Kashmir',\r\n  LA: 'Ladakh',\r\n  LD: 'Lakshadweep',\r\n  PY: 'Puducherry',\r\n};\r\n\r\nexport const getStateName = (code) => {\r\n  return stateCodes[code.toUpperCase()];\r\n};\r\n\r\nexport const formatDate = (unformattedDate) => {\r\n  const day = unformattedDate.slice(0, 2);\r\n  const month = unformattedDate.slice(3, 5);\r\n  const year = unformattedDate.slice(6, 10);\r\n  const time = unformattedDate.slice(11);\r\n  return `${year}-${month}-${day}T${time}+05:30`;\r\n};\r\n\r\nexport const formatDateAbsolute = (unformattedDate) => {\r\n  const day = unformattedDate.slice(0, 2);\r\n  const month = unformattedDate.slice(3, 5);\r\n  const time = unformattedDate.slice(11);\r\n  return `${day} ${months[month]}, ${time.slice(0, 5)} IST`;\r\n};\r\n\r\nconst validateCTS = (data = []) => {\r\n  const today = new Date();\r\n  today.setHours(0, 0, 0, 0);\r\n  const dataTypes = [\r\n    'dailyconfirmed',\r\n    'dailydeceased',\r\n    'dailyrecovered',\r\n    'totalconfirmed',\r\n    'totaldeceased',\r\n    'totalrecovered',\r\n  ];\r\n  return data\r\n    .filter((d) => dataTypes.every((dt) => d[dt]) && d.date)\r\n    .filter((d) => dataTypes.every((dt) => Number(d[dt]) >= 0))\r\n    .filter((d) => {\r\n      const year = today.getFullYear();\r\n      return new Date(d.date + year) < today;\r\n    });\r\n};\r\n\r\nexport const preprocessTimeseries = (timeseries) => {\r\n  return validateCTS(timeseries).map((stat) => ({\r\n    date: new Date(stat.date + ' 2020'),\r\n    totalconfirmed: +stat.totalconfirmed,\r\n    totalrecovered: +stat.totalrecovered,\r\n    totaldeceased: +stat.totaldeceased,\r\n    dailyconfirmed: +stat.dailyconfirmed,\r\n    dailyrecovered: +stat.dailyrecovered,\r\n    dailydeceased: +stat.dailydeceased,\r\n  }));\r\n};\r\n\r\n/**\r\n * Returns the last `days` entries\r\n * @param {Array<Object>} timeseries\r\n * @param {number} days\r\n *\r\n * @return {Array<Object>}\r\n */\r\nexport function sliceTimeseriesFromEnd(timeseries, days) {\r\n  return timeseries.slice(-days);\r\n}\r\n\r\nexport const formatNumber = (value) => {\r\n  const numberFormatter = new Intl.NumberFormat('en-IN');\r\n  return isNaN(value) ? '-' : numberFormatter.format(value);\r\n};\r\n\r\nexport const parseStateTimeseries = ({states_daily: data}) => {\r\n  const statewiseSeries = Object.keys(stateCodes).reduce((a, c) => {\r\n    a[c] = [];\r\n    return a;\r\n  }, {});\r\n\r\n  const today = moment();\r\n  for (let i = 0; i < data.length; i += 3) {\r\n    const date = moment(data[i].date, 'DD-MMM-YY');\r\n    // Skip data from the current day\r\n    if (date.isBefore(today, 'Date')) {\r\n      Object.entries(statewiseSeries).forEach(([k, v]) => {\r\n        const stateCode = k.toLowerCase();\r\n        const prev = v[v.length - 1] || {};\r\n        v.push({\r\n          date: date.toDate(),\r\n          dailyconfirmed: +data[i][stateCode] || 0,\r\n          dailyrecovered: +data[i + 1][stateCode] || 0,\r\n          dailydeceased: +data[i + 2][stateCode] || 0,\r\n          totalconfirmed: +data[i][stateCode] + (prev.totalconfirmed || 0),\r\n          totalrecovered: +data[i + 1][stateCode] + (prev.totalrecovered || 0),\r\n          totaldeceased: +data[i + 2][stateCode] + (prev.totaldeceased || 0),\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n  return statewiseSeries;\r\n};","import React, {useState, useEffect, useRef, useCallback} from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport CountryStat from '../CountryStats/CountryStat.js';\r\nimport axios from 'axios';\r\nimport {formatDistance, format} from 'date-fns';\r\nimport { connect } from 'react-redux';\r\n\r\nimport {\r\n    formatDate,\r\n    formatDateAbsolute,\r\n  } from '../../utils/commom-functions.js';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    appUpdateDiv:{\r\n        alignItems: 'center',\r\n        justifyContent: 'center'\r\n    },\r\n    appUpdateFont1:{\r\n        fontFamily: 'archia !important',\r\n        fontWeight: '900',\r\n        textTransform: 'uppercase',\r\n        color: '#343a40',\r\n        [theme.breakpoints.up('xs')]: {\r\n            marginTop: '20px'\r\n          }\r\n    },\r\n    dark_appUpdateFont1:{\r\n      fontFamily: 'archia !important',\r\n        fontWeight: '900',\r\n        textTransform: 'uppercase',\r\n        color: '#FFD993\t',\r\n        [theme.breakpoints.up('xs')]: {\r\n            marginTop: '20px'\r\n          }\r\n    },\r\n    appUpdateFont2:{\r\n        fontFamily: 'archia !important',\r\n        fontWeight: '600',\r\n        fontSize: '11px!important',\r\n        textTransform: 'uppercase',\r\n        color: '#6c757d'\r\n    },\r\n    dark_appUpdateFont2:{\r\n        fontFamily: 'archia !important',\r\n        fontWeight: '600',\r\n        fontSize: '11px!important',\r\n        textTransform: 'uppercase',\r\n        color: '#AEA4A2'\r\n    },\r\n    appUpdateFont3:{\r\n        fontFamily: 'archia !important',\r\n        color: 'rgba(40,167,69,.6) !important',\r\n        fontWeight: '900',\r\n        fontSize: '12px !important',\r\n        textTransform: 'uppercase',\r\n        [theme.breakpoints.up('md')]: {\r\n            marginLeft: '81px !important',\r\n            marginTop: '40px !important'\r\n          },\r\n        [theme.breakpoints.up('xs')]: {\r\n            marginTop: '5px',\r\n            marginLeft: '25px'\r\n          }\r\n    },\r\n    appUpdateFont4:{\r\n        fontFamily: 'archia !important',\r\n        color: 'rgb(40, 167, 69)',\r\n        fontWeight: '900',\r\n        fontSize: '14px !important',\r\n        textTransform: 'uppercase',\r\n        fontSize: '11px !important',\r\n        [theme.breakpoints.up('md')]: {\r\n            marginLeft: '74px !important',\r\n          },\r\n        [theme.breakpoints.up('xs')]: {\r\n            marginLeft: '-4px',\r\n            fontSize: '10px',\r\n          }\r\n    },\r\n    appUpdateFont5:{\r\n        fontFamily: 'archia !important',\r\n        color: 'rgb(40, 167, 69)',\r\n        fontWeight: '900',\r\n        textTransform: 'uppercase',\r\n        fontSize: '12px !important',\r\n        [theme.breakpoints.up('md')]: {\r\n            marginLeft: '68px !important'\r\n          },\r\n        [theme.breakpoints.up('xs')]: {\r\n            marginLeft: '10px',\r\n            fontSize: '10px',\r\n          }\r\n    }\r\n}));\r\n\r\nconst ApplastUpdated = (props) => {\r\n  const [states, setStates] = useState([]);\r\n  const [fetched, setFetched] = useState(false);\r\n  const [lastUpdated, setLastUpdated] = useState('');\r\n\r\n  useEffect(() => {\r\n    if (fetched === false) {\r\n      getStates();\r\n    }\r\n  }, [fetched]);\r\n\r\n  const getStates = async () => {\r\n    try {\r\n      const [\r\n        response,\r\n      ] = await Promise.all([\r\n        axios.get('https://api.covid19india.org/data.json'),\r\n      ]);\r\n      setStates(response.data.statewise);\r\n      setLastUpdated(response.data.statewise[0].lastupdatedtime);\r\n      setFetched(true);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n    const classes = useStyles();\r\n    return ( \r\n        <React.Fragment>\r\n            <Grid container className={classes.appUpdateDiv}>\r\n                <Grid item xs={7} sm={6} md={4} lg={6} xl={6}\r\n                >\r\n                    <Typography variant=\"h5\" className={(props.darkmode)?classes.dark_appUpdateFont1 : classes.appUpdateFont1}>\r\n                        India COVID-19 Tracker\r\n                    </Typography>\r\n                    <Typography variant=\"h6\" className={(props.darkmode)?classes.dark_appUpdateFont2 :classes.appUpdateFont2}>\r\n                        A Crowdsourced Initiative\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item xs={4} sm={6} md={3} lg={6} xl={6}> \r\n                    <Typography variant=\"h5\" className={classes.appUpdateFont3}>\r\n                        Last Updated\r\n                    </Typography>\r\n                    <Typography variant=\"h6\" className={classes.appUpdateFont4}>\r\n                    {isNaN(Date.parse(formatDate(lastUpdated)))\r\n                    ? ''\r\n                    : formatDistance(\r\n                        new Date(formatDate(lastUpdated)),\r\n                        new Date()\r\n                      ) + ' Ago'}\r\n                    </Typography>\r\n                    <Typography variant=\"h6\" className={classes.appUpdateFont5}>\r\n                    {isNaN(Date.parse(formatDate(lastUpdated)))\r\n                    ? ''\r\n                    : formatDateAbsolute(lastUpdated)}\r\n                    </Typography>\r\n                </Grid>\r\n            </Grid>\r\n            <CountryStat />\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n  return {\r\n      darkmode : state.response.darkmode\r\n  }\r\n} \r\n \r\nexport default connect(mapStateToProps)(ApplastUpdated);","import React, { useState, useEffect } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ApplastUpdated from '../ApplastUpdated/AppUpdated.js';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    banner_parent:{\r\n        background: 'rgba(32,26,162,.12549)',\r\n        height: 'auto !important',\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    dark_banner_parent:{\r\n        background: '#1e1e30 !important',\r\n        height: 'auto !important',\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    banner: {\r\n        textAlign: 'center',\r\n        margin: theme.spacing(3),\r\n    },\r\n    banner_text:{\r\n        fontFamily: 'archia !important',\r\n        fontSize: '.8rem !important',\r\n        fontWeight: '600',\r\n        color: 'rgba(32,26,162,.866667)'\r\n    },\r\n    dark_banner_text:{\r\n        fontFamily: 'archia !important',\r\n        fontSize: '.8rem !important',\r\n        fontWeight: '600',\r\n        color: '#F1DDDB'\r\n    }\r\n}));\r\nconst Covidquotes = (props) => {\r\n    const classes = useStyles();\r\n    const [Quotes, setQuotes] = useState('Stay Home, Stay Safe.');\r\n    \r\n    useEffect(() =>{\r\n        setInterval(() =>{\r\n            \r\n            fetch('https://api.covid19india.org/website_data.json')\r\n            .then(res => res.json())\r\n            .then(quotes => {\r\n                let randomNum = Math.abs(Math.floor(Math.random() * (1 - quotes.factoids.length) + 1));\r\n                setQuotes(quotes.factoids[randomNum].banner)})\r\n        },4000)\r\n    },[]);\r\n    const setNewQuote = () =>{\r\n        fetch('https://api.covid19india.org/website_data.json')\r\n            .then(res => res.json())\r\n            .then(quotes => {\r\n            let randomNum = Math.abs(Math.floor(Math.random() * (1 - quotes.factoids.length) + 1));\r\n            setQuotes(quotes.factoids[randomNum].banner)\r\n        })\r\n    }\r\n    return ( \r\n        <React.Fragment>\r\n            <Grid container className={(props.darkmode)?classes.dark_banner_parent : classes.banner_parent} onClick={() => setNewQuote()}>\r\n                <Grid item xs={12} sm={12} md={12} lg={12} xl={12} className={classes.banner}>\r\n                    <Typography className={(props.darkmode)?classes.dark_banner_text : classes.banner_text}>\r\n                       {Quotes}\r\n                    </Typography>\r\n                </Grid>\r\n            </Grid>\r\n            <ApplastUpdated />\r\n        </React.Fragment>\r\n     );\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n    return {\r\n        darkmode : state.response.darkmode\r\n    }\r\n  }\r\n\r\nexport default connect(mapStateToProps)(Covidquotes); ;","import React, { Component } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport './GlobalStat.css';\r\nimport ReactCountryFlag from \"react-country-flag\";\r\nimport CountUp from 'react-countup';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\n\r\n\r\nclass GlobalStat extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isModelVisible: false,\r\n            WorldCountries:[],\r\n            WorldCountriesCopy:[]\r\n        }\r\n    }\r\n    abortController = new AbortController()\r\n    componentDidMount(){\r\n        this.getWorldCountryCases()\r\n    }\r\n    componentWillUnmount(){\r\n        this.abortController.abort()\r\n    }\r\n    componentWillReceiveProps(nextProp) {\r\n        if (nextProp.isCountryModalVisible) {\r\n            this.setState({ isModelVisible: nextProp.isCountryModalVisible })\r\n        } else {\r\n            this.setState({ isModelVisible: nextProp.isCountryModalVisible })\r\n        }\r\n    }\r\n    getWorldCountryCases(){\r\n        fetch('https://corona.lmao.ninja/v2/countries?sort=country', {signal : this.abortController.signal })\r\n        .then(res => res.json())\r\n        .then((data) =>{\r\n            this.setState({ WorldCountries: data})\r\n            this.setState({ WorldCountriesCopy: data})\r\n        }).catch((err) =>{\r\n            console.error('Global Countries Records',err)\r\n        })\r\n    }\r\n    handleCountrySearch(e){\r\n        if(e.target.value !== ''){\r\n            let searchedResult = this.state.WorldCountries.filter((item) =>{\r\n                return item.country.toLowerCase().includes(e.target.value.toLowerCase())\r\n            })\r\n            this.setState({ WorldCountries:searchedResult})\r\n        }else{\r\n            this.setState({ WorldCountries:this.state.WorldCountriesCopy})\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <div className={(this.state.isModelVisible) ? 'CountriesModal ShowModal' : 'CountriesModal HideModal'}>\r\n                    <Grid container\r\n                        justify=\"space-evenly\"\r\n                        alignItems=\"center\"\r\n                    >\r\n                            <Paper component=\"form\" className={(this.props.darkmode)?'dark_searchbar' : 'root'}>\r\n                                <InputBase\r\n                                    onChange={this.handleCountrySearch.bind(this)}\r\n                                    className={(this.props.darkmode)? 'dark_input' : 'input'}\r\n                                    placeholder=\"Search Countries...\"\r\n                                    inputProps={{ 'aria-label': 'Search Countries...' }}\r\n                                />\r\n                                <IconButton className='iconButton' aria-label=\"search\">\r\n                                    <SearchIcon className={(this.props.darkmode)?'dark_searchicon' : ''} />\r\n                                </IconButton>\r\n                                <Divider className='divider' orientation=\"vertical\" />\r\n                            </Paper>\r\n                        <Grid item xs={12} md={12}>\r\n                        <TableContainer component={Paper} className={(this.props.darkmode)?'dark_countrybg' : ''} >\r\n                            <Table className='table' aria-label=\"simple table\">\r\n                                <TableHead>\r\n                                <TableRow xs={12}>\r\n                                    <TableCell style={{'fontFamily': 'archia'}} className='TableHead'>Sr.No</TableCell>\r\n                                    <TableCell style={{'fontFamily': 'archia'}} className='TableHead'>Countries</TableCell>\r\n                                    <TableCell style={{'fontFamily': 'archia'}} className='TableHead'>Name</TableCell>\r\n                                    <TableCell style={{'fontFamily': 'archia'}} className='TableHead countryTodaycases'>TodayCases</TableCell>\r\n                                    <TableCell style={{'fontFamily': 'archia'}} className='TableHead countryTodaydeathth'>TodayDeaths</TableCell>\r\n                                    <TableCell style={{'fontFamily': 'archia'}} className='TableHead countryConfirmed'>Confirmed</TableCell>\r\n                                    <TableCell style={{'fontFamily': 'archia'}} className='TableHead countryActive'>Active</TableCell>\r\n                                    <TableCell style={{'fontFamily': 'archia'}} style={{'fontFamily': 'archia'}}  className='TableHead countryRecovered'>Recovered</TableCell>\r\n                                    <TableCell style={{'fontFamily': 'archia'}} className='TableHead'>Dead</TableCell>\r\n                                </TableRow>\r\n                                </TableHead>\r\n                                <TableBody>\r\n                                {this.state.WorldCountries.map((eachCountry, index) => (\r\n                                    <TableRow key={index}>\r\n                                    <TableCell style={{'fontFamily': 'archia'}} className='countryNames'>{index + 1}</TableCell>\r\n                                    <TableCell component=\"th\" scope=\"row\">\r\n                                    { (!!eachCountry.countryInfo.iso2)?\r\n                                    <ReactCountryFlag\r\n                                        countryCode={eachCountry.countryInfo.iso2 || ''}\r\n                                        svg\r\n                                        style={{\r\n                                            width: '6em',\r\n                                            height: '1.8em',\r\n                                        }}\r\n                                    /> : <span className='Notavailable'>Not Available</span>\r\n                                    } \r\n                                    </TableCell>\r\n                                    <TableCell style={{'fontFamily': 'archia'}} className='countryNames'>{eachCountry.country}</TableCell>\r\n                                    <TableCell style={{'fontFamily': 'archia'}} className='countryTodaycase        textCenter'>{eachCountry.todayCases}</TableCell>\r\n                                    <TableCell style={{'fontFamily': 'archia'}} className='countryTodaydeath textCenter'>{eachCountry.todayDeaths}</TableCell>\r\n                                    <TableCell style={{'fontFamily': 'archia'}} className='confirmed textCenter'><CountUp end={eachCountry.cases} duration={3.75} separator=\",\"></CountUp></TableCell>\r\n                                    <TableCell style={{'fontFamily': 'archia'}} className='active textCenter'><CountUp end={eachCountry.active} duration={3.75} separator=\",\"></CountUp></TableCell>\r\n                                    <TableCell style={{'fontFamily': 'archia'}} className='recovered textCenter'><CountUp end={eachCountry.recovered} duration={3.75} separator=\",\"></CountUp></TableCell>\r\n                                    <TableCell style={{'fontFamily': 'archia'}} className='dead textCenter'><CountUp end={eachCountry.deaths} duration={3.75} separator=\",\"></CountUp></TableCell>\r\n                                    </TableRow>\r\n                                ))}\r\n                                </TableBody>\r\n                            </Table>\r\n                            </TableContainer>\r\n                        </Grid>\r\n                    </Grid>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n    return {\r\n        darkmode : state.response.darkmode\r\n    }\r\n  } \r\n\r\nexport default connect(mapStateToProps)(GlobalStat);","import React, { Component } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\n\r\n\r\nclass WorldMap extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            isModelVisible: false,\r\n         }\r\n    }\r\n    componentWillReceiveProps(nextProp){\r\n        if (nextProp.isMapModalVisible) {\r\n            this.setState({ isModelVisible: nextProp.isMapModalVisible })\r\n        } else {\r\n            this.setState({ isModelVisible: nextProp.isMapModalVisible })\r\n        }\r\n    }\r\n    render() { \r\n        return ( \r\n            <React.Fragment>\r\n                <div className={(this.state.isModelVisible) ? 'CountriesModal ShowModal' : 'CountriesModal HideModal'}>\r\n                    <Grid container\r\n                    justify=\"space-evenly\"\r\n                    alignItems=\"center\"\r\n                    >\r\n                        <Grid item xs={12} sm={12} md={11} lg={11} xl={11} >\r\n                            <Card variant=\"outlined\">\r\n                                <CardContent>\r\n                                   WorldMap\r\n                                </CardContent>\r\n                            </Card>\r\n                        </Grid>\r\n                    </Grid>\r\n                </div>\r\n            </React.Fragment>\r\n         );\r\n    }\r\n}\r\n \r\nexport default WorldMap;\r\n","import React, { Component } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport './DailyCovidNews.css';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { FixedSizeList } from 'react-window';\r\n\r\nclass DailyCovidNews extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isModelVisible: false,\r\n            DailyCovid19News:[]\r\n          }\r\n    }\r\n    abortController = new AbortController()\r\n    componentDidMount(){\r\n        this.getCovidNews()\r\n    }\r\n    componentWillUnmount(){\r\n        this.abortController.abort()\r\n    }\r\n    componentWillReceiveProps(nextProp){\r\n        if (nextProp.isNewsModalVisible) {\r\n            this.setState({ isModelVisible: nextProp.isNewsModalVisible })\r\n        } else {\r\n            this.setState({ isModelVisible: nextProp.isNewsModalVisible })\r\n        }\r\n    }\r\n    getCovidNews(){\r\n\r\n        var myHeaders = new Headers();\r\n        myHeaders.append(\"Subscription-Key\", \"3009d4ccc29e4808af1ccc25c69b4d5d\");\r\n\r\n        var requestOptions = {\r\n        method: 'GET',\r\n        headers: myHeaders,\r\n        redirect: 'follow'\r\n        };\r\n\r\n        fetch(\"https://api.smartable.ai/coronavirus/news/IN\", requestOptions, {signal: this.abortController.signal})\r\n        .then(response => response.json())\r\n        .then((data) =>{\r\n            this.setState({ DailyCovid19News: data.news})\r\n        })\r\n        .catch(error => console.log('error', error));\r\n\r\n    }\r\n    render() { \r\n        return ( \r\n            <React.Fragment>\r\n                <div className={(this.state.isModelVisible) ? 'CountriesModal ShowModal' : 'CountriesModal HideModal'}>\r\n                    <Grid container \r\n                    justify=\"flex-end\"\r\n                    alignItems=\"center\"\r\n                    >\r\n                        <Grid item xs={12} sm={12} md={5} lg={11} xl={11} >\r\n                            <Card variant=\"outlined\" style={{'marginRight': '45px'}}>\r\n                                <CardContent>\r\n                                    <Typography className='cardheading' variant=\"subtitle2\" gutterBottom color=\"textSecondary\">\r\n                                        Daily Covid19 News.\r\n                                    </Typography>\r\n                                    <Divider />\r\n                                    <List className='root Newscard'  >\r\n                                        {(this.state.DailyCovid19News.length > 0)?\r\n                                            this.state.DailyCovid19News.map((News, index) =>(\r\n                                                <span key={index} >\r\n                                                <ListItem key={index} alignItems=\"flex-start\">\r\n                                                    <ListItemAvatar>\r\n                                                        <Avatar alt=\"Remy Sharp\" src=\"https://media1.s-nbcnews.com/j/newscms/2020_16/331…16p_23fe61bb653e3f82510a4d7face3a142.fit-560w.jpg\" />\r\n                                                    </ListItemAvatar>\r\n                                                    <ListItemText className='NewsTitle'\r\n                                                        primary={News.title}\r\n                                                        secondary={\r\n                                                            <React.Fragment>\r\n                                                                <Typography\r\n                                                                    component=\"span\"\r\n                                                                    variant=\"body2\"\r\n                                                                    className='inline'\r\n                                                                    color=\"textPrimary\"\r\n                                                                >\r\n                                                                    Excerpt\r\n                                                                </Typography>\r\n                                                                <span className='MainNews'>{' - '+News.excerpt}</span>\r\n                                                                <span className='NewsSource'>Sourcses -</span>\r\n                                                                <span><a href={News.ampWebUrl}>{(!!News.ampWebUrl)? News.ampWebUrl:'Not available'}</a></span>\r\n                                                            </React.Fragment>\r\n                                                        }\r\n                                                        \r\n                                                    />\r\n                                                </ListItem>\r\n                                                <Divider variant=\"inset\" component=\"li\" />\r\n                                                </span>\r\n                                            )) : <span style={{'fontFamily':'archia !important'}}>News not Available</span>\r\n                                        }\r\n                                    </List>\r\n                                </CardContent>\r\n                            </Card>\r\n                        </Grid>\r\n                    </Grid>\r\n                </div>\r\n            </React.Fragment>\r\n         );\r\n    }\r\n}\r\n \r\nexport default DailyCovidNews;\r\n\r\n\r\n","import React, { useState,useEffect } from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport MoreIcon from '@material-ui/icons/MoreVert';\r\nimport Covidquotes from '../CovidQuotes/Covidquotes.js';\r\nimport LanguageSharpIcon from '@material-ui/icons/LanguageSharp';\r\nimport GlobalStat from '../../Components/GlobalStats/GlobalStat.js';\r\nimport PublicIcon from '@material-ui/icons/Public';\r\nimport WorldMap from '../../Components/WorldMap/Worldmap.js';\r\nimport DailyCovidNews from '../../Components/IndiaCovidNews/DaliyCovidNews.js';\r\nimport Brightness3Icon from '@material-ui/icons/Brightness2';\r\nimport WbSunnyIcon from '@material-ui/icons/WbSunny';\r\nimport { DarkModeAction } from '../../Actions/Dark_Mode.js';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  navbar:{\r\n    boxShadow: '1px 0px 1px black !important'\r\n  },\r\n  darkmode_bg:{\r\n    background : '#1e1e30 !important'\r\n  },\r\n  globalstat:{\r\n    marginTop: '12px',\r\n    cursor: 'pointer'\r\n  },\r\n  darkglobalstat:{\r\n    marginTop: '12px',\r\n    cursor: 'pointer',\r\n    color: '#fff'\r\n  },\r\n  darknotibell:{\r\n    color : 'yellow'\r\n  },\r\n  notibell:{\r\n    color : '#000'\r\n  },\r\n  modeswitch:{\r\n    transform: 'scaleX(-1)',\r\n    marginTop: '12px',\r\n    cursor: 'pointer',\r\n    marginRight: '14px'\r\n  },\r\n  darkmodeswitch:{\r\n    transform: 'scaleX(-1)',\r\n    marginTop: '12px',\r\n    cursor: 'pointer',\r\n    marginRight: '14px',\r\n    color: 'rgb(255, 193, 7)',\r\n  },\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  title: {\r\n    fontFamily: 'archia !important',\r\n    display: 'block',\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'block',\r\n    },\r\n    color: theme.palette.text.inherit,\r\n  },\r\n  darktitle:{\r\n    fontFamily: 'archia !important',\r\n    display: 'block',\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'block',\r\n    },\r\n    color: '#4c75f2 !important'\r\n  },\r\n  sectionDesktop: {\r\n    display: 'none',\r\n    [theme.breakpoints.up('md')]: {\r\n      display: 'flex',\r\n    },\r\n  },\r\n  sectionMobile: {\r\n    display: 'flex',\r\n    [theme.breakpoints.up('md')]: {\r\n      display: 'none',\r\n    },\r\n  },\r\n}));\r\nconst PrimarySearchAppBar =  (props) => {\r\n  const classes = useStyles();\r\n  const [NewsCount, setNewsCount] = useState(0);\r\n  const [isCountryModalVisible, setModalVisible] = useState(false);\r\n  const [isMapModalVisible, setMapModalVisible] = useState(false);\r\n  const [isNewsModalVisible, setNewsModalVisible] = useState(false);\r\n\r\n  useEffect(() =>{\r\n    const abortController = new AbortController()\r\n    const signal = abortController.signal\r\n    var myHeaders = new Headers();\r\n    myHeaders.append(\"Subscription-Key\", \"3009d4ccc29e4808af1ccc25c69b4d5d\");\r\n    var requestOptions = {\r\n        method: 'GET',\r\n        headers: myHeaders,\r\n        redirect: 'follow'\r\n    };\r\n    fetch(\"https://api.smartable.ai/coronavirus/news/IN\", requestOptions, {signal : signal})\r\n    .then(response => response.json())\r\n    .then((data) =>{\r\n      setNewsCount(data.news.length)\r\n    })\r\n    .catch(error => console.log('error', error));\r\n    return function cleanup(){\r\n      abortController.abort()\r\n    }\r\n  },[])\r\n\r\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\r\n\r\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\r\n\r\n  const handleMobileMenuClose = () => {\r\n    setMobileMoreAnchorEl(null);\r\n  };\r\n\r\n  const handleMobileMenuOpen = (event) => {\r\n    setMobileMoreAnchorEl(event.currentTarget);\r\n  };\r\n  const handleMapVisible = () =>{\r\n    if(isMapModalVisible){\r\n      setMapModalVisible(false)\r\n    }else{\r\n      setMapModalVisible(true)\r\n    }\r\n  }\r\n  const handleDarkMode = () =>{\r\n    if(props.darkmode == false){\r\n      props.DarkModeAction(true)\r\n    }else if(props.darkmode == true){\r\n      props.DarkModeAction(false)\r\n    }\r\n  }\r\n  const handleCountryRecords = () =>{\r\n    if(isCountryModalVisible){\r\n      setModalVisible(false)\r\n    }else{\r\n      setModalVisible(true)\r\n    }\r\n  }\r\n  const handleCovidNews = () =>{\r\n    if(isNewsModalVisible){\r\n      setNewsModalVisible(false)\r\n    }else{\r\n      setNewsModalVisible(true)\r\n    }\r\n  }\r\n  const mobileMenuId = 'primary-search-account-menu-mobile';\r\n  const renderMobileMenu = (\r\n    <Menu\r\n      anchorEl={mobileMoreAnchorEl}\r\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      id={mobileMenuId}\r\n      keepMounted\r\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      open={isMobileMenuOpen}\r\n      onClose={handleMobileMenuClose}\r\n    >\r\n      <MenuItem>\r\n        <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\r\n          <Badge badgeContent={4} color=\"secondary\">\r\n            <MailIcon />\r\n          </Badge>\r\n        </IconButton>\r\n        <p>Messages</p>\r\n      </MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  return (\r\n    <div className={classes.grow}>\r\n      <AppBar position=\"static\" color=\"inherit\" className={classes.navbar}>\r\n        <Toolbar className={(props.darkmode)?classes.darkmode_bg : ''}>\r\n          <Typography className={(props.darkmode)?classes.darktitle : classes.title}  variant=\"h6\" noWrap>\r\n            Covid-19\r\n          </Typography>\r\n          <div className={classes.grow} />\r\n          <div className={classes.sectionDesktop}>\r\n            <div onClick={()=>handleDarkMode()} className={(props.darkmode)?classes.darkmodeswitch : classes.modeswitch}  >\r\n              {\r\n                (props.darkmode == false)?<Brightness3Icon /> : <WbSunnyIcon />\r\n              }      \r\n            </div>\r\n            <div onClick={()=>handleCountryRecords()} className={(props.darkmode)?classes.darkglobalstat : classes.globalstat}>\r\n              <LanguageSharpIcon />\r\n            </div>\r\n            <div onClick={()=>handleCovidNews()} >\r\n              <IconButton aria-label=\"show new notifications\" className={(props.darkmode)?classes.darknotibell : classes.notibell}>\r\n                <Badge badgeContent={NewsCount} color=\"secondary\">\r\n                  <NotificationsIcon />\r\n                </Badge>\r\n              </IconButton>\r\n            </div>\r\n          </div>\r\n          <div className={classes.sectionMobile}>\r\n          <div onClick={()=>handleDarkMode()} className={(props.darkmode)?classes.darkmodeswitch : classes.modeswitch}  >\r\n              {\r\n                (props.darkmode == false)?<Brightness3Icon /> : <WbSunnyIcon />\r\n              }   \r\n            </div>\r\n            <div onClick={()=>handleCountryRecords()} className={(props.darkmode)?classes.darkglobalstat : classes.globalstat}  >\r\n              <LanguageSharpIcon />\r\n            </div>\r\n            <div onClick={()=>handleCovidNews()}>\r\n            <IconButton aria-label=\"show 11 new notifications\" className={(props.darkmode)?classes.darknotibell : classes.notibell}>\r\n              <Badge badgeContent={11} color=\"secondary\">\r\n                <NotificationsIcon />\r\n              </Badge>\r\n            </IconButton>\r\n          </div>\r\n            <IconButton\r\n              aria-label=\"show more\"\r\n              aria-controls={mobileMenuId}\r\n              aria-haspopup=\"true\"\r\n              onClick={handleMobileMenuOpen}\r\n              color=\"inherit\"\r\n            >\r\n              <MoreIcon />\r\n            </IconButton>\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <DailyCovidNews isNewsModalVisible={isNewsModalVisible} />\r\n      <WorldMap isMapModalVisible={isMapModalVisible} />\r\n      <GlobalStat isCountryModalVisible={isCountryModalVisible} />\r\n      <Route exact path='/' component={Covidquotes}></Route>\r\n      {renderMobileMenu}\r\n    </div>\r\n  );\r\n}\r\nconst mapStateToProps = (state) =>{\r\n  return {\r\n      darkmode : state.response.darkmode\r\n  }\r\n}\r\nexport default connect(mapStateToProps, { DarkModeAction })(PrimarySearchAppBar);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import { DARK_MODE } from './type.js';\r\n\r\nexport const DarkModeAction = (darkmode) => dispatch =>{\r\n    console.log('Dark Mode Action...',darkmode)\r\n    dispatch({type: DARK_MODE, payload: darkmode})\r\n}","import React from 'react';\r\nimport './SingleState.css';\r\nimport { withRouter } from 'react-router-dom'\r\nimport { connect } from 'react-redux';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nclass SingleState extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            stateName: '',\r\n            confirm:0,\r\n            recovered:0,\r\n            active:0,\r\n            deceased:0\r\n         }\r\n    }\r\n    componentDidMount(){\r\n        console.log('State to Render...',this.props.stateData)\r\n        this.setState({ stateName: this.props.stateData.state}) \r\n    }\r\n    GoTo(){\r\n        this.props.history.push('/')\r\n    }\r\n    render() {\r\n        return ( \r\n            <React.Fragment>\r\n                <div className={(this.props.darkmode)? 'dark_bg' : ''}>\r\n                <Grid container className={(this.props.darkmode)? 'dark_bg' : ''}>\r\n                    <Grid item xs={12} sm={12} md={8} lg={12} xl={12}>\r\n        <Typography variant=\"subtitle1\" className={(this.props.darkmode)?'dark_HomeRoute':'HomeRoute'} gutterBottom onClick={this.GoTo.bind(this)}>Home <big className='dark_strock'>/</big><span className='statename'>{this.state.stateName}</span></Typography>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container>\r\n                    <Grid item xs={12} sm={12} md={8} lg={12} xl={12} className='head_stateName_parent'>\r\n                    <Typography variant=\"subtitle1\" className='head_stateName' gutterBottom>{this.state.stateName}</Typography>\r\n                    </Grid>\r\n                </Grid>\r\n                </div>\r\n            </React.Fragment>\r\n         );\r\n    }\r\n}\r\nconst mapStateToProps = (state) =>{\r\n    return {\r\n        darkmode : state.response.darkmode,\r\n        stateData: state.steteresponse.singlestate\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(withRouter(SingleState));","import React from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport './App.css';\nimport NavBar  from '../src/Components/NavBar/NavBar.js';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { connect } from 'react-redux';\nimport SingleState from '../src/Components/SingleState/SingleState.js';\n\n\nconst useStyles = makeStyles((theme) => ({\n  darkapp:{\n    background : '#161625 !important'\n  }\n}))\n\nconst App = (props) => {\n  const classes = useStyles();\n  return (\n    <BrowserRouter>\n      <div className={(props.darkmode)?classes.darkapp : 'App'}>\n        <NavBar />\n        <Route exact path='/state/:state' component={SingleState}></Route>\n      </div>\n   </BrowserRouter>\n  );\n}\n\nconst mapStateToProps = (state) =>{\n  return {\n      darkmode : state.response.darkmode\n  }\n}\nexport default connect(mapStateToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { DARK_MODE } from '../Actions/type.js';\r\n\r\nconst initialState = {\r\n    darkmode:false\r\n}\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case DARK_MODE:\r\n            return {\r\n                ...state,\r\n                darkmode: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { SINGLE_STATE } from '../Actions/type.js';\r\n\r\nconst initialState = {\r\n    singlestate:[]\r\n}\r\n\r\nexport default function(state = initialState, action){\r\n    console.log('State Details...',initialState)\r\n    switch(action.type){\r\n        case SINGLE_STATE:\r\n            return {\r\n                ...state,\r\n                singlestate:{...action.payload}\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from 'redux';\r\nimport DarkMode from  './DarkModeReducer.js';\r\nimport SingleState from './SingleState.js'\r\n\r\nexport default combineReducers({\r\n    response: DarkMode,\r\n    steteresponse: SingleState\r\n});","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './Reducers';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(rootReducer, initialState, compose( \r\n    applyMiddleware(...middleware),\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__() || compose\r\n));\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}