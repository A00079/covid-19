{"version":3,"sources":["Components/StateDetailsSlider/StateDetails.js","Components/StateMap/StateMap.js","Components/StateDetailsSlider/StateChart.js","Components/TabPanel/Tabs.js","Components/CountryStats/CountryStat.js","utils/commom-functions.js","Components/ApplastUpdated/AppUpdated.js","Components/CovidQuotes/Covidquotes.js","Components/GlobalStats/GlobalStat.js","Components/WorldMap/Worldmap.js","Components/IndiaCovidNews/DaliyCovidNews.js","Components/NavBar/NavBar.js","Actions/Dark_Mode.js","Actions/type.js","Components/SingleState/SingleState.js","App.js","serviceWorker.js","Reducers/DarkModeReducer.js","Reducers/index.js","store.js","index.js"],"names":["StateDetails","props","abortController","AbortController","state","dynamicClassname","sliderLog","clearhandleautoslide","StateWiseData","StateTotalCases","this","fetchStatesDetails","abort","fetch","signal","then","res","json","statewisedetails","setState","statesTotalCount","Districts","stateDistCountKerala","stateDistCountDelhi","stateDistCountTelangana","stateDistCountRajasthan","stateDistCountHaryana","UttarPradesh","Ladakh","TamilNadu","JammuandKashmir","Karnataka","Maharashtra","Punjab","AndhraPradesh","Uttarakhand","Odisha","Puducherry","WestBengal","Chandigarh","Gujarat","HimachalPradesh","MadhyaPradesh","Bihar","Manipur","Mizoram","Goa","AndamanandNicobarIslands","Jharkhand","Assam","ArunachalPradesh","DadraandNagarHaveli","Tripura","Nagaland","Meghalaya","push","districtData","i","length","district","confirmed","StateArray","totalcases","topStates","total","map","item","Fragment","Grid","container","justify","alignItems","md","Card","variant","className","darkmode","CardContent","style","spacing","stateWiseDetails","index","xs","key","Typography","end","duration","separator","Component","connect","response","useStyles","makeStyles","theme","root","display","flexWrap","justifyContent","margin","width","height","breakpoints","down","notavailable","fontSize","confirm_paper","background","active_paper","recovered_paper","deceased_paper","color","textAlign","fontWeight","fontFamily","linkstatepage","cursor","marginLeft","borderRadius","padding","textDecoration","transition","confirm","marginTop","active","recovered","deceased","confirmCount","activeCount","recoveredCount","decreasedCount","GridRow","INDIA_TOPO_JSON","require","PROJECTION_CONFIG","scale","center","COLOR_RANGE","geographyStyle","default","outline","hover","fill","pressed","withRouter","classes","useState","stateCode","setstateCode","stateContent","setstateContent","stateTotal","setstateTotal","stateactiveTotal","setstateactiveTotal","staterecoveredTotal","setstaterecoveredTotal","statedeceasedTotal","setstatedeceasedTotal","id","value","data","setData","useEffect","console","log","stateResponse","StateMapData","activetotal","recoveredtotal","deceasedtotal","reduce","max","colorScale","scaleQuantile","domain","d","range","onMouseEnter","geo","current","properties","name","onMouseLeave","sm","lg","xl","Paper","elevation","gutterBottom","parseInt","onClick","history","handelStateRoute","projectionConfig","projection","data-tip","geography","geographies","find","s","rsmKey","StateChart","isVertical","StateData","labels","datasets","label","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","handelGraphToggle","bind","stateDistCountKeralaactive","stateDistCountKeralarecoverd","stateDistCountKeraladeceased","stateDistCountDelhiactive","stateDistCountDelhirecoverd","stateDistCountDelhideceased","stateDistCountTelanganaactive","stateDistCountTelanganarecoverd","stateDistCountTelanganadeceased","stateDistCountRajasthanactive","stateDistCountRajasthanrecoverd","stateDistCountRajasthandeceased","stateDistCountHaryanaactive","stateDistCountHaryanarecoverd","stateDistCountHaryanadeceased","stateDistCountUttarPradeshactive","stateDistCountUttarPradeshrecoverd","stateDistCountUttarPradeshdeceased","stateDistCountLadakhactive","stateDistCountLadakhrecoverd","stateDistCountLadakhdeceased","stateDistCountTamilNaduactive","stateDistCountTamilNadurecoverd","stateDistCountTamilNadudeceased","stateDistCountJammuandKashmiractive","stateDistCountJammuandKashmirrecoverd","stateDistCountJammuandKashmirdeceased","stateDistCountKarnatakaactive","stateDistCountKarnatakarecoverd","stateDistCountKarnatakadeceased","stateDistCountMaharashtraactive","stateDistCountMaharashtrarecoverd","stateDistCountMaharashtradeceased","stateDistCountPunjabactive","stateDistCountPunjabrecoverd","stateDistCountPunjabdeceased","stateDistCountAndhraPradeshactive","stateDistCountAndhraPradeshrecoverd","stateDistCountAndhraPradeshdeceased","stateDistCountUttarakhandactive","stateDistCountUttarakhandrecoverd","stateDistCountUttarakhanddeceased","stateDistCountOdishaactive","stateDistCountOdisharecoverd","stateDistCountOdishadeceased","stateDistCountPuducherryactive","stateDistCountPuducherryrecoverd","stateDistCountPuducherrydeceased","stateDistCountWestBengalactive","stateDistCountWestBengalrecoverd","stateDistCountWestBengaldeceased","stateDistCountChandigarhactive","stateDistCountChandigarhrecoverd","stateDistCountChandigarhdeceased","stateDistCountGujaratactive","stateDistCountGujaratrecoverd","stateDistCountGujaratdeceased","stateDistCountHimachalPradeshactive","stateDistCountHimachalPradeshrecoverd","stateDistCountHimachalPradeshdeceased","stateDistCountMadhyaPradeshactive","stateDistCountMadhyaPradeshrecoverd","stateDistCountMadhyaPradeshdeceased","stateDistCountBiharactive","stateDistCountBiharrecoverd","stateDistCountBihardeceased","stateDistCountManipuractive","stateDistCountManipurrecoverd","stateDistCountManipurdeceased","stateDistCountMizoramactive","stateDistCountMizoramrecoverd","stateDistCountMizoramdeceased","stateDistCountGoaactive","stateDistCountGoarecoverd","stateDistCountGoadeceased","stateDistCountAndamanandNicobarIslandsactive","stateDistCountAndamanandNicobarIslandsrecoverd","stateDistCountAndamanandNicobarIslandsdeceased","stateDistCountJharkhandactive","stateDistCountJharkhandrecoverd","stateDistCountJharkhanddeceased","stateDistCountAssamactive","stateDistCountAssamrecoverd","stateDistCountAssamdeceased","stateDistCountArunachalPradeshactive","stateDistCountArunachalPradeshrecoverd","stateDistCountArunachalPradeshdeceased","stateDistCountDadraandNagarHaveliactive","stateDistCountDadraandNagarHavelirecoverd","stateDistCountDadraandNagarHavelideceased","stateDistCountTripuraactive","stateDistCountTripurarecoverd","stateDistCountTripuradeceased","stateDistCountNagalandaactive","stateDistCountNagalandarecoverd","stateDistCountNagalandadeceased","stateDistCountMeghalayaactive","stateDistCountMeghalayarecoverd","stateDistCountMeghalayadeceased","chartlabels","React","TabPanel","children","other","component","role","hidden","aria-labelledby","Box","p","a11yProps","flexGrow","palette","paper","dark_tabpanel_bg","tabpanel","dark_tabpnel","dark_tabtext","setValue","AppBar","position","Tabs","onChange","event","newValue","scrollButtons","indicatorColor","textColor","centered","aria-label","Tab","icon","textTransform","confirmChild1","alignItem","confirmChild2","up","activeChild1","activeChild2","recoveredChild1","recoveredChild2","deceasedChild1","deceasedChild2","FirstGridRow","SecondGridRow","ThirdGridRow","FourthGridRow","statewisedata","marginRight","dark_statewisedata","statechild","dark_statechild","statechild2","covidsymbol","highsysmbol","avgsysmbol","lowsysmbol","countryStat","setCountryStat","ConfirmCount","setConfirmCount","ActivityCount","setActivityCount","RecoveredCount","setRecoveredCount","DeceasedCount","setDeceasedCount","stat","statewise","deaths","deltaconfirmed","deltarecovered","deltadeaths","months","formatDate","unformattedDate","day","slice","month","year","time","appUpdateDiv","appUpdateFont1","dark_appUpdateFont1","appUpdateFont2","dark_appUpdateFont2","appUpdateFont3","appUpdateFont4","appUpdateFont5","setStates","fetched","setFetched","lastUpdated","setLastUpdated","getStates","a","Promise","all","axios","get","lastupdatedtime","isNaN","Date","parse","formatDistance","formatDateAbsolute","banner_parent","dark_banner_parent","banner","banner_text","dark_banner_text","Quotes","setQuotes","setInterval","quotes","randomNum","Math","abs","floor","random","factoids","GlobalStat","isModelVisible","WorldCountries","WorldCountriesCopy","getWorldCountryCases","nextProp","isCountryModalVisible","catch","err","error","e","target","searchedResult","filter","country","toLowerCase","includes","InputBase","handleCountrySearch","placeholder","inputProps","IconButton","Divider","orientation","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","eachCountry","scope","countryInfo","iso2","countryCode","svg","todayCases","todayDeaths","cases","WorldMap","isMapModalVisible","DailyCovidNews","DailyCovid19News","getCovidNews","isNewsModalVisible","myHeaders","Headers","append","method","headers","redirect","news","List","News","ListItem","ListItemAvatar","images","Avatar","alt","src","url","ListItemText","primary","title","secondary","excerpt","href","ampWebUrl","navbar","boxShadow","darkmode_bg","globalstat","darkglobalstat","darknotibell","notibell","modeswitch","transform","darkmodeswitch","grow","text","inherit","darktitle","sectionDesktop","sectionMobile","DarkModeAction","dispatch","type","payload","NewsCount","setNewsCount","setModalVisible","setNewsModalVisible","mobileMoreAnchorEl","setMobileMoreAnchorEl","isMobileMenuOpen","Boolean","handleDarkMode","handleCountryRecords","handleCovidNews","renderMobileMenu","Menu","anchorEl","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","open","onClose","MenuItem","Badge","badgeContent","Toolbar","noWrap","aria-controls","aria-haspopup","currentTarget","exact","path","Covidquotes","table","minWidth","GridRowSecond","GridRowThird","Expansionroot","heading","typography","pxToRem","flexBasis","flexShrink","secondaryHeading","dark_secondaryHeading","thirdGrid","expdetails","noborder_con","border","noborder_act","noborder_rec","noborder_dec","concount","borderBottom","actcount","reccount","deccount","dark_panel","dark_panelContent","stateSelection","dark_stateSelection","greenZone","redZone","orangeZone","expanded","setExpanded","stateName","setstateName","setconfirmed","setactive","setdeceased","setrecovered","stateDistricts","setstateDistricts","statelist","setstatelist","selectedstate","match","params","apiRequest1","apiRequest2","values","states","statecode","filteredData","_","j","zones","zone","sumBy","partial","handlestateChange","ExpansionPanel","panel","isExpanded","ExpansionPanelSummary","expandIcon","ExpansionPanelDetails","size","align","darkapp","NavBar","SingleState","window","location","hostname","initialState","combineReducers","action","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.6ec06818.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './StateDetails.css';\r\nimport $ from 'jquery';\r\nimport Card from '@material-ui/core/Card';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport _ from 'lodash';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CountUp from 'react-countup';\r\nimport { connect } from 'react-redux';\r\n \r\n\r\nclass StateDetails extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      dynamicClassname:'extraCls',\r\n      sliderLog:'',\r\n      clearhandleautoslide:'',\r\n      StateWiseData:[],\r\n      StateTotalCases:[]\r\n    }\r\n  }\r\n  abortController = new AbortController()\r\n  componentDidMount(){\r\n    this.fetchStatesDetails();\r\n  }\r\n  componentWillUnmount(){\r\n    this.abortController.abort()\r\n  }\r\n  fetchStatesDetails(){\r\n    fetch('https://api.covid19india.org/state_district_wise.json', {signal : this.abortController.signal})\r\n    .then(res => res.json())\r\n    .then(statewisedetails =>{ \r\n      this.setState({ StateWiseData : {...statewisedetails} })\r\n      const statesTotalCount = [\r\n        {\r\n          state: '',\r\n          Districts:{}\r\n        }\r\n      ];\r\n      const stateTotalCases = [\r\n        {\r\n          state:'',\r\n          TotalCases:0\r\n        }\r\n      ]\r\n      let stateDistCountKerala = 0;\r\n      let stateDistCountDelhi = 0;\r\n      let stateDistCountTelangana = 0;\r\n      let stateDistCountRajasthan = 0;\r\n      let stateDistCountHaryana =0;\r\n      let UttarPradesh =0;\r\n      let Ladakh =0;\r\n      let TamilNadu =0;\r\n      let JammuandKashmir =0;\r\n      let Karnataka =0;\r\n      let Maharashtra =0;\r\n      let Punjab =0;\r\n      let AndhraPradesh =0;\r\n      let Uttarakhand =0;\r\n      let Odisha =0;\r\n      let Puducherry =0;\r\n      let WestBengal =0;\r\n      let Chandigarh =0;\r\n      let Gujarat =0;\r\n      let HimachalPradesh =0;\r\n      let MadhyaPradesh =0;\r\n      let Bihar =0;\r\n      let Manipur =0;\r\n      let Mizoram =0;\r\n      let Goa =0;\r\n      let AndamanandNicobarIslands =0;\r\n      let Jharkhand =0;\r\n      let Assam =0;\r\n      let ArunachalPradesh =0;\r\n      let DadraandNagarHaveli =0;\r\n      let Tripura =0;\r\n      let Nagaland =0;\r\n      let Meghalaya =0;\r\n\r\n      for(let state in statewisedetails){\r\n        statesTotalCount.push({state:state,Districts:statewisedetails[state].districtData})\r\n      }\r\n      for(let i=1; i<statesTotalCount.length; i++){\r\n        for(let district in statesTotalCount[i].Districts){\r\n          if(statesTotalCount[i].state == statesTotalCount[i].state){\r\n              if(statesTotalCount[i].state == 'Kerala'){\r\n                stateDistCountKerala += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'Delhi'){\r\n                stateDistCountDelhi += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'Telangana'){\r\n                stateDistCountTelangana += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'Rajasthan'){\r\n                stateDistCountRajasthan += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'Haryana'){\r\n                stateDistCountHaryana += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'Uttar Pradesh'){\r\n                UttarPradesh += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'Ladakh'){\r\n                Ladakh += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'Tamil Nadu'){\r\n                TamilNadu += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'Jammu and Kashmir'){\r\n                JammuandKashmir += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'Karnataka'){\r\n                Karnataka += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'Maharashtra'){\r\n                Maharashtra += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'Punjab'){\r\n                Punjab += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'Andhra Pradesh'){\r\n                AndhraPradesh += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'Uttarakhand'){\r\n                Uttarakhand += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'Odisha'){\r\n                Odisha += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'Puducherry'){\r\n                Puducherry += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'West Bengal'){\r\n                WestBengal += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'Chandigarh'){\r\n                Chandigarh += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'Gujarat'){\r\n                Gujarat += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'Himachal Pradesh'){\r\n                HimachalPradesh += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'Madhya Pradesh'){\r\n                MadhyaPradesh += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'Bihar'){\r\n                Bihar += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'Manipur'){\r\n                Manipur += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'Mizoram'){\r\n                Mizoram += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'Goa'){\r\n                Goa += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'Andaman and Nicobar Islands'){\r\n                AndamanandNicobarIslands += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'Jharkhand'){\r\n                Jharkhand += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'Assam'){\r\n                Assam += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'Arunachal Pradesh'){\r\n                ArunachalPradesh += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'Dadra and Nagar Haveli'){\r\n                DadraandNagarHaveli += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'Tripura'){\r\n                Tripura += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'Nagaland'){\r\n                Nagaland += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'Meghalaya'){\r\n                Meghalaya += statesTotalCount[i].Districts[district].confirmed\r\n              }\r\n          }\r\n        }\r\n      }\r\n\r\n      const StateArray = [\r\n        {state:'Kerala',totalcases:stateDistCountKerala},\r\n        {state:'Delhi',totalcases:stateDistCountDelhi},\r\n        {state:'Telangana',totalcases:stateDistCountTelangana},\r\n        {state:'Rajasthan',totalcases:stateDistCountRajasthan},\r\n        {state:'Haryana',totalcases:stateDistCountHaryana},\r\n        {state:'UttarPradesh',totalcases:UttarPradesh},\r\n        {state:'Ladakh',totalcases:Ladakh},\r\n        {state:'TamilNadu',totalcases:TamilNadu},\r\n        {state:'JammuandKashmir',totalcases:JammuandKashmir},\r\n        {state:'Karnataka',totalcases:Karnataka},\r\n        {state:'Maharashtra',totalcases:Maharashtra},\r\n        {state:'Punjab',totalcases:Punjab},\r\n        {state:'AndhraPradesh',totalcases:AndhraPradesh},\r\n        {state:'Uttarakhand',totalcases:Uttarakhand},\r\n        {state:'Odisha',totalcases:Odisha},\r\n        {state:'Puducherry',totalcases:Puducherry},\r\n        {state:'WestBengal',totalcases:WestBengal},\r\n        {state:'Chandigarh',totalcases:Chandigarh},\r\n        {state:'Gujarat',totalcases:Gujarat},\r\n        {state:'HimachalPradesh',totalcases:HimachalPradesh},\r\n        {state:'MadhyaPradesh',totalcases:MadhyaPradesh},\r\n        {state:'Bihar',totalcases:Bihar},\r\n        {state:'Manipur',totalcases:Manipur},\r\n        {state:'Mizoram',totalcases:Mizoram},\r\n        {state:'Goa',totalcases:Goa},\r\n        {state:'AndamanandNicobarIslands',totalcases:AndamanandNicobarIslands},\r\n        {state:'Jharkhand',totalcases:Jharkhand},\r\n        {state:'Assam',totalcases:Assam},\r\n        {state:'ArunachalPradesh',totalcases:ArunachalPradesh},\r\n        {state:'DadraandNagarHaveli',totalcases:DadraandNagarHaveli},\r\n        {state:'Tripura',totalcases:Tripura},\r\n        {state:'Nagaland',totalcases:Nagaland},\r\n        {state:'Meghalaya',totalcases:Meghalaya},\r\n      ]\r\n      const topStates = [\r\n        {\r\n        state:'',\r\n        total:0\r\n        }\r\n      ];\r\n      this.setState({ StateTotalCases: StateArray})\r\n      this.state.StateTotalCases.map((item) =>{\r\n         if(item.totalcases > 1000)\r\n         {\r\n          topStates.push({state:item.state,total:item.totalcases})\r\n         }\r\n      })\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Grid container\r\n        justify=\"space-evenly\"\r\n        alignItems=\"center\"\r\n        >\r\n          <Grid item md={11}>\r\n            <Card variant=\"outlined\" className={(this.props.darkmode)? 'dark_card' : '' }>\r\n              <CardContent>\r\n              <div style={{'display':'grid'}}>\r\n          <span style={{'width': '101%'}} className={(this.props.darkmode)? 'dark_covidsymbol' : 'covidsymbol' }><span className='highsysmbol'></span>States above <big  className='stateTotal'>1000</big> covid cases.</span><span className={(this.props.darkmode)? 'dark_covidsymbol' : 'covidsymbol' }><span className='avgsysmbol'></span>States above <big className='stateTotal'>500</big> covid cases.</span><span className={(this.props.darkmode)? 'dark_covidsymbol' : 'covidsymbol' }><span className='lowsysmbol'></span>States below <big className='stateTotal'>100</big> covid cases.</span>\r\n        </div>\r\n                <Grid container  spacing={2}>\r\n\r\n                  {\r\n                    this.state.StateTotalCases.map((stateWiseDetails, index) =>{\r\n                        return <Grid item xs={6} md={2} key={index}>\r\n                                  <Card variant=\"outlined\">\r\n                                    <CardContent className={(stateWiseDetails.totalcases > 1000 )? 'highCases': (stateWiseDetails.totalcases < 100)? 'safeZone' : 'avrageCases'}>\r\n                                      <div>\r\n                                      <Typography  className='stateCards'>\r\n                                        {stateWiseDetails.state}\r\n                                      </Typography>\r\n                                      </div>\r\n                                      <div>\r\n                                      <Typography  className='statetotal'>\r\n                                      <CountUp end={stateWiseDetails.totalcases} duration={3.75} separator=\",\"></CountUp> \r\n                                      </Typography>\r\n                                      </div>\r\n                                    </CardContent>\r\n                                  </Card>\r\n                                </Grid>\r\n                    })\r\n                  }\r\n                </Grid>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n  return {\r\n      darkmode : state.response.darkmode\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(StateDetails);","import React, { useState,useEffect } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { ComposableMap, Geographies, Geography } from 'react-simple-maps';\r\nimport { scaleQuantile } from 'd3-scale';\r\nimport ReactTooltip from 'react-tooltip';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CountUp from 'react-countup';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst useStyles = makeStyles((theme) =>({\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    justifyContent : 'center',\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n      width: theme.spacing(12),\r\n      height: theme.spacing(10),\r\n      [theme.breakpoints.down('xs')]: {\r\n        margin: theme.spacing(1),\r\n        width: theme.spacing(7),\r\n        height: theme.spacing(7),\r\n      }\r\n\r\n    },\r\n  },\r\n  notavailable:{\r\n    fontSize: '12px !important',\r\n    [theme.breakpoints.down('xs')]: {\r\n      fontSize: '5px !important',\r\n    }\r\n  },\r\n  confirm_paper:{\r\n    background: 'rgba(255,7,58,.12549) !important'\r\n  },\r\n  active_paper:{\r\n    background: '#E7F9FE'\r\n  },\r\n  recovered_paper:{\r\n    background: '#CDFFCD'\r\n  },\r\n  deceased_paper:{\r\n    background: '#E6E6E2'\r\n  },\r\n  state:{\r\n    color: '#007bff',\r\n    textAlign: 'center',\r\n    fontWeight: 900,\r\n    fontFamily: 'archia'\r\n  },\r\n  linkstatepage: {\r\n    cursor: 'pointer',\r\n    marginLeft: '18%',\r\n    fontFamily: 'archia',\r\n    background: 'rgba(255,193,7,.12549)',\r\n    borderRadius: '5px',\r\n    color: '#fd7e14',\r\n    fontSize: '.75rem',\r\n    padding: '.5rem',\r\n    textDecoration: 'none',\r\n    transition: 'all .2s ease-in-out'\r\n  },\r\n  confirm:{\r\n    fontSize: '12px',\r\n    textAlign: 'center',\r\n    fontWeight: 900,\r\n    fontFamily: 'archia',\r\n    color: 'rgba(255,7,58,.6)',\r\n    marginTop: '12px',\r\n    [theme.breakpoints.down('xs')]: {\r\n      fontSize: '8px',\r\n    }\r\n  },\r\n  active:{\r\n    fontSize: '12px',\r\n    textAlign: 'center',\r\n    fontWeight: 900,\r\n    fontFamily: 'archia',\r\n    color: 'rgba(0,123,255,.6)',\r\n    marginTop: '12px',\r\n    [theme.breakpoints.down('xs')]: {\r\n      fontSize: '8px',\r\n    }\r\n  },\r\n  recovered:{\r\n    fontSize: '12px',\r\n    textAlign: 'center',\r\n    fontWeight: 900,\r\n    fontFamily: 'archia',\r\n    color: 'rgba(40,167,69,.6)',\r\n    marginTop: '12px',\r\n    [theme.breakpoints.down('xs')]: {\r\n      fontSize: '8px',\r\n    }\r\n  },\r\n  deceased:{\r\n    fontSize: '12px',\r\n    textAlign: 'center',\r\n    fontWeight: 900,\r\n    fontFamily: 'archia',\r\n    color: 'rgba(108,117,125,.6)',\r\n    marginTop: '12px',\r\n    [theme.breakpoints.down('xs')]: {\r\n      fontSize: '8px',\r\n    }\r\n  },\r\n  confirmCount:{\r\n    color: '#ff073a',\r\n    textAlign: 'center',\r\n    fontWeight: 900,\r\n    fontFamily: 'archia',\r\n    fontSize: '20px',\r\n    [theme.breakpoints.down('xs')]: {\r\n      fontSize: '14px',\r\n    }\r\n  },\r\n  activeCount:{\r\n    color: '#007bff',\r\n    textAlign: 'center',\r\n    fontWeight: 900,\r\n    fontFamily: 'archia',\r\n    fontSize: '20px',\r\n    [theme.breakpoints.down('xs')]: {\r\n      fontSize: '14px',\r\n    }\r\n  },\r\n  recoveredCount:{\r\n    color: '#28a745',\r\n    textAlign: 'center',\r\n    fontWeight: 900,\r\n    fontFamily: 'archia',\r\n    fontSize: '20px',\r\n    [theme.breakpoints.down('xs')]: {\r\n      fontSize: '14px',\r\n    }\r\n  },\r\n  decreasedCount:{\r\n    color: '#6c757d',\r\n    textAlign: 'center',\r\n    fontWeight: 900,\r\n    fontFamily: 'archia',\r\n    fontSize: '20px',\r\n    [theme.breakpoints.down('xs')]: {\r\n      fontSize: '14px',\r\n    }\r\n  },\r\n  GridRow: {\r\n    marginTop: '10px !important'\r\n  }\r\n}))\r\nconst INDIA_TOPO_JSON = require('./india.topo.json');\r\n\r\nconst PROJECTION_CONFIG = {\r\n  scale: 350,\r\n  center: [78.9629, 22.5937] \r\n};\r\n\r\n// Red Variants\r\nconst COLOR_RANGE = [\r\n  '#ffedea',\r\n  '#ffcec5',\r\n  '#ffad9f',\r\n  '#ff8a75',\r\n  '#ff5533',\r\n  '#e2492d',\r\n  '#be3d26',\r\n  '#9a311f',\r\n  '#782618'\r\n];\r\n\r\nconst DEFAULT_COLOR = '#EEE';\r\n\r\nconst getRandomInt = () => {\r\n  return parseInt(Math.random() * 100);\r\n};\r\n\r\nconst geographyStyle = {\r\n  default: {\r\n    outline: 'none'\r\n  },\r\n  hover: {\r\n    fill: '#ccc',\r\n    transition: 'all 250ms',\r\n    outline: 'none'\r\n  },\r\n  pressed: {\r\n    outline: 'none'\r\n  }\r\n};\r\n\r\nconst getHeatMapData = () => {\r\n  return [\r\n    { id: 'AP', state: 'Andhra Pradesh', value: 0 },\r\n    { id: 'AR', state: 'Arunachal Pradesh', value: 0 },\r\n    { id: 'AS', state: 'Assam', value: 0 },\r\n    { id: 'BR', state: 'Bihar', value: 0 },\r\n    { id: 'CT', state: 'Chhattisgarh', value: 0 },\r\n    { id: 'GA', state: 'Goa', value: 0 },\r\n    { id: 'GJ', state: 'Gujarat', value: 0 },\r\n    { id: 'HR', state: 'Haryana', value: 0 },\r\n    { id: 'HP', state: 'Himachal Pradesh', value: 0 },\r\n    { id: 'JH', state: 'Jharkhand', value: 0 },\r\n    { id: 'KA', state: 'Karnataka', value: 0 },\r\n    { id: 'KL', state: 'Kerala', value: 0 },\r\n    { id: 'MP', state: 'Madhya Pradesh', value: 0 },\r\n    { id: 'MH', state: 'Maharashtra', value: 0 },\r\n    { id: 'MN', state: 'Manipur', value: 0 },\r\n    { id: 'ML', state: 'Meghalaya', value: 0 },\r\n    { id: 'MZ', state: 'Mizoram', value: 0 },\r\n    { id: 'NL', state: 'Nagaland', value: 0 },\r\n    { id: 'OR', state: 'Orissa', value: 0 },\r\n    { id: 'PB', state: 'Punjab', value: 0 },\r\n    { id: 'RJ', state: 'Rajasthan', value: 0 },\r\n    { id: 'SK', state: 'Sikkim', value: 0 },\r\n    { id: 'TN', state: 'Tamil Nadu', value: 0 },\r\n    { id: 'TG', state: 'Telangana', value: 0 },\r\n    { id: 'TR', state: 'Tripura', value: 0 },\r\n    { id: 'UT', state: 'Uttarakhand', value: 0 },\r\n    { id: 'UP', state: 'Uttar Pradesh', value: 0 },\r\n    { id: 'WB', state: 'West Bengal', value: 0 },\r\n    { id: 'WB', state: 'West Bengal', value: 0 },\r\n    { id: 'AN', state: 'Andaman and Nicobar Islands', value: 0 },\r\n    { id: 'CH', state: 'Chandigarh', value: 0 },\r\n    { id: 'DN', state: 'Dadra and Nagar Haveli', value: 0 },\r\n    { id: 'DD', state: 'Daman and Diu', value: 0 },\r\n    { id: 'DL', state: 'Delhi', value: 0 },\r\n    { id: 'JK', state: 'Jammu and Kashmir', value: 0 },\r\n    { id: 'LA', state: 'Ladakh', value: 0 },\r\n    { id: 'LD', state: 'Lakshadweep', value: 0 },\r\n    { id: 'PY', state: 'Puducherry', value: 0 }\r\n  ];\r\n};\r\n\r\nfunction App(props) {\r\n\r\n  const classes = useStyles();\r\n  const [stateCode, setstateCode] = useState('');\r\n  const [stateContent, setstateContent] = useState('');\r\n  const [stateTotal,setstateTotal] = useState(0);\r\n  const [stateactiveTotal,setstateactiveTotal] = useState(0);\r\n  const [staterecoveredTotal,setstaterecoveredTotal] = useState(0);\r\n  const [statedeceasedTotal,setstatedeceasedTotal] = useState(0);\r\n\r\n\r\n  const [data, setData] = useState(getHeatMapData());\r\n\r\n  useEffect(()=>{\r\n    console.log('singleStateData',props.stateResponse)\r\n      if(props.StateMapData.length !== 0){\r\n    const getHeatMapData2 = () => {\r\n        return [\r\n          { id: 'OR', state: 'Orissa', value: props.StateMapData[14].totalcases,active:props.StateMapData[14].activetotal,recovered:props.StateMapData[14].recoveredtotal,deceased:props.StateMapData[14].deceasedtotal },\r\n          { id: 'AP', state: 'Andhra Pradesh', value: props.StateMapData[12].totalcases,active:props.StateMapData[12].activetotal,recovered:props.StateMapData[12].recoveredtotal,deceased:props.StateMapData[12].deceasedtotal },\r\n          { id: 'AR', state: 'Arunachal Pradesh', value: props.StateMapData[28].totalcases,active:props.StateMapData[28].activetotal,recovered:props.StateMapData[28].recoveredtotal,deceased:props.StateMapData[28].deceasedtotal },\r\n          { id: 'AS', state: 'Assam', value: props.StateMapData[27].totalcases,active: props.StateMapData[27].activetotal,recovered: props.StateMapData[27].recoveredtotal,deceased: props.StateMapData[27].deceasedtotal },\r\n          { id: 'BR', state: 'Bihar', value: props.StateMapData[21].totalcases,active:props.StateMapData[21].activetotal,recovered:props.StateMapData[21].recoveredtotal,deceased:props.StateMapData[21].deceasedtotal },\r\n          // { id: 'CT', state: 'Chhattisgarh', value: props.StateMapData[17].totalcases,active:props.StateMapData[17].activetotal,recovered:props.StateMapData[17].recoveredtotal,deceased:props.StateMapData[17].deceasedtotal },\r\n          { id: 'GA', state: 'Goa', value: props.StateMapData[24].totalcases,active:props.StateMapData[24].activetotal,recovered:props.StateMapData[24].recoveredtotal,deceased:props.StateMapData[24].deceasedtotal },\r\n          { id: 'GJ', state: 'Gujarat', value: props.StateMapData[18].totalcases,active:props.StateMapData[18].activetotal,recovered:props.StateMapData[18].recoveredtotal,deceased:props.StateMapData[18].deceasedtotal },\r\n          { id: 'HR', state: 'Haryana', value: props.StateMapData[4].totalcases,active:props.StateMapData[4].activetotal,recovered:props.StateMapData[4].recoveredtotal,deceased:props.StateMapData[4].deceasedtotal },\r\n          { id: 'HP', state: 'Himachal Pradesh', value: props.StateMapData[19].totalcases,active:props.StateMapData[19].activetotal,recovered:props.StateMapData[19].recoveredtotal,deceased:props.StateMapData[19].deceasedtotal },\r\n          { id: 'JH', state: 'Jharkhand', value: props.StateMapData[26].totalcases,active:props.StateMapData[26].activetotal,recovered:props.StateMapData[26].recoveredtotal,deceased:props.StateMapData[26].deceasedtotal },\r\n          { id: 'KA', state: 'Karnataka', value: props.StateMapData[9].totalcases,active:props.StateMapData[9].activetotal,recovered:props.StateMapData[9].recoveredtotal,deceased:props.StateMapData[9].deceasedtotal },\r\n          { id: 'KL', state: 'Kerala', value: props.StateMapData[0].totalcases, active: props.StateMapData[0].activetotal, recovered: props.StateMapData[0].recoveredtotal,deceased: props.StateMapData[0].deceasedtotal},\r\n          { id: 'MP', state: 'Madhya Pradesh', value: props.StateMapData[20].totalcases,active:props.StateMapData[20].activetotal,recovered:props.StateMapData[20].recoveredtotal,deceased:props.StateMapData[20].deceasedtotal },\r\n          { id: 'MH', state: 'Maharashtra', value: props.StateMapData[10].totalcases,active:props.StateMapData[10].activetotal,recovered:props.StateMapData[10].recoveredtotal,deceased: props.StateMapData[10].deceasedtotal},\r\n          { id: 'MN', state: 'Manipur', value: props.StateMapData[22].totalcases,active:props.StateMapData[22].activetotal,recovered:props.StateMapData[22].recoveredtotal,deceased:props.StateMapData[22].deceasedtotal },\r\n          { id: 'ML', state: 'Meghalaya', value: props.StateMapData[32].totalcases,active:props.StateMapData[32].activetotal,recovered:props.StateMapData[32].recoveredtotal,deceased:props.StateMapData[32].deceasedtotal },\r\n          { id: 'MZ', state: 'Mizoram', value: props.StateMapData[23].totalcases,active:props.StateMapData[23].activetotal,recovered:props.StateMapData[23].recoveredtotal,deceased:props.StateMapData[23].deceasedtotal },\r\n          { id: 'NL', state: 'Nagaland', value: props.StateMapData[31].totalcases,active:props.StateMapData[31].activetotal,recovered:props.StateMapData[31].recoveredtotal,deceased:props.StateMapData[31].deceasedtotal },\r\n          \r\n          { id: 'PB', state: 'Punjab', value: props.StateMapData[11].totalcases,active:props.StateMapData[11].activetotal,recovered:props.StateMapData[11].recoveredtotal,deceased:props.StateMapData[11].deceasedtotal },\r\n          { id: 'RJ', state: 'Rajasthan', value: props.StateMapData[3].totalcases,active:props.StateMapData[3].activetotal,recovered:props.StateMapData[3].recoveredtotal,deceased:props.StateMapData[3].deceasedtotal },\r\n          { id: 'SK', state: 'Sikkim', value: 'NA' },\r\n          { id: 'TN', state: 'Tamil Nadu', value: props.StateMapData[7].totalcases,active:props.StateMapData[7].activetotal,recovered:props.StateMapData[7].recoveredtotal,deceased:props.StateMapData[7].deceasedtotal },\r\n          { id: 'TG', state: 'Telangana', value: props.StateMapData[2].totalcases,active:props.StateMapData[2].activetotal,recovered:props.StateMapData[2].recoveredtotal,deceased:props.StateMapData[2].deceasedtotal },\r\n          { id: 'TR', state: 'Tripura', value: props.StateMapData[30].totalcases,active:props.StateMapData[30].activetotal,recovered:props.StateMapData[30].recoveredtotal,deceased: props.StateMapData[30].deceasedtotal},\r\n          { id: 'UT', state: 'Uttarakhand', value: props.StateMapData[13].totalcases,active:props.StateMapData[13].activetotal,recovered:props.StateMapData[13].recoveredtotal,deceased:props.StateMapData[13].deceasedtotal },\r\n          { id: 'UP', state: 'Uttar Pradesh', value: props.StateMapData[5].totalcases,active:props.StateMapData[5].activetotal,recovered:props.StateMapData[5].recoveredtotal,deceased:props.StateMapData[5].deceasedtotal },\r\n          { id: 'WB', state: 'West Bengal', value: props.StateMapData[16].totalcases,active:props.StateMapData[16].activetotal,recovered:props.StateMapData[16].recoveredtotal,deceased:props.StateMapData[16].deceasedtotal },\r\n          { id: 'AN', state: 'Andaman and Nicobar Islands', value: props.StateMapData[25].totalcases,active:props.StateMapData[25].activetotal,recovered:props.StateMapData[25].recoveredtotal,deceased:props.StateMapData[25].deceasedtotal },\r\n          { id: 'CH', state: 'Chandigarh', value: props.StateMapData[17].totalcases,active:props.StateMapData[17].activetotal,recovered:props.StateMapData[17].recoveredtotal,deceased:props.StateMapData[17].deceasedtotal },\r\n          { id: 'DN', state: 'Dadra and Nagar Haveli', value: props.StateMapData[29].totalcases,active:props.StateMapData[29].activetotal,recovered:props.StateMapData[29].recoveredtotal,deceased:props.StateMapData[29].deceasedtotal },\r\n          { id: 'DD', state: 'Daman and Diu', value: 'NA' },\r\n          { id: 'DL', state: 'Delhi', value: props.StateMapData[1].totalcases,active:props.StateMapData[1].activetotal,recovered:props.StateMapData[1].recoveredtotal,deceased:props.StateMapData[1].deceasedtotal },\r\n          { id: 'JK', state: 'Jammu and Kashmir', value: props.StateMapData[8].totalcases,active:props.StateMapData[8].activetotal,recovered:props.StateMapData[8].recoveredtotal,deceased:props.StateMapData[8].deceasedtotal },\r\n          { id: 'LA', state: 'Ladakh', value: props.StateMapData[6].totalcases,active:props.StateMapData[6].activetotal,recovered:props.StateMapData[6].recoveredtotal,deceased:props.StateMapData[6].deceasedtotal },\r\n          { id: 'LD', state: 'Lakshadweep', value: \"NA\" },\r\n          { id: 'PY', state: 'Puducherry', value: props.StateMapData[15].totalcases,active:props.StateMapData[15].activetotal,recovered:props.StateMapData[15].recoveredtotal,deceased:props.StateMapData[15].deceasedtotal }\r\n        ]\r\n      }\r\n      setData(getHeatMapData2());\r\n    }else{\r\n        console.log('undefined')\r\n    }\r\n  },[props]);\r\n\r\n  const gradientData = {\r\n    fromColor: COLOR_RANGE[0],\r\n    toColor: COLOR_RANGE[COLOR_RANGE.length - 1],\r\n    min: 0,\r\n    max: data.reduce((max, item) => (item.value > max ? item.value : max), 0)\r\n  };\r\n\r\n  const colorScale = scaleQuantile()\r\n    .domain(data.map(d => d.value))\r\n    .range(COLOR_RANGE);\r\n\r\n  const onMouseEnter = (geo, current = { value: 'NA' }) => {\r\n    return () => {\r\n      setstateCode(`${current.id}`);\r\n      setstateContent(`${geo.properties.name}`);\r\n      setstateTotal(`${current.value}`);\r\n      setstateactiveTotal(`${current.active}`);\r\n      setstaterecoveredTotal(`${current.recovered}`);\r\n      setstatedeceasedTotal(`${current.deceased}`);\r\n    };\r\n  };\r\n\r\n  const onMouseLeave = () => {\r\n  };\r\n\r\n  const handelStateRoute = (stateCode) => {\r\n    console.log('Route Data state code',stateCode)\r\n    props.history.push('/state/' + stateCode)\r\n  }\r\n  return (\r\n    <div className=\"full-width-height container\">\r\n      <Grid container className={classes.GridRow}>\r\n        <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n        <div className={classes.root}>\r\n          <Paper elevation={0} className={classes.confirm_paper}>\r\n          <Typography variant=\"subtitle1\" className={classes.confirm} gutterBottom>Confirmed</Typography>\r\n          <Typography variant=\"subtitle1\" className={classes.confirmCount} gutterBottom>\r\n            {\r\n            (stateTotal == 'NA')?<span className={classes.notavailable}>Not Available</span>:<CountUp end={parseInt(stateTotal)} duration={3.75} separator=\",\"></CountUp> \r\n            }\r\n          </Typography>\r\n          </Paper>\r\n          <Paper elevation={0} className={classes.active_paper}>\r\n          <Typography variant=\"subtitle1\" className={classes.active} gutterBottom>Active</Typography>\r\n          <Typography variant=\"subtitle1\" className={classes.activeCount} gutterBottom>\r\n          {\r\n            (stateTotal == 'NA')?<span className={classes.notavailable}>Not Available</span>:<CountUp end={parseInt(stateactiveTotal)} duration={3.75} separator=\",\"></CountUp> \r\n          }\r\n            </Typography>\r\n          </Paper>\r\n          <Paper elevation={0} className={classes.recovered_paper}>\r\n          <Typography variant=\"subtitle1\" className={classes.recovered} gutterBottom>Recovered</Typography>\r\n          <Typography variant=\"subtitle1\" className={classes.recoveredCount} gutterBottom>\r\n          {\r\n            (stateTotal == 'NA')?<span className={classes.notavailable}>Not Available</span>:<CountUp end={parseInt(staterecoveredTotal)} duration={3.75} separator=\",\"></CountUp> \r\n          }\r\n            </Typography>\r\n          </Paper>\r\n          <Paper elevation={0} className={classes.deceased_paper}>\r\n          <Typography variant=\"subtitle1\" className={classes.deceased} gutterBottom>Deceased</Typography>\r\n          <Typography variant=\"subtitle1\" className={classes.decreasedCount} gutterBottom>\r\n          {\r\n            (stateTotal == 'NA')?<span className={classes.notavailable}>Not Available</span>:<CountUp end={parseInt(statedeceasedTotal)} duration={3.75} separator=\",\"></CountUp>  \r\n          }\r\n            </Typography>\r\n          </Paper>\r\n        </div>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid container className={classes.GridRow}>\r\n        <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n        <Typography variant=\"subtitle1\" className={classes.state} gutterBottom>{stateContent || 'No State Selected'}<span className={classes.linkstatepage} onClick={() =>handelStateRoute(stateCode)}>Visit state page</span></Typography>\r\n        </Grid>\r\n      </Grid>\r\n        <ComposableMap\r\n          projectionConfig={PROJECTION_CONFIG}\r\n          projection=\"geoMercator\"\r\n          width={350}\r\n          height={190}\r\n          data-tip=\"\"\r\n        >\r\n          <Geographies geography={INDIA_TOPO_JSON}>\r\n            {({ geographies }) =>\r\n              geographies.map(geo => {\r\n                console.log('geographies',geographies)\r\n                const current = data.find(s => s.id === geo.id);\r\n                console.log('current',current)\r\n                return (\r\n                  <Geography\r\n                    key={geo.rsmKey}\r\n                    geography={geo}\r\n                    fill={current ? colorScale(current.value) : DEFAULT_COLOR}\r\n                    style={geographyStyle}\r\n                    onMouseEnter={onMouseEnter(geo, current)}\r\n                    onMouseLeave={onMouseLeave}\r\n                  />\r\n                );\r\n              })\r\n            }\r\n          </Geographies>\r\n        </ComposableMap>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(App);\r\n","import React from 'react';\r\nimport './StateDetails.css';\r\nimport { HorizontalBar,Bar } from 'react-chartjs-2';\r\nimport StatMap from '../StateMap/StateMap.js';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nclass StateChart extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n          isVertical: true,\r\n          StateData:[],\r\n          data : {\r\n            labels: [],\r\n            datasets: [\r\n              {\r\n                label: 'States',\r\n                backgroundColor: '#FF4141',\r\n                borderColor: 'none',\r\n                borderWidth: 1,\r\n                hoverBackgroundColor: 'rgba(255,9,12,0.4)',\r\n                hoverBorderColor: 'rgba(255,9,12,1)',\r\n                data: []\r\n              }\r\n            ]\r\n          }\r\n        }\r\n        this.handelGraphToggle = this.handelGraphToggle.bind(this);\r\n    }\r\n    abortController = new AbortController()\r\n    componentDidMount(){\r\n      this.fetchStatesDetails();\r\n    }\r\n    componentWillUnmount(){\r\n      this.abortController.abort()\r\n    }\r\n    handelGraphToggle(){\r\n      if(this.state.isVertical == true){\r\n        this.setState({ isVertical: false })\r\n      }else if(this.state.isVertical == false){\r\n        this.setState({ isVertical: true })\r\n      }\r\n    }\r\n    fetchStatesDetails(){\r\n      fetch('https://api.covid19india.org/state_district_wise.json', {signal: this.abortController.signal})\r\n      .then(res => res.json())\r\n      .then(statewisedetails =>{ \r\n        console.log('State records...',statewisedetails)\r\n        this.setState({ StateWiseData : {...statewisedetails} })\r\n        const statesTotalCount = [\r\n          {\r\n            state: '',\r\n            Districts:{}\r\n          }\r\n        ];\r\n        const stateTotalCases = [\r\n          {\r\n            state:'',\r\n            TotalCases:0\r\n          }\r\n        ]\r\n        //Kerela\r\n        let stateDistCountKerala = 0;\r\n        let stateDistCountKeralaactive = 0;\r\n        let stateDistCountKeralarecoverd = 0;\r\n        let stateDistCountKeraladeceased = 0;\r\n        //Delhi\r\n        let stateDistCountDelhi = 0;\r\n        let stateDistCountDelhiactive = 0;\r\n        let stateDistCountDelhirecoverd = 0;\r\n        let stateDistCountDelhideceased = 0;\r\n        //Telangana\r\n        let stateDistCountTelangana = 0;\r\n        let stateDistCountTelanganaactive = 0;\r\n        let stateDistCountTelanganarecoverd = 0;\r\n        let stateDistCountTelanganadeceased = 0;\r\n        //Rajasthan\r\n        let stateDistCountRajasthan = 0;\r\n        let stateDistCountRajasthanactive = 0; \r\n        let stateDistCountRajasthanrecoverd = 0; \r\n        let stateDistCountRajasthandeceased = 0; \r\n\r\n        //Haryana\r\n        let stateDistCountHaryana =0;\r\n        let stateDistCountHaryanaactive =0; \r\n        let stateDistCountHaryanarecoverd =0; \r\n        let stateDistCountHaryanadeceased =0; \r\n\r\n        //UttarPradesh\r\n        let UttarPradesh =0;\r\n        let stateDistCountUttarPradeshactive =0; \r\n        let stateDistCountUttarPradeshrecoverd =0; \r\n        let stateDistCountUttarPradeshdeceased =0; \r\n\r\n        //Ladakh\r\n        let Ladakh =0;\r\n        let stateDistCountLadakhactive =0; \r\n        let stateDistCountLadakhrecoverd =0; \r\n        let stateDistCountLadakhdeceased =0;\r\n        \r\n        //TamilNadu\r\n        let TamilNadu =0;\r\n        let stateDistCountTamilNaduactive =0; \r\n        let stateDistCountTamilNadurecoverd =0; \r\n        let stateDistCountTamilNadudeceased =0; \r\n\r\n        //JammuandKashmir\r\n        let JammuandKashmir =0;\r\n        let stateDistCountJammuandKashmiractive =0; \r\n        let stateDistCountJammuandKashmirrecoverd =0; \r\n        let stateDistCountJammuandKashmirdeceased =0; \r\n\r\n        //Karnataka\r\n        let Karnataka =0;\r\n        let stateDistCountKarnatakaactive =0; \r\n        let stateDistCountKarnatakarecoverd =0; \r\n        let stateDistCountKarnatakadeceased =0; \r\n\r\n        //Maharashtra\r\n        let Maharashtra =0;\r\n        let stateDistCountMaharashtraactive =0; \r\n        let stateDistCountMaharashtrarecoverd =0; \r\n        let stateDistCountMaharashtradeceased =0; \r\n\r\n        //Punjab\r\n        let Punjab =0;\r\n        let stateDistCountPunjabactive =0; \r\n        let stateDistCountPunjabrecoverd =0; \r\n        let stateDistCountPunjabdeceased =0; \r\n\r\n        //AndhraPradesh\r\n        let AndhraPradesh =0;\r\n        let stateDistCountAndhraPradeshactive =0; \r\n        let stateDistCountAndhraPradeshrecoverd =0; \r\n        let stateDistCountAndhraPradeshdeceased =0; \r\n\r\n        //Uttarakhand\r\n        let Uttarakhand =0;\r\n        let stateDistCountUttarakhandactive =0; \r\n        let stateDistCountUttarakhandrecoverd =0; \r\n        let stateDistCountUttarakhanddeceased =0;\r\n\r\n        //Odisha\r\n        let Odisha =0;\r\n        let stateDistCountOdishaactive =0; \r\n        let stateDistCountOdisharecoverd =0; \r\n        let stateDistCountOdishadeceased =0; \r\n\r\n        //Puducherry\r\n        let Puducherry =0;\r\n        let stateDistCountPuducherryactive =0; \r\n        let stateDistCountPuducherryrecoverd =0; \r\n        let stateDistCountPuducherrydeceased =0; \r\n\r\n        //WestBengal\r\n        let WestBengal =0;\r\n        let stateDistCountWestBengalactive =0;\r\n        let stateDistCountWestBengalrecoverd =0; \r\n        let stateDistCountWestBengaldeceased =0;\r\n\r\n        //Chandigarh\r\n        let Chandigarh =0;\r\n        let stateDistCountChandigarhactive =0; \r\n        let stateDistCountChandigarhrecoverd =0; \r\n        let stateDistCountChandigarhdeceased =0; \r\n\r\n        //Gujarat\r\n        let Gujarat =0;\r\n        let stateDistCountGujaratactive =0; \r\n        let stateDistCountGujaratrecoverd =0; \r\n        let stateDistCountGujaratdeceased =0;\r\n\r\n        //HimachalPradesh\r\n        let HimachalPradesh =0;\r\n        let stateDistCountHimachalPradeshactive =0; \r\n        let stateDistCountHimachalPradeshrecoverd =0; \r\n        let stateDistCountHimachalPradeshdeceased =0; \r\n\r\n        //MadhyaPradesh\r\n        let MadhyaPradesh =0;\r\n        let stateDistCountMadhyaPradeshactive =0; \r\n        let stateDistCountMadhyaPradeshrecoverd =0; \r\n        let stateDistCountMadhyaPradeshdeceased =0; \r\n\r\n        //Bihar\r\n        let Bihar =0;\r\n        let stateDistCountBiharactive =0; \r\n        let stateDistCountBiharrecoverd =0; \r\n        let stateDistCountBihardeceased =0; \r\n\r\n        //Manipur\r\n        let Manipur =0;\r\n        let stateDistCountManipuractive =0; \r\n        let stateDistCountManipurrecoverd =0; \r\n        let stateDistCountManipurdeceased =0;\r\n\r\n        //Mizoram\r\n        let Mizoram =0;\r\n        let stateDistCountMizoramactive =0; \r\n        let stateDistCountMizoramrecoverd =0; \r\n        let stateDistCountMizoramdeceased =0; \r\n\r\n        //Goa\r\n        let Goa =0;\r\n        let stateDistCountGoaactive =0; \r\n        let stateDistCountGoarecoverd =0; \r\n        let stateDistCountGoadeceased =0;\r\n\r\n        //AndamanandNicobarIslands\r\n        let AndamanandNicobarIslands =0;\r\n        let stateDistCountAndamanandNicobarIslandsactive =0; \r\n        let stateDistCountAndamanandNicobarIslandsrecoverd =0; \r\n        let stateDistCountAndamanandNicobarIslandsdeceased =0; \r\n\r\n        //Jharkhand\r\n        let Jharkhand =0;\r\n        let stateDistCountJharkhandactive =0; \r\n        let stateDistCountJharkhandrecoverd =0; \r\n        let stateDistCountJharkhanddeceased =0;\r\n\r\n        //Assam\r\n        let Assam =0;\r\n        let stateDistCountAssamactive =0; \r\n        let stateDistCountAssamrecoverd =0; \r\n        let stateDistCountAssamdeceased =0;\r\n\r\n        //ArunachalPradesh\r\n        let ArunachalPradesh =0;\r\n        let stateDistCountArunachalPradeshactive =0;\r\n        let stateDistCountArunachalPradeshrecoverd =0;\r\n        let stateDistCountArunachalPradeshdeceased =0;\r\n\r\n        //DadraandNagarHaveli\r\n        let DadraandNagarHaveli =0;\r\n        let stateDistCountDadraandNagarHaveliactive =0; \r\n        let stateDistCountDadraandNagarHavelirecoverd =0; \r\n        let stateDistCountDadraandNagarHavelideceased =0; \r\n\r\n        //Tripura\r\n        let Tripura =0;\r\n        let stateDistCountTripuraactive =0;\r\n        let stateDistCountTripurarecoverd =0;\r\n        let stateDistCountTripuradeceased =0;\r\n        //Nagaland\r\n        let Nagaland =0;\r\n        let stateDistCountNagalandaactive =0;\r\n        let stateDistCountNagalandarecoverd =0;\r\n        let stateDistCountNagalandadeceased =0;\r\n\r\n        //Meghalaya\r\n        let Meghalaya =0;\r\n        let stateDistCountMeghalayaactive =0; \r\n        let stateDistCountMeghalayarecoverd =0; \r\n        let stateDistCountMeghalayadeceased =0; \r\n  \r\n        for(let state in statewisedetails){\r\n          statesTotalCount.push({state:state,Districts:statewisedetails[state].districtData})\r\n        }\r\n        for(let i=1; i<statesTotalCount.length; i++){\r\n          for(let district in statesTotalCount[i].Districts){\r\n            if(statesTotalCount[i].state == statesTotalCount[i].state){\r\n                if(statesTotalCount[i].state == 'Kerala'){\r\n                  stateDistCountKerala += statesTotalCount[i].Districts[district].confirmed\r\n                  stateDistCountKeralaactive += statesTotalCount[i].Districts[district].active\r\n                  stateDistCountKeralarecoverd += statesTotalCount[i].Districts[district].recovered\r\n                  stateDistCountKeraladeceased += statesTotalCount[i].Districts[district].deceased\r\n                }else if(statesTotalCount[i].state == 'Delhi'){\r\n                  stateDistCountDelhi += statesTotalCount[i].Districts[district].confirmed\r\n                  stateDistCountDelhiactive += statesTotalCount[i].Districts[district].active\r\n                  stateDistCountDelhirecoverd += statesTotalCount[i].Districts[district].recovered\r\n                  stateDistCountDelhideceased += statesTotalCount[i].Districts[district].deceased\r\n                }else if(statesTotalCount[i].state == 'Telangana'){\r\n                  stateDistCountTelangana += statesTotalCount[i].Districts[district].confirmed\r\n                  stateDistCountTelanganaactive += statesTotalCount[i].Districts[district].active\r\n                  stateDistCountTelanganarecoverd += statesTotalCount[i].Districts[district].recovered\r\n                  stateDistCountTelanganadeceased += statesTotalCount[i].Districts[district].deceased\r\n                }else if(statesTotalCount[i].state == 'Rajasthan'){\r\n                  stateDistCountRajasthan += statesTotalCount[i].Districts[district].confirmed\r\n                  stateDistCountRajasthanactive += statesTotalCount[i].Districts[district].active\r\n                  stateDistCountRajasthanrecoverd += statesTotalCount[i].Districts[district].recovered\r\n                  stateDistCountRajasthandeceased += statesTotalCount[i].Districts[district].deceased\r\n                }else if(statesTotalCount[i].state == 'Haryana'){\r\n                  stateDistCountHaryana += statesTotalCount[i].Districts[district].confirmed\r\n                  stateDistCountHaryanaactive += statesTotalCount[i].Districts[district].active\r\n                  stateDistCountHaryanarecoverd += statesTotalCount[i].Districts[district].recovered\r\n                  stateDistCountHaryanadeceased += statesTotalCount[i].Districts[district].deceased\r\n                }else if(statesTotalCount[i].state == 'Uttar Pradesh'){\r\n                  UttarPradesh += statesTotalCount[i].Districts[district].confirmed\r\n                  stateDistCountUttarPradeshactive += statesTotalCount[i].Districts[district].active\r\n                  stateDistCountUttarPradeshrecoverd += statesTotalCount[i].Districts[district].recovered\r\n                  stateDistCountUttarPradeshdeceased += statesTotalCount[i].Districts[district].deceased\r\n                }else if(statesTotalCount[i].state == 'Ladakh'){\r\n                  Ladakh += statesTotalCount[i].Districts[district].confirmed\r\n                  stateDistCountLadakhactive += statesTotalCount[i].Districts[district].active\r\n                  stateDistCountLadakhrecoverd += statesTotalCount[i].Districts[district].recovered\r\n                  stateDistCountLadakhdeceased += statesTotalCount[i].Districts[district].deceased\r\n                }else if(statesTotalCount[i].state == 'Tamil Nadu'){\r\n                  TamilNadu += statesTotalCount[i].Districts[district].confirmed\r\n                  stateDistCountTamilNaduactive += statesTotalCount[i].Districts[district].active\r\n                  stateDistCountTamilNadurecoverd += statesTotalCount[i].Districts[district].recovered\r\n                  stateDistCountTamilNadudeceased += statesTotalCount[i].Districts[district].deceased\r\n                }else if(statesTotalCount[i].state == 'Jammu and Kashmir'){\r\n                  JammuandKashmir += statesTotalCount[i].Districts[district].confirmed\r\n                  stateDistCountJammuandKashmiractive += statesTotalCount[i].Districts[district].active\r\n                  stateDistCountJammuandKashmirrecoverd += statesTotalCount[i].Districts[district].recovered\r\n                  stateDistCountJammuandKashmirdeceased += statesTotalCount[i].Districts[district].deceased\r\n                }else if(statesTotalCount[i].state == 'Karnataka'){\r\n                  Karnataka += statesTotalCount[i].Districts[district].confirmed\r\n                  stateDistCountKarnatakaactive += statesTotalCount[i].Districts[district].active\r\n                  stateDistCountKarnatakarecoverd += statesTotalCount[i].Districts[district].recovered\r\n                  stateDistCountKarnatakadeceased += statesTotalCount[i].Districts[district].deceased\r\n                }else if(statesTotalCount[i].state == 'Maharashtra'){\r\n                  Maharashtra += statesTotalCount[i].Districts[district].confirmed\r\n                  stateDistCountMaharashtraactive += statesTotalCount[i].Districts[district].active\r\n                  stateDistCountMaharashtrarecoverd += statesTotalCount[i].Districts[district].recovered\r\n                  stateDistCountMaharashtradeceased += statesTotalCount[i].Districts[district].deceased\r\n                }else if(statesTotalCount[i].state == 'Punjab'){\r\n                  Punjab += statesTotalCount[i].Districts[district].confirmed\r\n                  stateDistCountPunjabactive += statesTotalCount[i].Districts[district].active\r\n                  stateDistCountPunjabrecoverd += statesTotalCount[i].Districts[district].recovered\r\n                  stateDistCountPunjabdeceased += statesTotalCount[i].Districts[district].deceased\r\n                }else if(statesTotalCount[i].state == 'Andhra Pradesh'){\r\n                  AndhraPradesh += statesTotalCount[i].Districts[district].confirmed\r\n                  stateDistCountAndhraPradeshactive += statesTotalCount[i].Districts[district].active\r\n                  stateDistCountAndhraPradeshrecoverd += statesTotalCount[i].Districts[district].recovered\r\n                  stateDistCountAndhraPradeshdeceased += statesTotalCount[i].Districts[district].deceased\r\n                }else if(statesTotalCount[i].state == 'Uttarakhand'){\r\n                  Uttarakhand += statesTotalCount[i].Districts[district].confirmed\r\n                  stateDistCountUttarakhandactive += statesTotalCount[i].Districts[district].active\r\n                  stateDistCountUttarakhandrecoverd += statesTotalCount[i].Districts[district].recovered\r\n                  stateDistCountUttarakhanddeceased += statesTotalCount[i].Districts[district].deceased\r\n                }else if(statesTotalCount[i].state == 'Odisha'){\r\n                  Odisha += statesTotalCount[i].Districts[district].confirmed\r\n                  stateDistCountOdishaactive += statesTotalCount[i].Districts[district].active\r\n                  stateDistCountOdisharecoverd += statesTotalCount[i].Districts[district].recovered\r\n                  stateDistCountOdishadeceased += statesTotalCount[i].Districts[district].deceased\r\n                }else if(statesTotalCount[i].state == 'Puducherry'){\r\n                  Puducherry += statesTotalCount[i].Districts[district].confirmed\r\n                  stateDistCountPuducherryactive += statesTotalCount[i].Districts[district].active\r\n                  stateDistCountPuducherryrecoverd += statesTotalCount[i].Districts[district].recovered\r\n                  stateDistCountPuducherrydeceased += statesTotalCount[i].Districts[district].deceased\r\n                }else if(statesTotalCount[i].state == 'West Bengal'){\r\n                  WestBengal += statesTotalCount[i].Districts[district].confirmed\r\n                  stateDistCountWestBengalactive += statesTotalCount[i].Districts[district].active\r\n                  stateDistCountWestBengalrecoverd += statesTotalCount[i].Districts[district].recovered\r\n                  stateDistCountWestBengaldeceased += statesTotalCount[i].Districts[district].deceased\r\n                }else if(statesTotalCount[i].state == 'Chandigarh'){\r\n                  Chandigarh += statesTotalCount[i].Districts[district].confirmed\r\n                  stateDistCountChandigarhactive += statesTotalCount[i].Districts[district].active\r\n                  stateDistCountChandigarhrecoverd += statesTotalCount[i].Districts[district].recovered\r\n                  stateDistCountChandigarhdeceased += statesTotalCount[i].Districts[district].deceased\r\n                }else if(statesTotalCount[i].state == 'Gujarat'){\r\n                  Gujarat += statesTotalCount[i].Districts[district].confirmed\r\n                  stateDistCountGujaratactive += statesTotalCount[i].Districts[district].active\r\n                  stateDistCountGujaratrecoverd += statesTotalCount[i].Districts[district].recovered\r\n                  stateDistCountGujaratdeceased += statesTotalCount[i].Districts[district].deceased\r\n                }else if(statesTotalCount[i].state == 'Himachal Pradesh'){\r\n                  HimachalPradesh += statesTotalCount[i].Districts[district].confirmed\r\n                  stateDistCountHimachalPradeshactive += statesTotalCount[i].Districts[district].active\r\n                  stateDistCountHimachalPradeshrecoverd += statesTotalCount[i].Districts[district].recovered\r\n                  stateDistCountHimachalPradeshdeceased += statesTotalCount[i].Districts[district].deceased\r\n                }else if(statesTotalCount[i].state == 'Madhya Pradesh'){\r\n                  MadhyaPradesh += statesTotalCount[i].Districts[district].confirmed\r\n                  stateDistCountMadhyaPradeshactive += statesTotalCount[i].Districts[district].active\r\n                  stateDistCountMadhyaPradeshrecoverd += statesTotalCount[i].Districts[district].recovered\r\n                  stateDistCountMadhyaPradeshdeceased += statesTotalCount[i].Districts[district].deceased\r\n                }else if(statesTotalCount[i].state == 'Bihar'){\r\n                  Bihar += statesTotalCount[i].Districts[district].confirmed\r\n                  stateDistCountBiharactive += statesTotalCount[i].Districts[district].active\r\n                  stateDistCountBiharrecoverd += statesTotalCount[i].Districts[district].recovered\r\n                  stateDistCountBihardeceased += statesTotalCount[i].Districts[district].deceased\r\n                }else if(statesTotalCount[i].state == 'Manipur'){\r\n                  Manipur += statesTotalCount[i].Districts[district].confirmed\r\n                  stateDistCountManipuractive += statesTotalCount[i].Districts[district].active\r\n                  stateDistCountManipurrecoverd += statesTotalCount[i].Districts[district].recovered\r\n                  stateDistCountManipurdeceased += statesTotalCount[i].Districts[district].deceased\r\n                }else if(statesTotalCount[i].state == 'Mizoram'){\r\n                  Mizoram += statesTotalCount[i].Districts[district].confirmed\r\n                  stateDistCountMizoramactive += statesTotalCount[i].Districts[district].active\r\n                  stateDistCountMizoramrecoverd += statesTotalCount[i].Districts[district].recovered\r\n                  stateDistCountMizoramdeceased += statesTotalCount[i].Districts[district].deceased\r\n                }else if(statesTotalCount[i].state == 'Goa'){\r\n                  Goa += statesTotalCount[i].Districts[district].confirmed\r\n                  stateDistCountGoaactive += statesTotalCount[i].Districts[district].active\r\n                  stateDistCountGoarecoverd += statesTotalCount[i].Districts[district].recovered\r\n                  stateDistCountGoadeceased += statesTotalCount[i].Districts[district].deceased\r\n                }else if(statesTotalCount[i].state == 'Andaman and Nicobar Islands'){\r\n                  AndamanandNicobarIslands += statesTotalCount[i].Districts[district].confirmed\r\n                  stateDistCountAndamanandNicobarIslandsactive += statesTotalCount[i].Districts[district].active\r\n                  stateDistCountAndamanandNicobarIslandsrecoverd += statesTotalCount[i].Districts[district].recovered\r\n                  stateDistCountAndamanandNicobarIslandsdeceased += statesTotalCount[i].Districts[district].deceased\r\n                }else if(statesTotalCount[i].state == 'Jharkhand'){\r\n                  Jharkhand += statesTotalCount[i].Districts[district].confirmed\r\n                  stateDistCountJharkhandactive += statesTotalCount[i].Districts[district].active\r\n                  stateDistCountJharkhandrecoverd += statesTotalCount[i].Districts[district].recovered\r\n                  stateDistCountJharkhanddeceased += statesTotalCount[i].Districts[district].deceased\r\n                }else if(statesTotalCount[i].state == 'Assam'){\r\n                  Assam += statesTotalCount[i].Districts[district].confirmed\r\n                  stateDistCountAssamactive += statesTotalCount[i].Districts[district].active\r\n                  stateDistCountAssamrecoverd += statesTotalCount[i].Districts[district].recovered\r\n                  stateDistCountAssamdeceased += statesTotalCount[i].Districts[district].deceased\r\n                }else if(statesTotalCount[i].state == 'Arunachal Pradesh'){\r\n                  ArunachalPradesh += statesTotalCount[i].Districts[district].confirmed\r\n                  stateDistCountArunachalPradeshactive += statesTotalCount[i].Districts[district].active\r\n                  stateDistCountArunachalPradeshrecoverd += statesTotalCount[i].Districts[district].recovered\r\n                  stateDistCountArunachalPradeshdeceased += statesTotalCount[i].Districts[district].deceased\r\n                }else if(statesTotalCount[i].state == 'Dadra and Nagar Haveli'){\r\n                  DadraandNagarHaveli += statesTotalCount[i].Districts[district].confirmed\r\n                  stateDistCountDadraandNagarHaveliactive += statesTotalCount[i].Districts[district].active\r\n                  stateDistCountDadraandNagarHavelirecoverd += statesTotalCount[i].Districts[district].recovered\r\n                  stateDistCountDadraandNagarHavelideceased += statesTotalCount[i].Districts[district].deceased\r\n                }else if(statesTotalCount[i].state == 'Tripura'){\r\n                  Tripura += statesTotalCount[i].Districts[district].confirmed\r\n                  stateDistCountTripuraactive += statesTotalCount[i].Districts[district].active\r\n                  stateDistCountTripurarecoverd += statesTotalCount[i].Districts[district].recovered\r\n                  stateDistCountTripuradeceased += statesTotalCount[i].Districts[district].deceased\r\n                }else if(statesTotalCount[i].state == 'Nagaland'){\r\n                  Nagaland += statesTotalCount[i].Districts[district].confirmed\r\n                  stateDistCountNagalandaactive += statesTotalCount[i].Districts[district].active\r\n                  stateDistCountNagalandarecoverd += statesTotalCount[i].Districts[district].recovered\r\n                  stateDistCountNagalandadeceased += statesTotalCount[i].Districts[district].deceased\r\n                }else if(statesTotalCount[i].state == 'Meghalaya'){\r\n                  Meghalaya += statesTotalCount[i].Districts[district].confirmed\r\n                  stateDistCountMeghalayaactive += statesTotalCount[i].Districts[district].active\r\n                  stateDistCountMeghalayarecoverd += statesTotalCount[i].Districts[district].recovered\r\n                  stateDistCountMeghalayadeceased += statesTotalCount[i].Districts[district].deceased\r\n                }\r\n            }\r\n          }\r\n        }\r\n        \r\n        const StateArray = [\r\n          {state:'Kerala',totalcases:stateDistCountKerala,activetotal:stateDistCountKeralaactive,recoveredtotal:stateDistCountKeralarecoverd,deceasedtotal:stateDistCountKeraladeceased},\r\n          {state:'Delhi',totalcases:stateDistCountDelhi,activetotal:stateDistCountDelhiactive,recoveredtotal:stateDistCountDelhirecoverd,deceasedtotal:stateDistCountDelhideceased},\r\n          {state:'Telangana',totalcases:stateDistCountTelangana,activetotal:stateDistCountTelanganaactive,recoveredtotal:stateDistCountTelanganarecoverd,deceasedtotal:stateDistCountTelanganadeceased},\r\n          {state:'Rajasthan',totalcases:stateDistCountRajasthan,activetotal:stateDistCountRajasthanactive,recoveredtotal:stateDistCountRajasthanrecoverd,deceasedtotal:stateDistCountRajasthandeceased},\r\n          {state:'Haryana',totalcases:stateDistCountHaryana,activetotal:stateDistCountHaryanaactive,recoveredtotal:stateDistCountHaryanarecoverd,deceasedtotal:stateDistCountHaryanadeceased},\r\n          {state:'UttarPradesh',totalcases:UttarPradesh,activetotal:stateDistCountUttarPradeshactive,recoveredtotal:stateDistCountUttarPradeshrecoverd,deceasedtotal:stateDistCountUttarPradeshdeceased},\r\n          {state:'Ladakh',totalcases:Ladakh,activetotal:stateDistCountLadakhactive,recoveredtotal:stateDistCountLadakhrecoverd,deceasedtotal:stateDistCountLadakhdeceased},\r\n          {state:'TamilNadu',totalcases:TamilNadu,activetotal:stateDistCountTamilNaduactive,recoveredtotal:stateDistCountTamilNadurecoverd,deceasedtotal:stateDistCountTamilNadudeceased},\r\n          {state:'JammuandKashmir',totalcases:JammuandKashmir,activetotal:stateDistCountJammuandKashmiractive,recoveredtotal:stateDistCountJammuandKashmirrecoverd,deceasedtotal:stateDistCountJammuandKashmirdeceased},\r\n          {state:'Karnataka',totalcases:Karnataka,activetotal:stateDistCountKarnatakaactive,recoveredtotal:stateDistCountKarnatakarecoverd,deceasedtotal:stateDistCountKarnatakadeceased},\r\n          {state:'Maharashtra',totalcases:Maharashtra,activetotal:stateDistCountMaharashtraactive,recoveredtotal:stateDistCountMaharashtrarecoverd,deceasedtotal:stateDistCountMaharashtradeceased},\r\n          {state:'Punjab',totalcases:Punjab,activetotal:stateDistCountPunjabactive,recoveredtotal:stateDistCountPunjabrecoverd,deceasedtotal:stateDistCountPunjabdeceased},\r\n          {state:'AndhraPradesh',totalcases:AndhraPradesh,activetotal:stateDistCountAndhraPradeshactive,recoveredtotal:stateDistCountAndhraPradeshrecoverd,deceasedtotal:stateDistCountAndhraPradeshdeceased},\r\n          {state:'Uttarakhand',totalcases:Uttarakhand,activetotal:stateDistCountUttarakhandactive,recoveredtotal:stateDistCountUttarakhandrecoverd,deceasedtotal:stateDistCountUttarakhanddeceased},\r\n          {state:'Odisha',totalcases:Odisha,activetotal:stateDistCountOdishaactive,recoveredtotal:stateDistCountOdisharecoverd,deceasedtotal:stateDistCountOdishadeceased},\r\n          {state:'Puducherry',totalcases:Puducherry,activetotal:stateDistCountPuducherryactive,recoveredtotal:stateDistCountPuducherryrecoverd,deceasedtotal:stateDistCountPuducherrydeceased},\r\n          {state:'WestBengal',totalcases:WestBengal,activetotal:stateDistCountWestBengalactive,recoveredtotal:stateDistCountWestBengalrecoverd,deceasedtotal:stateDistCountWestBengaldeceased},\r\n          {state:'Chandigarh',totalcases:Chandigarh,activetotal:stateDistCountChandigarhactive,recoveredtotal:stateDistCountChandigarhrecoverd,deceasedtotal:stateDistCountChandigarhdeceased},\r\n          {state:'Gujarat',totalcases:Gujarat,activetotal:stateDistCountGujaratactive,recoveredtotal:stateDistCountGujaratrecoverd,deceasedtotal:stateDistCountGujaratdeceased},\r\n          {state:'HimachalPradesh',totalcases:HimachalPradesh,activetotal:stateDistCountHimachalPradeshactive,recoveredtotal:stateDistCountHimachalPradeshrecoverd,deceasedtotal:stateDistCountHimachalPradeshdeceased},\r\n          {state:'MadhyaPradesh',totalcases:MadhyaPradesh,activetotal:stateDistCountMadhyaPradeshactive,recoveredtotal:stateDistCountMadhyaPradeshrecoverd,deceasedtotal:stateDistCountMadhyaPradeshdeceased},\r\n          {state:'Bihar',totalcases:Bihar,activetotal:stateDistCountBiharactive,recoveredtotal:stateDistCountBiharrecoverd,deceasedtotal:stateDistCountBihardeceased},\r\n          {state:'Manipur',totalcases:Manipur,activetotal:stateDistCountManipuractive,recoveredtotal:stateDistCountManipurrecoverd,deceasedtotal:stateDistCountManipurdeceased},\r\n          {state:'Mizoram',totalcases:Mizoram,activetotal:stateDistCountMizoramactive,recoveredtotal:stateDistCountMizoramrecoverd,deceasedtotal:stateDistCountMizoramdeceased},\r\n          {state:'Goa',totalcases:Goa,activetotal:stateDistCountGoaactive,recoveredtotal:stateDistCountGoarecoverd,deceasedtotal:stateDistCountGoadeceased},\r\n          {state:'AndamanandNicobarIslands',totalcases:AndamanandNicobarIslands,activetotal:stateDistCountAndamanandNicobarIslandsactive,recoveredtotal:stateDistCountAndamanandNicobarIslandsrecoverd,deceasedtotal:stateDistCountAndamanandNicobarIslandsdeceased},\r\n          {state:'Jharkhand',totalcases:Jharkhand,activetotal:stateDistCountJharkhandactive,recoveredtotal:stateDistCountJharkhandrecoverd,deceasedtotal:stateDistCountJharkhanddeceased},\r\n          {state:'Assam',totalcases:Assam,activetotal:stateDistCountAssamactive,recoveredtotal:stateDistCountAssamrecoverd,deceasedtotal:stateDistCountAssamdeceased},\r\n          {state:'ArunachalPradesh',totalcases:ArunachalPradesh,activetotal:stateDistCountArunachalPradeshactive,recoveredtotal:stateDistCountArunachalPradeshrecoverd,deceasedtotal:stateDistCountArunachalPradeshdeceased},\r\n          {state:'DadraandNagarHaveli',totalcases:DadraandNagarHaveli,activetotal:stateDistCountDadraandNagarHaveliactive,recoveredtotal:stateDistCountDadraandNagarHavelirecoverd,deceasedtotal:stateDistCountDadraandNagarHavelideceased},\r\n          {state:'Tripura',totalcases:Tripura,activetotal:stateDistCountTripuraactive,recoveredtotal:stateDistCountTripurarecoverd,deceasedtotal:stateDistCountTripuradeceased},\r\n          {state:'Nagaland',totalcases:Nagaland,activetotal:stateDistCountNagalandaactive,recoveredtotal:stateDistCountNagalandarecoverd,deceasedtotal:stateDistCountNagalandadeceased},\r\n          {state:'Meghalaya',totalcases:Meghalaya,activetotal:stateDistCountMeghalayaactive,recoveredtotal:stateDistCountMeghalayarecoverd,deceasedtotal:stateDistCountMeghalayadeceased},\r\n        ]\r\n        this.setState({ StateData: StateArray});\r\n        console.log('All Details State...',this.state.StateData)\r\n\r\n        let labels = [];\r\n        let totalcases = [];\r\n        StateArray.map((state) =>{\r\n          labels.push(state.state);\r\n          totalcases.push(state.totalcases);\r\n        })\r\n        var chartlabels = {...this.state.data}\r\n        chartlabels.labels = [...labels]\r\n        chartlabels.datasets[0].data = [...totalcases]\r\n        this.setState({ data : chartlabels})\r\n      })\r\n    }\r\n    render() {\r\n        return (\r\n          <React.Fragment>\r\n          <Grid item xs={12} sm={12} md={8} lg={12} xl={12}>  \r\n              <Typography variant=\"subtitle1\" className={(this.props.darkmode)? 'dark_statewisedata' : 'statewisedata' } gutterBottom>\r\n                <div style={{'fontWeight': '600'}} >INDIA Map\r\n                  <span className='childtext'>Hover over a state/UT for more details</span>\r\n                </div>\r\n              </Typography>\r\n          </Grid>\r\n          {/* <span className='switch1'>INDIA Map</span> */}\r\n            <div className=\"BarGraph\">\r\n              <StatMap StateMapData={this.state.StateData} />\r\n            </div>\r\n          {/* <div className=\"switch\">\r\n            <input id=\"switch-1\" type=\"checkbox\" className=\"switch-input\" onChange={this.handelGraphToggle} />\r\n              <label htmlFor=\"switch-1\" className=\"switch-label\">Switch</label>\r\n              </div><span className='switch2'>Horizontal</span>\r\n              {\r\n                (this.state.isVertical)?\r\n                 <div className=\"BarGraph\">\r\n                  <StatMap StateMapData={this.state.StateData} />\r\n                <Bar\r\n                  data={this.state.data}\r\n                  width={1000}\r\n                  height={300}\r\n                  options={{\r\n                    scales :{\r\n                      yAxes:[{\r\n                        gridLines: {\r\n                          display : false\r\n                        }\r\n                      }],\r\n                      xAxes:[{\r\n                        gridLines: {\r\n                          display : false\r\n                        },\r\n                        display: false\r\n                      }]\r\n                    },\r\n                    maintainAspectRatio: false\r\n                  }}\r\n            />\r\n               </div> : <div className=\"BarGraph\"><HorizontalBar data={this.state.data} options={{\r\n                    scales :{\r\n                      yAxes:[{\r\n                        gridLines: {\r\n                          display : false\r\n                        }\r\n                      }],\r\n                      xAxes:[{\r\n                        gridLines: {\r\n                          display : false\r\n                        }\r\n                      }]\r\n                    },\r\n                    maintainAspectRatio: false\r\n                  }} /> \r\n                  </div>\r\n              } */}\r\n        \r\n          </React.Fragment>\r\n        );\r\n      }\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n  return {\r\n      darkmode : state.response.darkmode\r\n  }\r\n} \r\n\r\nexport default connect(mapStateToProps)(StateChart);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport NewReleasesIcon from '@material-ui/icons/NewReleases';\r\nimport NetworkCellIcon from '@material-ui/icons/NetworkCell';\r\nimport SignalCellularAltIcon from '@material-ui/icons/SignalCellularAlt';\r\nimport StateDetails from '../StateDetailsSlider/StateDetails.js';\r\nimport StateChart from '../StateDetailsSlider/StateChart.js';\r\nimport './Tab.css';\r\nimport { connect } from 'react-redux';\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <Typography\r\n      component=\"div\"\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`scrollable-force-tabpanel-${index}`}\r\n      aria-labelledby={`scrollable-force-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && <Box p={3}>{children}</Box>}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `scrollable-force-tab-${index}`,\r\n    'aria-controls': `scrollable-force-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    width: '100%',\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  dark_tabpanel_bg :{\r\n    background : '#161625 !important'\r\n  },\r\n  tabpanel:{\r\n    background : \"#fff\"\r\n  },\r\n  dark_tabpnel:{\r\n    background : \"#1e1e30 !important\"\r\n  },\r\n  dark_tabtext : {\r\n    color: '#ADACAC'\r\n  }\r\n}));\r\n\r\nconst  ScrollableTabsButtonForce = (props) => {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(0);\r\n  const [ishorizontal, setHorizontal] = React.useState(false);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Tabs className={(props.darkmode)? classes.dark_tabpnel : classes.root}\r\n          value={value}\r\n          onChange={handleChange}\r\n          scrollButtons=\"on\"\r\n          indicatorColor=\"primary\"\r\n          textColor=\"primary\"\r\n          centered\r\n          aria-label=\"scrollable force tabs example\"\r\n        >\r\n          <Tab  label=\"Demographic\" icon={<NetworkCellIcon />} className={(props.darkmode)? classes.dark_tabtext : \"\"}  {...a11yProps(0)} />\r\n          <Tab  label=\"Statistical\" icon={<SignalCellularAltIcon />} className={(props.darkmode)? classes.dark_tabtext : \"\"} {...a11yProps(1)} />\r\n          {/* <Tab label=\"Comming Soon...\" icon={<NewReleasesIcon />} {...a11yProps(2)} /> */}\r\n        </Tabs>\r\n      </AppBar>\r\n      <TabPanel className={(props.darkmode)? classes.dark_tabpanel_bg : classes.root} value={value} index={0}>\r\n        <StateChart />\r\n      </TabPanel>\r\n      <TabPanel className={(props.darkmode)? classes.dark_tabpanel_bg : classes.root} value={value} index={1}>\r\n        <StateDetails />\r\n      </TabPanel>\r\n      {/* <TabPanel value={value} index={2}>\r\n        Comming Soon...\r\n      </TabPanel> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n  return {\r\n      darkmode : state.response.darkmode\r\n  }\r\n} \r\n\r\nexport default connect(mapStateToProps)(ScrollableTabsButtonForce);","import React, { useState, useEffect } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport StateDetails from '../StateDetailsSlider/StateDetails.js';\r\nimport CountUp from 'react-countup';\r\nimport Tabs from '../TabPanel/Tabs.js';\r\nimport StatMap from '../StateMap/StateMap.js';\r\nimport { connect } from 'react-redux';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  confirm: {\r\n    color: 'rgba(255,7,58,.6)',\r\n    fontFamily: 'archia',\r\n    fontWeight: '900',\r\n    textTransform: 'uppercase',\r\n    fontSize: '12px !important',\r\n  },\r\n  confirmChild1: {\r\n    textAlign: 'center',\r\n    alignItem: 'center',\r\n    justifyContent: 'center',\r\n    marginTop: '.5rem',\r\n    color: 'rgba(255,7,58,.6)',\r\n    fontFamily: 'archia',\r\n    fontWeight: 900,\r\n    fontSize: '12px !important',\r\n    textTransform: 'uppercase'\r\n  },\r\n  confirmChild2: {\r\n    color: '#ff073a',\r\n    fontWeight: '600',\r\n    textAlign: 'center',\r\n    fontFamily: 'archia',\r\n    fontSize: '24px !important',\r\n    fontWeight: '900',\r\n    textTransform: 'uppercase'\r\n\r\n  },\r\n  active: {\r\n    color: 'rgba(0,123,255,.6)',\r\n    fontFamily: 'archia',\r\n    fontWeight: '900',\r\n    textTransform: 'uppercase',\r\n    fontSize: '12px !important',\r\n    [theme.breakpoints.up('xs')]: {\r\n      marginLeft: '20px'\r\n    }\r\n  },\r\n  activeChild1: {\r\n    textAlign: 'center',\r\n    alignItem: 'center',\r\n    justifyContent: 'center',\r\n    marginTop: '.5rem',\r\n    color: '#ffffff',\r\n    fontFamily: 'archia',\r\n    fontWeight: 900,\r\n    fontSize: '12px !important',\r\n    textTransform: 'uppercase'\r\n  },\r\n  activeChild2: {\r\n    color: '#007bff',\r\n    fontWeight: '600',\r\n    textAlign: 'center',\r\n    fontFamily: 'archia',\r\n    fontSize: '24px !important',\r\n    fontWeight: '900',\r\n    textTransform: 'uppercase'\r\n  },\r\n  recovered: {\r\n    color: 'rgba(40,167,69,.6)',\r\n    fontFamily: 'archia',\r\n    fontWeight: '900',\r\n    textTransform: 'uppercase',\r\n    fontSize: '12px !important',\r\n  },\r\n  recoveredChild1: {\r\n    textAlign: 'center',\r\n    alignItem: 'center',\r\n    justifyContent: 'center',\r\n    marginTop: '.5rem',\r\n    color: 'rgba(40,167,69,.6)',\r\n    fontFamily: 'archia',\r\n    fontWeight: 900,\r\n    fontSize: '12px !important',\r\n    textTransform: 'uppercase'\r\n  },\r\n  recoveredChild2: {\r\n    color: '#28a745',\r\n    fontWeight: '600',\r\n    textAlign: 'center',\r\n    fontFamily: 'archia',\r\n    fontSize: '24px !important',\r\n    fontWeight: '900',\r\n    textTransform: 'uppercase'\r\n\r\n  },\r\n  deceased: {\r\n    color: 'rgba(108,117,125,.6)',\r\n    fontFamily: 'archia',\r\n    fontWeight: '900',\r\n    textTransform: 'uppercase',\r\n    fontSize: '12px !important',\r\n  },\r\n  deceasedChild1: {\r\n    textAlign: 'center',\r\n    alignItem: 'center',\r\n    justifyContent: 'center',\r\n    marginTop: '.5rem',\r\n    color: 'rgba(108,117,125,.6)',\r\n    fontFamily: 'archia',\r\n    fontWeight: 900,\r\n    fontSize: '12px !important',\r\n    textTransform: 'uppercase'\r\n  },\r\n  deceasedChild2: {\r\n    color: '#6c757d',\r\n    fontWeight: '600',\r\n    textAlign: 'center',\r\n    fontFamily: 'archia',\r\n    fontSize: '24px !important',\r\n    fontWeight: '900',\r\n    textTransform: 'uppercase'\r\n\r\n  },\r\n  FirstGridRow: {\r\n    marginTop: '40px !important'\r\n  },\r\n  SecondGridRow: {\r\n    marginTop: '40px !important'\r\n  },\r\n  ThirdGridRow: {\r\n    marginTop: '40px !important'\r\n  },\r\n  FourthGridRow: {\r\n    marginTop: '0px',\r\n    [theme.breakpoints.up('xs')]: {\r\n      marginTop: '10px'\r\n    }\r\n  },\r\n  statewisedata:{\r\n      marginRight: '40px',\r\n      textAlign: 'center',\r\n      fontFamily: 'archia !important',\r\n      fontWeight: '900',\r\n      fontSize: '24px !important',\r\n      textTransform: 'uppercase',\r\n      color: '#343a40',\r\n      [theme.breakpoints.up('xs')]: {\r\n          marginTop: '20px'\r\n      }\r\n  },\r\n  dark_statewisedata:{\r\n    marginRight: '40px',\r\n    textAlign: 'center',\r\n    fontFamily: 'archia !important',\r\n    fontWeight: '900',\r\n    fontSize: '24px !important',\r\n    textTransform: 'uppercase',\r\n    color: '#FFD993',\r\n    [theme.breakpoints.up('xs')]: {\r\n        marginTop: '20px'\r\n    }\r\n},\r\n  statechild:{\r\n    color: 'rgba(108,117,125,.6)',\r\n    fontSize: '12px !important',\r\n    fontFamily: 'archia',\r\n    fontWeight: '900',\r\n    textTransform: 'uppercase',\r\n    marginLeft: '37px'\r\n  },\r\n  dark_statechild:{\r\n    color: '#AEA4A2',\r\n    fontSize: '12px !important',\r\n    fontFamily: 'archia',\r\n    fontWeight: '900',\r\n    textTransform: 'uppercase',\r\n    marginLeft: '37px'\r\n  },\r\n  statechild2:{\r\n    color: '#4c75f2',\r\n    fontSize: '12px',\r\n    fontFamily: 'archia',\r\n    fontWeight: '900',\r\n    textTransform: 'uppercase',\r\n    marginLeft: '37px',\r\n    [theme.breakpoints.up('xs')]: {\r\n      marginLeft: '0px',\r\n      fontSize:'10px'\r\n  }\r\n  },\r\n  covidsymbol:{\r\n    fontSize: '10px'\r\n  },\r\n  highsysmbol:{\r\n    padding: '0px 6px 0px 6px',\r\n    background: '#FF9999',\r\n    marginRight: '6px'\r\n  },\r\n  avgsysmbol:{\r\n    padding: '0px 6px 0px 6px',\r\n    background: '#FCC88C',\r\n    marginRight: '6px'\r\n  },\r\n  lowsysmbol:{\r\n    padding: '0px 6px 0px 6px',\r\n    background: '#B1DC88',\r\n    marginRight: '6px'\r\n  },\r\n  stateTotal:{\r\n    color: '#46A4D1'\r\n  }\r\n}));\r\n\r\nconst CountryStat = (props) => {\r\n  const classes = useStyles();\r\n  const [countryStat, setCountryStat] = useState(0);\r\n  const [ConfirmCount, setConfirmCount] = useState(0);\r\n  const [ActivityCount, setActivityCount] = useState(0);\r\n  const [RecoveredCount, setRecoveredCount] = useState(0);\r\n  const [DeceasedCount, setDeceasedCount] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const abortController = new AbortController()\r\n    const signal = abortController.signal\r\n    fetch('https://api.covid19india.org/data.json', {signal : signal })\r\n      .then(res => res.json())\r\n      .then((stat) =>{\r\n          setCountryStat(stat.statewise[0]);\r\n          setConfirmCount((function () {\r\n            let confirm = parseInt(stat.statewise[0].confirmed);\r\n              return confirm\r\n              // return stat.statewise[0].confirmed.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\r\n          })())\r\n          setActivityCount((function () {\r\n            let active = parseInt(stat.statewise[0].active);\r\n              return active\r\n          })())\r\n          setRecoveredCount((function () {\r\n            let recovered = parseInt(stat.statewise[0].recovered);\r\n              return recovered\r\n          })())\r\n          setDeceasedCount((function () {\r\n            let deaths = parseInt(stat.statewise[0].deaths);\r\n              return deaths\r\n          })())\r\n      })\r\n      return function cleanup(){\r\n        abortController.abort()\r\n      }\r\n  }, []);\r\n  return (\r\n    <React.Fragment>\r\n      <Grid container\r\n        justify=\"space-evenly\"\r\n        alignItems=\"center\"\r\n        className={classes.FirstGridRow}\r\n      >\r\n        <Grid item>\r\n          <Typography variant=\"subtitle1\" className={classes.confirm} gutterBottom>\r\n            Confirmed\r\n          </Typography>\r\n          <div>\r\n            <Typography variant=\"subtitle1\" className={classes.confirmChild1} gutterBottom>\r\n              {'[' + '+' + countryStat.deltaconfirmed + ']'}\r\n            </Typography>\r\n          </div>\r\n          <div>\r\n            <Typography variant=\"subtitle1\" className={classes.confirmChild2} gutterBottom>\r\n             <CountUp end={ConfirmCount} duration={3.75} separator=\",\"></CountUp> \r\n            </Typography>\r\n          </div>\r\n        </Grid>\r\n        <Grid item>\r\n          <Typography variant=\"subtitle1\" className={classes.active} gutterBottom>\r\n            Active\r\n                </Typography>\r\n          <div>\r\n            <Typography variant=\"subtitle1\" className={classes.activeChild1} gutterBottom>\r\n              0\r\n                    </Typography>\r\n          </div>\r\n          <div>\r\n            <Typography variant=\"subtitle1\" className={classes.activeChild2} gutterBottom>\r\n              <CountUp end={ActivityCount} duration={3.75} separator=\",\"></CountUp> \r\n            </Typography>\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Grid container\r\n        justify=\"space-evenly\"\r\n        alignItems=\"center\"\r\n        className={classes.SecondGridRow}\r\n      >\r\n        <Grid item>\r\n          <Typography variant=\"subtitle1\" className={classes.recovered} gutterBottom>\r\n            Recovered\r\n                </Typography>\r\n          <div>\r\n            <Typography variant=\"subtitle1\" className={classes.recoveredChild1} gutterBottom>\r\n              {'[' + '+' + countryStat.deltarecovered + ']'}\r\n            </Typography>\r\n          </div>\r\n          <div>\r\n            <Typography variant=\"subtitle1\" className={classes.recoveredChild2} gutterBottom>\r\n              <CountUp end={RecoveredCount} duration={3.75} separator=\",\"></CountUp> \r\n            </Typography>\r\n          </div>\r\n        </Grid>\r\n        <Grid item>\r\n          <Typography variant=\"subtitle1\" className={classes.deceased} gutterBottom>\r\n            Deceased\r\n                </Typography>\r\n          <div>\r\n            <Typography variant=\"subtitle1\" className={classes.deceasedChild1} gutterBottom>\r\n              {'[' + '+' + countryStat.deltadeaths + ']'}\r\n            </Typography>\r\n          </div>\r\n          <div>\r\n            <Typography variant=\"subtitle1\" className={classes.deceasedChild2} gutterBottom>\r\n              <CountUp end={DeceasedCount} duration={3.75} separator=\",\"></CountUp> \r\n            </Typography>\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid container\r\n      className={classes.FourthGridRow}\r\n      >\r\n        <Grid item xs={12} sm={12} md={8} lg={12} xl={12}>  \r\n        <Typography variant=\"subtitle1\" className={(props.darkmode)? classes.dark_statewisedata : classes.statewisedata}  gutterBottom>\r\n            <div>State Wise Data</div>\r\n            <div className={(props.darkmode)? classes.dark_statechild : classes.statechild}>COMPILED FROM STATE GOVT. NUMBERS\r\n            {/* <div className={classes.statechild2}>CLICK ON ANY BELOW STATE TO KNOW MORE.</div> */}\r\n            </div>\r\n        </Typography>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid container className={classes.ThirdGridRow}>\r\n        <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n          <Tabs />\r\n        </Grid>\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n  return {\r\n      darkmode : state.response.darkmode\r\n  }\r\n} \r\n\r\nexport default connect(mapStateToProps)(CountryStat);","import moment from 'moment';\r\n\r\nconst months = {\r\n  '01': 'Jan',\r\n  '02': 'Feb',\r\n  '03': 'Mar',\r\n  '04': 'Apr',\r\n  '05': 'May',\r\n  '06': 'Jun',\r\n  '07': 'Jul',\r\n  '08': 'Aug',\r\n  '09': 'Sep',\r\n  '10': 'Oct',\r\n  '11': 'Nov',\r\n  '12': 'Dec',\r\n};\r\n\r\nconst stateCodes = {\r\n  AP: 'Andhra Pradesh',\r\n  AR: 'Arunachal Pradesh',\r\n  AS: 'Assam',\r\n  BR: 'Bihar',\r\n  CT: 'Chhattisgarh',\r\n  GA: 'Goa',\r\n  GJ: 'Gujarat',\r\n  HR: 'Haryana',\r\n  HP: 'Himachal Pradesh',\r\n  JH: 'Jharkhand',\r\n  KA: 'Karnataka',\r\n  KL: 'Kerala',\r\n  MP: 'Madhya Pradesh',\r\n  MH: 'Maharashtra',\r\n  MN: 'Manipur',\r\n  ML: 'Meghalaya',\r\n  MZ: 'Mizoram',\r\n  NL: 'Nagaland',\r\n  OR: 'Odisha',\r\n  PB: 'Punjab',\r\n  RJ: 'Rajasthan',\r\n  SK: 'Sikkim',\r\n  TN: 'Tamil Nadu',\r\n  TG: 'Telangana',\r\n  TR: 'Tripura',\r\n  UT: 'Uttarakhand',\r\n  UP: 'Uttar Pradesh',\r\n  WB: 'West Bengal',\r\n  AN: 'Andaman and Nicobar Islands',\r\n  CH: 'Chandigarh',\r\n  DN: 'Dadra and Nagar Haveli',\r\n  DD: 'Daman and Diu',\r\n  DL: 'Delhi',\r\n  JK: 'Jammu and Kashmir',\r\n  LA: 'Ladakh',\r\n  LD: 'Lakshadweep',\r\n  PY: 'Puducherry',\r\n};\r\n\r\nexport const getStateName = (code) => {\r\n  return stateCodes[code.toUpperCase()];\r\n};\r\n\r\nexport const formatDate = (unformattedDate) => {\r\n  const day = unformattedDate.slice(0, 2);\r\n  const month = unformattedDate.slice(3, 5);\r\n  const year = unformattedDate.slice(6, 10);\r\n  const time = unformattedDate.slice(11);\r\n  return `${year}-${month}-${day}T${time}+05:30`;\r\n};\r\n\r\nexport const formatDateAbsolute = (unformattedDate) => {\r\n  const day = unformattedDate.slice(0, 2);\r\n  const month = unformattedDate.slice(3, 5);\r\n  const time = unformattedDate.slice(11);\r\n  return `${day} ${months[month]}, ${time.slice(0, 5)} IST`;\r\n};\r\n\r\nconst validateCTS = (data = []) => {\r\n  const today = new Date();\r\n  today.setHours(0, 0, 0, 0);\r\n  const dataTypes = [\r\n    'dailyconfirmed',\r\n    'dailydeceased',\r\n    'dailyrecovered',\r\n    'totalconfirmed',\r\n    'totaldeceased',\r\n    'totalrecovered',\r\n  ];\r\n  return data\r\n    .filter((d) => dataTypes.every((dt) => d[dt]) && d.date)\r\n    .filter((d) => dataTypes.every((dt) => Number(d[dt]) >= 0))\r\n    .filter((d) => {\r\n      const year = today.getFullYear();\r\n      return new Date(d.date + year) < today;\r\n    });\r\n};\r\n\r\nexport const preprocessTimeseries = (timeseries) => {\r\n  return validateCTS(timeseries).map((stat) => ({\r\n    date: new Date(stat.date + ' 2020'),\r\n    totalconfirmed: +stat.totalconfirmed,\r\n    totalrecovered: +stat.totalrecovered,\r\n    totaldeceased: +stat.totaldeceased,\r\n    dailyconfirmed: +stat.dailyconfirmed,\r\n    dailyrecovered: +stat.dailyrecovered,\r\n    dailydeceased: +stat.dailydeceased,\r\n  }));\r\n};\r\n\r\n/**\r\n * Returns the last `days` entries\r\n * @param {Array<Object>} timeseries\r\n * @param {number} days\r\n *\r\n * @return {Array<Object>}\r\n */\r\nexport function sliceTimeseriesFromEnd(timeseries, days) {\r\n  return timeseries.slice(-days);\r\n}\r\n\r\nexport const formatNumber = (value) => {\r\n  const numberFormatter = new Intl.NumberFormat('en-IN');\r\n  return isNaN(value) ? '-' : numberFormatter.format(value);\r\n};\r\n\r\nexport const parseStateTimeseries = ({states_daily: data}) => {\r\n  const statewiseSeries = Object.keys(stateCodes).reduce((a, c) => {\r\n    a[c] = [];\r\n    return a;\r\n  }, {});\r\n\r\n  const today = moment();\r\n  for (let i = 0; i < data.length; i += 3) {\r\n    const date = moment(data[i].date, 'DD-MMM-YY');\r\n    // Skip data from the current day\r\n    if (date.isBefore(today, 'Date')) {\r\n      Object.entries(statewiseSeries).forEach(([k, v]) => {\r\n        const stateCode = k.toLowerCase();\r\n        const prev = v[v.length - 1] || {};\r\n        v.push({\r\n          date: date.toDate(),\r\n          dailyconfirmed: +data[i][stateCode] || 0,\r\n          dailyrecovered: +data[i + 1][stateCode] || 0,\r\n          dailydeceased: +data[i + 2][stateCode] || 0,\r\n          totalconfirmed: +data[i][stateCode] + (prev.totalconfirmed || 0),\r\n          totalrecovered: +data[i + 1][stateCode] + (prev.totalrecovered || 0),\r\n          totaldeceased: +data[i + 2][stateCode] + (prev.totaldeceased || 0),\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n  return statewiseSeries;\r\n};","import React, {useState, useEffect, useRef, useCallback} from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport CountryStat from '../CountryStats/CountryStat.js';\r\nimport axios from 'axios';\r\nimport {formatDistance, format} from 'date-fns';\r\nimport { connect } from 'react-redux';\r\n\r\nimport {\r\n    formatDate,\r\n    formatDateAbsolute,\r\n  } from '../../utils/commom-functions.js';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    appUpdateDiv:{\r\n        alignItems: 'center',\r\n        justifyContent: 'center'\r\n    },\r\n    appUpdateFont1:{\r\n        fontFamily: 'archia !important',\r\n        fontWeight: '900',\r\n        textTransform: 'uppercase',\r\n        color: '#343a40',\r\n        [theme.breakpoints.up('xs')]: {\r\n            marginTop: '20px'\r\n          }\r\n    },\r\n    dark_appUpdateFont1:{\r\n      fontFamily: 'archia !important',\r\n        fontWeight: '900',\r\n        textTransform: 'uppercase',\r\n        color: '#FFD993\t',\r\n        [theme.breakpoints.up('xs')]: {\r\n            marginTop: '20px'\r\n          }\r\n    },\r\n    appUpdateFont2:{\r\n        fontFamily: 'archia !important',\r\n        fontWeight: '600',\r\n        fontSize: '11px!important',\r\n        textTransform: 'uppercase',\r\n        color: '#6c757d'\r\n    },\r\n    dark_appUpdateFont2:{\r\n        fontFamily: 'archia !important',\r\n        fontWeight: '600',\r\n        fontSize: '11px!important',\r\n        textTransform: 'uppercase',\r\n        color: '#AEA4A2'\r\n    },\r\n    appUpdateFont3:{\r\n        fontFamily: 'archia !important',\r\n        color: 'rgba(40,167,69,.6) !important',\r\n        fontWeight: '900',\r\n        fontSize: '12px !important',\r\n        textTransform: 'uppercase',\r\n        [theme.breakpoints.up('md')]: {\r\n            marginLeft: '81px !important',\r\n            marginTop: '40px !important'\r\n          },\r\n        [theme.breakpoints.up('xs')]: {\r\n            marginTop: '5px',\r\n            marginLeft: '25px'\r\n          }\r\n    },\r\n    appUpdateFont4:{\r\n        fontFamily: 'archia !important',\r\n        color: 'rgb(40, 167, 69)',\r\n        fontWeight: '900',\r\n        fontSize: '14px !important',\r\n        textTransform: 'uppercase',\r\n        fontSize: '11px !important',\r\n        [theme.breakpoints.up('md')]: {\r\n            marginLeft: '74px !important',\r\n          },\r\n        [theme.breakpoints.up('xs')]: {\r\n            marginLeft: '-4px',\r\n            fontSize: '10px',\r\n          }\r\n    },\r\n    appUpdateFont5:{\r\n        fontFamily: 'archia !important',\r\n        color: 'rgb(40, 167, 69)',\r\n        fontWeight: '900',\r\n        textTransform: 'uppercase',\r\n        fontSize: '12px !important',\r\n        [theme.breakpoints.up('md')]: {\r\n            marginLeft: '68px !important'\r\n          },\r\n        [theme.breakpoints.up('xs')]: {\r\n            marginLeft: '10px',\r\n            fontSize: '10px',\r\n          }\r\n    }\r\n}));\r\n\r\nconst ApplastUpdated = (props) => {\r\n  const [states, setStates] = useState([]);\r\n  const [fetched, setFetched] = useState(false);\r\n  const [lastUpdated, setLastUpdated] = useState('');\r\n\r\n  useEffect(() => {\r\n    if (fetched === false) {\r\n      getStates();\r\n    }\r\n  }, [fetched]);\r\n\r\n  const getStates = async () => {\r\n    try {\r\n      const [\r\n        response,\r\n      ] = await Promise.all([\r\n        axios.get('https://api.covid19india.org/data.json'),\r\n      ]);\r\n      setStates(response.data.statewise);\r\n      setLastUpdated(response.data.statewise[0].lastupdatedtime);\r\n      setFetched(true);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n    const classes = useStyles();\r\n    return ( \r\n        <React.Fragment>\r\n            <Grid container className={classes.appUpdateDiv}>\r\n                <Grid item xs={7} sm={6} md={4} lg={6} xl={6}\r\n                >\r\n                    <Typography variant=\"h5\" className={(props.darkmode)?classes.dark_appUpdateFont1 : classes.appUpdateFont1}>\r\n                        India COVID-19 Tracker\r\n                    </Typography>\r\n                    <Typography variant=\"h6\" className={(props.darkmode)?classes.dark_appUpdateFont2 :classes.appUpdateFont2}>\r\n                        A Crowdsourced Initiative\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item xs={4} sm={6} md={3} lg={6} xl={6}> \r\n                    <Typography variant=\"h5\" className={classes.appUpdateFont3}>\r\n                        Last Updated\r\n                    </Typography>\r\n                    <Typography variant=\"h6\" className={classes.appUpdateFont4}>\r\n                    {isNaN(Date.parse(formatDate(lastUpdated)))\r\n                    ? ''\r\n                    : formatDistance(\r\n                        new Date(formatDate(lastUpdated)),\r\n                        new Date()\r\n                      ) + ' Ago'}\r\n                    </Typography>\r\n                    <Typography variant=\"h6\" className={classes.appUpdateFont5}>\r\n                    {isNaN(Date.parse(formatDate(lastUpdated)))\r\n                    ? ''\r\n                    : formatDateAbsolute(lastUpdated)}\r\n                    </Typography>\r\n                </Grid>\r\n            </Grid>\r\n            <CountryStat />\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n  return {\r\n      darkmode : state.response.darkmode\r\n  }\r\n} \r\n \r\nexport default connect(mapStateToProps)(ApplastUpdated);","import React, { useState, useEffect } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ApplastUpdated from '../ApplastUpdated/AppUpdated.js';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    banner_parent:{\r\n        background: 'rgba(32,26,162,.12549)',\r\n        height: 'auto !important',\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    dark_banner_parent:{\r\n        background: '#1e1e30 !important',\r\n        height: 'auto !important',\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    banner: {\r\n        textAlign: 'center',\r\n        margin: theme.spacing(3),\r\n    },\r\n    banner_text:{\r\n        fontFamily: 'archia !important',\r\n        fontSize: '.8rem !important',\r\n        fontWeight: '600',\r\n        color: 'rgba(32,26,162,.866667)'\r\n    },\r\n    dark_banner_text:{\r\n        fontFamily: 'archia !important',\r\n        fontSize: '.8rem !important',\r\n        fontWeight: '600',\r\n        color: '#F1DDDB'\r\n    }\r\n}));\r\nconst Covidquotes = (props) => {\r\n    const classes = useStyles();\r\n    const [Quotes, setQuotes] = useState('Stay Home, Stay Safe.');\r\n    \r\n    useEffect(() =>{\r\n        setInterval(() =>{\r\n            \r\n            fetch('https://api.covid19india.org/website_data.json')\r\n            .then(res => res.json())\r\n            .then(quotes => {\r\n                let randomNum = Math.abs(Math.floor(Math.random() * (1 - quotes.factoids.length) + 1));\r\n                setQuotes(quotes.factoids[randomNum].banner)})\r\n        },4000)\r\n    },[]);\r\n    const setNewQuote = () =>{\r\n        fetch('https://api.covid19india.org/website_data.json')\r\n            .then(res => res.json())\r\n            .then(quotes => {\r\n            let randomNum = Math.abs(Math.floor(Math.random() * (1 - quotes.factoids.length) + 1));\r\n            setQuotes(quotes.factoids[randomNum].banner)\r\n        })\r\n    }\r\n    return ( \r\n        <React.Fragment>\r\n            <Grid container className={(props.darkmode)?classes.dark_banner_parent : classes.banner_parent} onClick={() => setNewQuote()}>\r\n                <Grid item xs={12} sm={12} md={12} lg={12} xl={12} className={classes.banner}>\r\n                    <Typography className={(props.darkmode)?classes.dark_banner_text : classes.banner_text}>\r\n                       {Quotes}\r\n                    </Typography>\r\n                </Grid>\r\n            </Grid>\r\n            <ApplastUpdated />\r\n        </React.Fragment>\r\n     );\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n    return {\r\n        darkmode : state.response.darkmode\r\n    }\r\n  }\r\n\r\nexport default connect(mapStateToProps)(Covidquotes); ;","import React, { Component } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport './GlobalStat.css';\r\nimport ReactCountryFlag from \"react-country-flag\";\r\nimport CountUp from 'react-countup';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\n\r\n\r\nclass GlobalStat extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isModelVisible: false,\r\n            WorldCountries:[],\r\n            WorldCountriesCopy:[]\r\n        }\r\n    }\r\n    abortController = new AbortController()\r\n    componentDidMount(){\r\n        this.getWorldCountryCases()\r\n    }\r\n    componentWillUnmount(){\r\n        this.abortController.abort()\r\n    }\r\n    componentWillReceiveProps(nextProp) {\r\n        if (nextProp.isCountryModalVisible) {\r\n            this.setState({ isModelVisible: nextProp.isCountryModalVisible })\r\n        } else {\r\n            this.setState({ isModelVisible: nextProp.isCountryModalVisible })\r\n        }\r\n    }\r\n    getWorldCountryCases(){\r\n        fetch('https://corona.lmao.ninja/v2/countries?sort=country', {signal : this.abortController.signal })\r\n        .then(res => res.json())\r\n        .then((data) =>{\r\n            this.setState({ WorldCountries: data})\r\n            this.setState({ WorldCountriesCopy: data})\r\n        }).catch((err) =>{\r\n            console.error('Global Countries Records',err)\r\n        })\r\n    }\r\n    handleCountrySearch(e){\r\n        if(e.target.value !== ''){\r\n            let searchedResult = this.state.WorldCountries.filter((item) =>{\r\n                return item.country.toLowerCase().includes(e.target.value.toLowerCase())\r\n            })\r\n            this.setState({ WorldCountries:searchedResult})\r\n        }else{\r\n            this.setState({ WorldCountries:this.state.WorldCountriesCopy})\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <div className={(this.state.isModelVisible) ? 'CountriesModal ShowModal' : 'CountriesModal HideModal'}>\r\n                    <Grid container\r\n                        justify=\"space-evenly\"\r\n                        alignItems=\"center\"\r\n                    >\r\n                            <Paper component=\"form\" className={(this.props.darkmode)?'dark_searchbar' : 'root'}>\r\n                                <InputBase\r\n                                    onChange={this.handleCountrySearch.bind(this)}\r\n                                    className={(this.props.darkmode)? 'dark_input' : 'input'}\r\n                                    placeholder=\"Search Countries...\"\r\n                                    inputProps={{ 'aria-label': 'Search Countries...' }}\r\n                                />\r\n                                <IconButton className='iconButton' aria-label=\"search\">\r\n                                    <SearchIcon className={(this.props.darkmode)?'dark_searchicon' : ''} />\r\n                                </IconButton>\r\n                                <Divider className='divider' orientation=\"vertical\" />\r\n                            </Paper>\r\n                        <Grid item xs={12} md={12}>\r\n                        <TableContainer component={Paper} className={(this.props.darkmode)?'dark_countrybg' : ''} >\r\n                            <Table className='table' aria-label=\"simple table\">\r\n                                <TableHead>\r\n                                <TableRow xs={12}>\r\n                                    <TableCell style={{'fontFamily': 'archia'}} className='TableHead'>Sr.No</TableCell>\r\n                                    <TableCell style={{'fontFamily': 'archia'}} className='TableHead'>Countries</TableCell>\r\n                                    <TableCell style={{'fontFamily': 'archia'}} className='TableHead'>Name</TableCell>\r\n                                    <TableCell style={{'fontFamily': 'archia'}} className='TableHead countryTodaycases'>TodayCases</TableCell>\r\n                                    <TableCell style={{'fontFamily': 'archia'}} className='TableHead countryTodaydeathth'>TodayDeaths</TableCell>\r\n                                    <TableCell style={{'fontFamily': 'archia'}} className='TableHead countryConfirmed'>Confirmed</TableCell>\r\n                                    <TableCell style={{'fontFamily': 'archia'}} className='TableHead countryActive'>Active</TableCell>\r\n                                    <TableCell style={{'fontFamily': 'archia'}} style={{'fontFamily': 'archia'}}  className='TableHead countryRecovered'>Recovered</TableCell>\r\n                                    <TableCell style={{'fontFamily': 'archia'}} className='TableHead'>Dead</TableCell>\r\n                                </TableRow>\r\n                                </TableHead>\r\n                                <TableBody>\r\n                                {this.state.WorldCountries.map((eachCountry, index) => (\r\n                                    <TableRow key={index}>\r\n                                    <TableCell style={{'fontFamily': 'archia'}} className='countryNames'>{index + 1}</TableCell>\r\n                                    <TableCell component=\"th\" scope=\"row\">\r\n                                    { (!!eachCountry.countryInfo.iso2)?\r\n                                    <ReactCountryFlag\r\n                                        countryCode={eachCountry.countryInfo.iso2 || ''}\r\n                                        svg\r\n                                        style={{\r\n                                            width: '6em',\r\n                                            height: '1.8em',\r\n                                        }}\r\n                                    /> : <span className='Notavailable'>Not Available</span>\r\n                                    } \r\n                                    </TableCell>\r\n                                    <TableCell style={{'fontFamily': 'archia'}} className='countryNames'>{eachCountry.country}</TableCell>\r\n                                    <TableCell style={{'fontFamily': 'archia'}} className='countryTodaycase        textCenter'>{eachCountry.todayCases}</TableCell>\r\n                                    <TableCell style={{'fontFamily': 'archia'}} className='countryTodaydeath textCenter'>{eachCountry.todayDeaths}</TableCell>\r\n                                    <TableCell style={{'fontFamily': 'archia'}} className='confirmed textCenter'><CountUp end={eachCountry.cases} duration={3.75} separator=\",\"></CountUp></TableCell>\r\n                                    <TableCell style={{'fontFamily': 'archia'}} className='active textCenter'><CountUp end={eachCountry.active} duration={3.75} separator=\",\"></CountUp></TableCell>\r\n                                    <TableCell style={{'fontFamily': 'archia'}} className='recovered textCenter'><CountUp end={eachCountry.recovered} duration={3.75} separator=\",\"></CountUp></TableCell>\r\n                                    <TableCell style={{'fontFamily': 'archia'}} className='dead textCenter'><CountUp end={eachCountry.deaths} duration={3.75} separator=\",\"></CountUp></TableCell>\r\n                                    </TableRow>\r\n                                ))}\r\n                                </TableBody>\r\n                            </Table>\r\n                            </TableContainer>\r\n                        </Grid>\r\n                    </Grid>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n    return {\r\n        darkmode : state.response.darkmode\r\n    }\r\n  } \r\n\r\nexport default connect(mapStateToProps)(GlobalStat);","import React, { Component } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\n\r\n\r\nclass WorldMap extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            isModelVisible: false,\r\n         }\r\n    }\r\n    componentWillReceiveProps(nextProp){\r\n        if (nextProp.isMapModalVisible) {\r\n            this.setState({ isModelVisible: nextProp.isMapModalVisible })\r\n        } else {\r\n            this.setState({ isModelVisible: nextProp.isMapModalVisible })\r\n        }\r\n    }\r\n    render() { \r\n        return ( \r\n            <React.Fragment>\r\n                <div className={(this.state.isModelVisible) ? 'CountriesModal ShowModal' : 'CountriesModal HideModal'}>\r\n                    <Grid container\r\n                    justify=\"space-evenly\"\r\n                    alignItems=\"center\"\r\n                    >\r\n                        <Grid item xs={12} sm={12} md={11} lg={11} xl={11} >\r\n                            <Card variant=\"outlined\">\r\n                                <CardContent>\r\n                                   WorldMap\r\n                                </CardContent>\r\n                            </Card>\r\n                        </Grid>\r\n                    </Grid>\r\n                </div>\r\n            </React.Fragment>\r\n         );\r\n    }\r\n}\r\n \r\nexport default WorldMap;\r\n","import React, { Component } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport './DailyCovidNews.css';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { FixedSizeList } from 'react-window';\r\nimport { connect } from 'react-redux';\r\n\r\nclass DailyCovidNews extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isModelVisible: false,\r\n            DailyCovid19News:[]\r\n          }\r\n    }\r\n    abortController = new AbortController()\r\n    componentDidMount(){\r\n        this.getCovidNews()\r\n    }\r\n    componentWillUnmount(){\r\n        this.abortController.abort()\r\n    }\r\n    componentWillReceiveProps(nextProp){\r\n        if (nextProp.isNewsModalVisible) {\r\n            this.setState({ isModelVisible: nextProp.isNewsModalVisible })\r\n        } else {\r\n            this.setState({ isModelVisible: nextProp.isNewsModalVisible })\r\n        }\r\n    }\r\n    getCovidNews(){\r\n\r\n        var myHeaders = new Headers();\r\n        myHeaders.append(\"Subscription-Key\", \"3009d4ccc29e4808af1ccc25c69b4d5d\");\r\n\r\n        var requestOptions = {\r\n        method: 'GET',\r\n        headers: myHeaders,\r\n        redirect: 'follow'\r\n        };\r\n\r\n        fetch(\"https://api.smartable.ai/coronavirus/news/IN\", requestOptions, {signal: this.abortController.signal})\r\n        .then(response => response.json())\r\n        .then((data) =>{\r\n            console.log('data news',data)\r\n            this.setState({ DailyCovid19News: data.news})\r\n        })\r\n        .catch(error => console.log('error', error));\r\n\r\n    }\r\n    render() { \r\n        return ( \r\n            <React.Fragment>\r\n                <div className={(this.state.isModelVisible) ? 'CountriesModal ShowModal' : 'CountriesModal HideModal'}>\r\n                    <Grid container \r\n                    justify=\"flex-end\"\r\n                    alignItems=\"center\"\r\n                    >\r\n                        <Grid item xs={12} sm={12} md={5} lg={11} xl={11} className='notiBox'>\r\n                            <Card variant=\"outlined\" className={(this.props.darkmode)?'dark_notificationBox' : 'notificationBox'}>\r\n                                <CardContent>\r\n                                    <Typography className={(this.props.darkmode)? 'dark_cardheading' : 'cardheading'} variant=\"subtitle2\" gutterBottom color=\"textSecondary\">\r\n                                        Daily Covid19 News.\r\n                                    </Typography>\r\n                                    <Divider />\r\n                                    <List className={(this.props.darkmode)? 'dark_root Newscard' : 'root Newscard' }  >\r\n                                        {(this.state.DailyCovid19News.length > 0)?\r\n                                            this.state.DailyCovid19News.map((News, index) =>(\r\n                                                <span key={index} >\r\n                                                <ListItem key={index} alignItems=\"flex-start\">\r\n                                                    <ListItemAvatar>\r\n                                                        {\r\n                                                            (!!News.images)? <Avatar alt=\"Travis Howard\" src={News.images[0].url} /> : <Avatar alt=\"N\" src=\"/static/images/avatar/2.jpg\" />\r\n                                                        }\r\n                                                    </ListItemAvatar>\r\n                                                    <ListItemText className='NewsTitle'\r\n                                                        primary={News.title}\r\n                                                        secondary={\r\n                                                            <React.Fragment>\r\n                                                                <Typography\r\n                                                                    component=\"span\"\r\n                                                                    variant=\"body2\"\r\n                                                                    className='inline'\r\n                                                                    color=\"textPrimary\"\r\n                                                                >\r\n                                                                    Excerpt\r\n                                                                </Typography>\r\n                                                                <span className='MainNews'>{' - '+News.excerpt}</span>\r\n                                                                <span className='NewsSource'>Sourcses -</span>\r\n                                                                <span><a href={News.ampWebUrl}>{(!!News.ampWebUrl)? News.ampWebUrl:'Not available'}</a></span>\r\n                                                            </React.Fragment>\r\n                                                        }\r\n                                                        \r\n                                                    />\r\n                                                </ListItem>\r\n                                                <Divider variant=\"inset\" component=\"li\" />\r\n                                                </span>\r\n                                            )) : <span style={{'fontFamily':'archia !important'}}>News not Available</span>\r\n                                        }\r\n                                    </List>\r\n                                </CardContent>\r\n                            </Card>\r\n                        </Grid>\r\n                    </Grid>\r\n                </div>\r\n            </React.Fragment>\r\n         );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n    return {\r\n        darkmode : state.response.darkmode\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(DailyCovidNews);\r\n\r\n\r\n","import React, { useState,useEffect } from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport MoreIcon from '@material-ui/icons/MoreVert';\r\nimport Covidquotes from '../CovidQuotes/Covidquotes.js';\r\nimport LanguageSharpIcon from '@material-ui/icons/LanguageSharp';\r\nimport GlobalStat from '../../Components/GlobalStats/GlobalStat.js';\r\nimport PublicIcon from '@material-ui/icons/Public';\r\nimport WorldMap from '../../Components/WorldMap/Worldmap.js';\r\nimport DailyCovidNews from '../../Components/IndiaCovidNews/DaliyCovidNews.js';\r\nimport Brightness3Icon from '@material-ui/icons/Brightness2';\r\nimport WbSunnyIcon from '@material-ui/icons/WbSunny';\r\nimport { DarkModeAction } from '../../Actions/Dark_Mode.js';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  navbar:{\r\n    boxShadow: '1px 0px 1px black !important'\r\n  },\r\n  darkmode_bg:{\r\n    background : '#1e1e30 !important'\r\n  },\r\n  globalstat:{\r\n    marginTop: '12px',\r\n    cursor: 'pointer'\r\n  },\r\n  darkglobalstat:{\r\n    marginTop: '12px',\r\n    cursor: 'pointer',\r\n    color: '#fff'\r\n  },\r\n  darknotibell:{\r\n    color : 'yellow'\r\n  },\r\n  notibell:{\r\n    color : '#000'\r\n  },\r\n  modeswitch:{\r\n    transform: 'scaleX(-1)',\r\n    marginTop: '12px',\r\n    cursor: 'pointer',\r\n    marginRight: '14px'\r\n  },\r\n  darkmodeswitch:{\r\n    transform: 'scaleX(-1)',\r\n    marginTop: '12px',\r\n    cursor: 'pointer',\r\n    marginRight: '14px',\r\n    color: 'rgb(255, 193, 7)',\r\n  },\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  title: {\r\n    fontFamily: 'archia !important',\r\n    display: 'block',\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'block',\r\n    },\r\n    color: theme.palette.text.inherit,\r\n  },\r\n  darktitle:{\r\n    fontFamily: 'archia !important',\r\n    display: 'block',\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'block',\r\n    },\r\n    color: '#4c75f2 !important'\r\n  },\r\n  sectionDesktop: {\r\n    display: 'none',\r\n    [theme.breakpoints.up('md')]: {\r\n      display: 'flex',\r\n    },\r\n  },\r\n  sectionMobile: {\r\n    display: 'flex',\r\n    [theme.breakpoints.up('md')]: {\r\n      display: 'none',\r\n    },\r\n  },\r\n}));\r\nconst PrimarySearchAppBar =  (props) => {\r\n  const classes = useStyles();\r\n  const [NewsCount, setNewsCount] = useState(0);\r\n  const [isCountryModalVisible, setModalVisible] = useState(false);\r\n  const [isMapModalVisible, setMapModalVisible] = useState(false);\r\n  const [isNewsModalVisible, setNewsModalVisible] = useState(false);\r\n\r\n  useEffect(() =>{\r\n    const abortController = new AbortController()\r\n    const signal = abortController.signal\r\n    var myHeaders = new Headers();\r\n    myHeaders.append(\"Subscription-Key\", \"3009d4ccc29e4808af1ccc25c69b4d5d\");\r\n    var requestOptions = {\r\n        method: 'GET',\r\n        headers: myHeaders,\r\n        redirect: 'follow'\r\n    };\r\n    fetch(\"https://api.smartable.ai/coronavirus/news/IN\", requestOptions, {signal : signal})\r\n    .then(response => response.json())\r\n    .then((data) =>{\r\n      setNewsCount(data.news.length)\r\n    })\r\n    .catch(error => console.log('error', error));\r\n    return function cleanup(){\r\n      abortController.abort()\r\n    }\r\n  },[])\r\n\r\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\r\n\r\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\r\n\r\n  const handleMobileMenuClose = () => {\r\n    setMobileMoreAnchorEl(null);\r\n  };\r\n\r\n  const handleMobileMenuOpen = (event) => {\r\n    setMobileMoreAnchorEl(event.currentTarget);\r\n  };\r\n  const handleMapVisible = () =>{\r\n    if(isMapModalVisible){\r\n      setMapModalVisible(false)\r\n    }else{\r\n      setMapModalVisible(true)\r\n    }\r\n  }\r\n  const handleDarkMode = () =>{\r\n    if(props.darkmode == false){\r\n      props.DarkModeAction(true)\r\n    }else if(props.darkmode == true){\r\n      props.DarkModeAction(false)\r\n    }\r\n  }\r\n  const handleCountryRecords = () =>{\r\n    if(isCountryModalVisible){\r\n      setModalVisible(false)\r\n    }else{\r\n      setModalVisible(true)\r\n    }\r\n  }\r\n  const handleCovidNews = () =>{\r\n    if(isNewsModalVisible){\r\n      setNewsModalVisible(false)\r\n    }else{\r\n      setNewsModalVisible(true)\r\n    }\r\n  }\r\n  const mobileMenuId = 'primary-search-account-menu-mobile';\r\n  const renderMobileMenu = (\r\n    <Menu\r\n      anchorEl={mobileMoreAnchorEl}\r\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      id={mobileMenuId}\r\n      keepMounted\r\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      open={isMobileMenuOpen}\r\n      onClose={handleMobileMenuClose}\r\n    >\r\n      <MenuItem>\r\n        <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\r\n          <Badge badgeContent={4} color=\"secondary\">\r\n            <MailIcon />\r\n          </Badge>\r\n        </IconButton>\r\n        <p>Messages</p>\r\n      </MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  return (\r\n    <div className={classes.grow}>\r\n      <AppBar position=\"static\" color=\"inherit\" className={classes.navbar}>\r\n        <Toolbar className={(props.darkmode)?classes.darkmode_bg : ''}>\r\n          <Typography className={(props.darkmode)?classes.darktitle : classes.title}  variant=\"h6\" noWrap>\r\n            Covid-19\r\n          </Typography>\r\n          <div className={classes.grow} />\r\n          <div className={classes.sectionDesktop}>\r\n            <div onClick={()=>handleDarkMode()} className={(props.darkmode)?classes.darkmodeswitch : classes.modeswitch}  >\r\n              {\r\n                (props.darkmode == false)?<Brightness3Icon /> : <WbSunnyIcon />\r\n              }      \r\n            </div>\r\n            <div onClick={()=>handleCountryRecords()} className={(props.darkmode)?classes.darkglobalstat : classes.globalstat}>\r\n              <LanguageSharpIcon />\r\n            </div>\r\n            <div onClick={()=>handleCovidNews()} >\r\n              <IconButton aria-label=\"show new notifications\" className={(props.darkmode)?classes.darknotibell : classes.notibell}>\r\n                <Badge badgeContent={NewsCount} color=\"secondary\">\r\n                  <NotificationsIcon />\r\n                </Badge>\r\n              </IconButton>\r\n            </div>\r\n          </div>\r\n          <div className={classes.sectionMobile}>\r\n          <div onClick={()=>handleDarkMode()} className={(props.darkmode)?classes.darkmodeswitch : classes.modeswitch}  >\r\n              {\r\n                (props.darkmode == false)?<Brightness3Icon /> : <WbSunnyIcon />\r\n              }   \r\n            </div>\r\n            <div onClick={()=>handleCountryRecords()} className={(props.darkmode)?classes.darkglobalstat : classes.globalstat}  >\r\n              <LanguageSharpIcon />\r\n            </div>\r\n            <div onClick={()=>handleCovidNews()}>\r\n            <IconButton aria-label=\"show 11 new notifications\" className={(props.darkmode)?classes.darknotibell : classes.notibell}>\r\n              <Badge badgeContent={11} color=\"secondary\">\r\n                <NotificationsIcon />\r\n              </Badge>\r\n            </IconButton>\r\n          </div>\r\n            <IconButton\r\n              aria-label=\"show more\"\r\n              aria-controls={mobileMenuId}\r\n              aria-haspopup=\"true\"\r\n              onClick={handleMobileMenuOpen}\r\n              color=\"inherit\"\r\n            >\r\n              <MoreIcon />\r\n            </IconButton>\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <DailyCovidNews isNewsModalVisible={isNewsModalVisible} />\r\n      <WorldMap isMapModalVisible={isMapModalVisible} />\r\n      <GlobalStat isCountryModalVisible={isCountryModalVisible} />\r\n      <Route exact path='/' component={Covidquotes}></Route>\r\n      {renderMobileMenu}\r\n    </div>\r\n  );\r\n}\r\nconst mapStateToProps = (state) =>{\r\n  return {\r\n      darkmode : state.response.darkmode\r\n  }\r\n}\r\nexport default connect(mapStateToProps, { DarkModeAction })(PrimarySearchAppBar);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import { DARK_MODE } from './type.js';\r\n\r\nexport const DarkModeAction = (darkmode) => dispatch =>{\r\n    console.log('Dark Mode Action...',darkmode)\r\n    dispatch({type: DARK_MODE, payload: darkmode})\r\n}","export const FETCH_QUOTES = 'FETCH_QUOTES';\r\nexport const FETCH_COVID19_NEWS =  'FETCH_COVID19_NEWS';\r\nexport const DARK_MODE = 'DARK_MODE';\r\n\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport './SingleState.css';\r\nimport { withRouter } from 'react-router-dom'\r\nimport { connect } from 'react-redux';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport _ from 'lodash';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CountUp from 'react-countup';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        justifyContent: 'center',\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n            width: theme.spacing(12),\r\n            height: theme.spacing(10),\r\n            [theme.breakpoints.down('xs')]: {\r\n                margin: theme.spacing(1),\r\n                width: theme.spacing(7),\r\n                height: theme.spacing(7),\r\n            }\r\n\r\n        },\r\n    },\r\n    table: {\r\n        minWidth: 400,\r\n        [theme.breakpoints.down('xs')]: {\r\n            minWidth: 150,\r\n        }\r\n    },\r\n    notavailable: {\r\n        fontSize: '12px !important'\r\n    },\r\n    confirm_paper: {\r\n        background: 'rgba(255,7,58,.12549) !important'\r\n    },\r\n    active_paper: {\r\n        background: '#E7F9FE'\r\n    },\r\n    recovered_paper: {\r\n        background: '#CDFFCD'\r\n    },\r\n    deceased_paper: {\r\n        background: '#E6E6E2'\r\n    },\r\n    state: {\r\n        color: '#007bff',\r\n        textAlign: 'center',\r\n        fontWeight: 900,\r\n        fontFamily: 'archia'\r\n    },\r\n    linkstatepage: {\r\n        cursor: 'pointer',\r\n        marginLeft: '18%',\r\n        fontFamily: 'archia',\r\n        background: 'rgba(255,193,7,.12549)',\r\n        borderRadius: '5px',\r\n        color: '#fd7e14',\r\n        fontSize: '.75rem',\r\n        padding: '.5rem',\r\n        textDecoration: 'none',\r\n        transition: 'all .2s ease-in-out'\r\n    },\r\n    confirm: {\r\n        fontSize: '12px',\r\n        textAlign: 'center',\r\n        fontWeight: 900,\r\n        fontFamily: 'archia',\r\n        color: 'rgba(255,7,58,.6)',\r\n        marginTop: '12px',\r\n        [theme.breakpoints.down('xs')]: {\r\n            fontSize: '8px',\r\n        }\r\n    },\r\n    active: {\r\n        fontSize: '12px',\r\n        textAlign: 'center',\r\n        fontWeight: 900,\r\n        fontFamily: 'archia',\r\n        color: 'rgba(0,123,255,.6)',\r\n        marginTop: '12px',\r\n        [theme.breakpoints.down('xs')]: {\r\n            fontSize: '8px',\r\n        }\r\n    },\r\n    recovered: {\r\n        fontSize: '12px',\r\n        textAlign: 'center',\r\n        fontWeight: 900,\r\n        fontFamily: 'archia',\r\n        color: 'rgba(40,167,69,.6)',\r\n        marginTop: '12px',\r\n        [theme.breakpoints.down('xs')]: {\r\n            fontSize: '8px',\r\n        }\r\n    },\r\n    deceased: {\r\n        fontSize: '12px',\r\n        textAlign: 'center',\r\n        fontWeight: 900,\r\n        fontFamily: 'archia',\r\n        color: 'rgba(108,117,125,.6)',\r\n        marginTop: '12px',\r\n        [theme.breakpoints.down('xs')]: {\r\n            fontSize: '8px',\r\n        }\r\n    },\r\n    confirmCount: {\r\n        color: '#ff073a',\r\n        textAlign: 'center',\r\n        fontWeight: 900,\r\n        fontFamily: 'archia',\r\n        fontSize: '20px',\r\n        [theme.breakpoints.down('xs')]: {\r\n            fontSize: '14px',\r\n        }\r\n    },\r\n    activeCount: {\r\n        color: '#007bff',\r\n        textAlign: 'center',\r\n        fontWeight: 900,\r\n        fontFamily: 'archia',\r\n        fontSize: '20px',\r\n        [theme.breakpoints.down('xs')]: {\r\n            fontSize: '14px',\r\n        }\r\n    },\r\n    recoveredCount: {\r\n        color: '#28a745',\r\n        textAlign: 'center',\r\n        fontWeight: 900,\r\n        fontFamily: 'archia',\r\n        fontSize: '20px',\r\n        [theme.breakpoints.down('xs')]: {\r\n            fontSize: '14px',\r\n        }\r\n    },\r\n    decreasedCount: {\r\n        color: '#6c757d',\r\n        textAlign: 'center',\r\n        fontWeight: 900,\r\n        fontFamily: 'archia',\r\n        fontSize: '20px',\r\n        [theme.breakpoints.down('xs')]: {\r\n            fontSize: '14px',\r\n        }\r\n    },\r\n    GridRow: {\r\n        marginTop: '10px !important'\r\n    },\r\n    GridRowSecond: {\r\n        marginTop: '45px !important'\r\n    },\r\n    GridRowThird: {\r\n        marginTop: '25px !important'\r\n    },\r\n    Expansionroot: {\r\n        width: '100%'\r\n    },\r\n    heading: {\r\n        color: '#ADACAC',\r\n        fontWeight: '700',\r\n        fontSize: theme.typography.pxToRem(15),\r\n        flexBasis: '33.33%',\r\n        flexShrink: 0,\r\n        fontFamily: 'archia !important'\r\n    },\r\n    secondaryHeading: {\r\n        fontSize: theme.typography.pxToRem(13),\r\n        color: theme.palette.text.secondary,\r\n        fontFamily: 'archia !important',\r\n        fontWeight: '700'\r\n    },\r\n    dark_secondaryHeading: {\r\n        fontSize: theme.typography.pxToRem(13),\r\n        color: theme.palette.text.secondary,\r\n        fontFamily: 'archia !important',\r\n        fontWeight: '700',\r\n        color: '#8B8989'\r\n    },\r\n    thirdGrid: {\r\n        marginLeft: '27%',\r\n        [theme.breakpoints.down('xs')]: {\r\n            marginLeft: '0%',\r\n        }\r\n    },\r\n    expdetails: {\r\n        padding: '0px !important'\r\n    },\r\n    noborder_con: {\r\n        border: 'none !important',\r\n        fontFamily: 'archia !important',\r\n        fontWeight: '700',\r\n        color: 'rgba(255,7,58,.6)'\r\n    },\r\n    noborder_act: {\r\n        border: 'none !important',\r\n        fontFamily: 'archia !important',\r\n        fontWeight: '700',\r\n        color: 'rgba(0,123,255,.6)'\r\n    },\r\n    noborder_rec: {\r\n        border: 'none !important',\r\n        fontFamily: 'archia !important',\r\n        fontWeight: '700',\r\n        color: 'rgba(40,167,69,.6)'\r\n    },\r\n    noborder_dec: {\r\n        border: 'none !important',\r\n        fontFamily: 'archia !important',\r\n        fontWeight: '700',\r\n        color: 'rgba(108,117,125,.6)'\r\n    },\r\n    concount:{\r\n        fontFamily: 'archia !important',\r\n        fontWeight: '700',\r\n        color: '#ff073a',\r\n        borderBottom: 'none'\r\n    },\r\n    actcount:{\r\n        fontFamily: 'archia !important',\r\n        fontWeight: '700',\r\n        color: '#007bff',\r\n        borderBottom: 'none'\r\n\r\n    },\r\n    reccount:{\r\n        fontFamily: 'archia !important',\r\n        fontWeight: '700',\r\n        color: '#28a745',\r\n        borderBottom: 'none'\r\n\r\n    },\r\n    deccount:{\r\n        fontFamily: 'archia !important',\r\n        fontWeight: '700',\r\n        color: '#6c757d',\r\n        borderBottom: 'none'\r\n\r\n    },\r\n    dark_panel:{\r\n        background: '#1e1e30 !important'\r\n    },\r\n    dark_panelContent:{\r\n        background: '#161625 !important'\r\n    },\r\n    stateSelection:{\r\n        border: 'none !important',\r\n        background: 'none !important',\r\n        fontFamily: 'archia',\r\n        cursor: 'pointer',\r\n        color: '#000 !important'\r\n    },\r\n    dark_stateSelection:{\r\n        border: 'none !important',\r\n        background: 'none !important',\r\n        fontFamily: 'archia',\r\n        color: '#6c757d !important',\r\n        cursor: 'pointer'\r\n    },\r\n    greenZone : {\r\n        color: '#28a745 !important',\r\n        fontSize: '14px !important'\r\n    },\r\n    redZone: {\r\n        color: '#FA1D2F !important',\r\n        fontSize: '14px !important'\r\n    },\r\n    orangeZone: {\r\n        color: '#F1B112 !important',\r\n        fontSize: '14px !important'\r\n    }\r\n}))\r\n\r\nconst SingleState = (props) => {\r\n\r\n    const classes = useStyles();\r\n    const [expanded, setExpanded] = React.useState(false);\r\n    const [stateName, setstateName] = useState('')\r\n    const [confirmed, setconfirmed] = useState(0)\r\n    const [active, setactive] = useState(0)\r\n    const [deceased, setdeceased] = useState(0)\r\n    const [recovered, setrecovered] = useState(0)\r\n    const [stateDistricts, setstateDistricts] = useState([])\r\n    const [statelist, setstatelist] = useState([])\r\n    const [selectedstate, setselectedstate] = useState('')\r\n\r\n\r\n    useEffect(() => {\r\n        console.log('Route params', props.match.params.state);\r\n        var apiRequest1 = fetch('https://api.covid19india.org/v2/state_district_wise.json').then(function(response){ \r\n            return response.json()\r\n        });\r\n        var apiRequest2 = fetch('https://api.covid19india.org/zones.json').then(function(response){\r\n            return response.json()\r\n        });\r\n        Promise.all([apiRequest1,apiRequest2]).then(function(values){\r\n            console.log('data1',values[0]);\r\n            console.log('data2',values[1]);\r\n            let states = [];\r\n            values[0].map((item) =>{\r\n                states.push({state:item.state,statecode:item.statecode})\r\n            })\r\n            setstatelist(states)\r\n            console.log('states',states)\r\n            console.log('states',statelist)\r\n            let filteredData = _.find(values[0], (item) => {\r\n                return item.statecode === props.match.params.state\r\n            })\r\n            console.log('Filtered Data...', filteredData.districtData)\r\n            for(let i=0; i<filteredData.districtData.length; i++){\r\n                for(let j=0; j<values[1].zones.length; j++){\r\n                    if(filteredData.districtData[i].district === values[1].zones[j].district){\r\n                        filteredData.districtData[i]['zone'] = values[1].zones[j].zone\r\n                    }\r\n                }\r\n            }\r\n            console.log('Filtered Twice Data...', filteredData.districtData)\r\n            setstateDistricts(filteredData.districtData)\r\n            if (!!filteredData) {\r\n                setstateName(filteredData.state)\r\n                let confirmed = _.sumBy(['confirmed'], _.partial(_.sumBy, filteredData.districtData));\r\n                let deceased = _.sumBy(['deceased'], _.partial(_.sumBy, filteredData.districtData));\r\n                let recovered = _.sumBy(['recovered'], _.partial(_.sumBy, filteredData.districtData));\r\n                let active = _.sumBy(['active'], _.partial(_.sumBy, filteredData.districtData));\r\n\r\n                setstateDistricts(filteredData.districtData)\r\n                setactive(active);\r\n                setrecovered(recovered);\r\n                setconfirmed(confirmed);\r\n                setdeceased(deceased);\r\n            } else {\r\n                props.history.push('/')\r\n            }\r\n\r\n        });\r\n    }, [props])\r\n\r\n    const GoTo = () => {\r\n        props.history.push('/')\r\n    }\r\n    const handleChange = (panel) => (isExpanded) => {\r\n        setExpanded(isExpanded ? panel : false);\r\n    };\r\n    const handlestateChange = (e) => {\r\n        console.log('StateCode',e.target.value)\r\n        props.history.push('/state/' + e.target.value)\r\n    }\r\n    return (\r\n        <React.Fragment>\r\n            <div className={(props.darkmode) ? 'dark_bg' : ''}>\r\n                <Grid container className={(props.darkmode) ? 'dark_bg' : ''}>\r\n                    <Grid item xs={12} sm={12} md={8} lg={12} xl={12}>\r\n                        <Typography variant=\"subtitle1\" className={(props.darkmode) ? 'dark_HomeRoute' : 'HomeRoute'} gutterBottom ><span onClick={() => GoTo()}>Home</span><big className='dark_strock'>/</big><span className='statename'>\r\n                            <select className={(props.darkmode)? classes.dark_stateSelection : classes.stateSelection} \r\n                            value={selectedstate}\r\n                            onChange={(e)=>handlestateChange(e)}\r\n                            >\r\n                            <option >{stateName}</option>\r\n                                {\r\n                                    statelist.map((item,index) =>{\r\n                                    return <option  key={index} value={item.statecode}>{item.state}</option>\r\n                                    })\r\n                                }\r\n                            </select>\r\n                        </span>\r\n                        </Typography>\r\n                        <Typography variant=\"subtitle1\" className='head_stateName' gutterBottom>{stateName}</Typography>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container className={classes.GridRow}>\r\n                    <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n                        <div className={classes.root}>\r\n                            <Paper elevation={0} className={classes.confirm_paper}>\r\n                                <Typography variant=\"subtitle1\" className={classes.confirm} gutterBottom>Confirmed</Typography>\r\n                                <Typography variant=\"subtitle1\" className={classes.confirmCount} gutterBottom>\r\n                                    <CountUp end={parseInt(confirmed)} duration={3.75} separator=\",\"></CountUp>\r\n                                </Typography>\r\n                            </Paper>\r\n                            <Paper elevation={0} className={classes.active_paper}>\r\n                                <Typography variant=\"subtitle1\" className={classes.active} gutterBottom>Active</Typography>\r\n                                <Typography variant=\"subtitle1\" className={classes.activeCount} gutterBottom>\r\n                                    <CountUp end={parseInt(active)} duration={3.75} separator=\",\"></CountUp>\r\n                                </Typography>\r\n                            </Paper>\r\n                            <Paper elevation={0} className={classes.recovered_paper}>\r\n                                <Typography variant=\"subtitle1\" className={classes.recovered} gutterBottom>Recovered</Typography>\r\n                                <Typography variant=\"subtitle1\" className={classes.recoveredCount} gutterBottom>\r\n                                    <CountUp end={parseInt(recovered)} duration={3.75} separator=\",\"></CountUp>\r\n                                </Typography>\r\n                            </Paper>\r\n                            <Paper elevation={0} className={classes.deceased_paper}>\r\n                                <Typography variant=\"subtitle1\" className={classes.deceased} gutterBottom>Deceased</Typography>\r\n                                <Typography variant=\"subtitle1\" className={classes.decreasedCount} gutterBottom>\r\n                                    <CountUp end={parseInt(deceased)} duration={3.75} separator=\",\"></CountUp>\r\n                                </Typography>\r\n                            </Paper>\r\n                        </div>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container className={classes.GridRowSecond}>\r\n                    <Grid item xs={12} sm={12} md={8} lg={12} xl={12}>\r\n                        <Typography variant=\"subtitle1\" className={(props.darkmode) ? 'dark_District' : 'District'} gutterBottom >District Wise Data\r\n                    </Typography>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container className={classes.GridRowThird}>\r\n                    <Grid item xs={12} sm={12} md={6} lg={12} xl={12} className={classes.thirdGrid}>\r\n                        <div className={classes.Expansionroot}>\r\n                            {\r\n                                stateDistricts.map((item, index) =>\r\n                                    <ExpansionPanel className={(props.darkmode)? classes.dark_panel : ''} key={index} expanded={expanded === item.district} onChange={handleChange(item.district)}>\r\n                                        <ExpansionPanelSummary\r\n                                            expandIcon={<ExpandMoreIcon />}\r\n                                            aria-controls=\"panel1bh-content\"\r\n                                            id=\"panel1bh-header\"\r\n                                        >\r\n                                            <Typography className={classes.heading}>{item.district}</Typography>\r\n                            <Typography className={(props.darkmode)? classes.dark_secondaryHeading : classes.secondaryHeading}>District under : { (item.zone == 'Red')? <span><big className={classes.redZone}>{item.zone}</big>&nbsp;&nbsp;zone </span> : (item.zone == 'Orange')? <span><big className={classes.orangeZone}>{item.zone}</big>&nbsp;&nbsp;zone</span> : (item.zone == 'Green')? <span><big className={classes.greenZone}>{item.zone}</big>&nbsp;&nbsp;zone</span> : <span>Not available</span> }</Typography>\r\n                                        </ExpansionPanelSummary>\r\n                                        <ExpansionPanelDetails className={classes.expdetails}>\r\n                                            <TableContainer component={Paper} className={(props.darkmode)? classes.dark_panelContent : ''} elevation={0}>\r\n                                                <Table className={classes.table} size=\"small\" aria-label=\"a dense table\">\r\n                                                    <TableHead>\r\n                                                        <TableRow>\r\n                                                            <TableCell className={classes.noborder_con}>Confirm</TableCell>\r\n                                                            <TableCell className={classes.noborder_act} align=\"center\">Active</TableCell>\r\n                                                            <TableCell className={classes.noborder_rec} align=\"center\">Recovered</TableCell>\r\n                                                            <TableCell className={classes.noborder_dec\r\n                                                            } align=\"center\">Deceased</TableCell>\r\n                                                        </TableRow>\r\n                                                    </TableHead>\r\n                                                    <TableBody>\r\n                                                            <TableRow key={index+'rows'}>\r\n                                                                <TableCell className={classes.concount} component=\"th\" scope=\"row\">\r\n                                                                    {item.confirmed}\r\n                                                                </TableCell>\r\n                                                                <TableCell className={classes.actcount} align=\"center\">{item.active}</TableCell>\r\n                                                                <TableCell className={classes.reccount} align=\"center\">{item.recovered}</TableCell>\r\n                                                                <TableCell className={classes.deccount} align=\"center\">{item.deceased}</TableCell>\r\n                                                            </TableRow>\r\n                                                    </TableBody>\r\n                                                </Table>\r\n                                            </TableContainer>\r\n                                        </ExpansionPanelDetails>\r\n                                    </ExpansionPanel>\r\n                                )\r\n                            }\r\n\r\n                        </div>\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        darkmode: state.response.darkmode\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(withRouter(SingleState));","import React from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport './App.css';\nimport NavBar  from '../src/Components/NavBar/NavBar.js';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { connect } from 'react-redux';\nimport SingleState from '../src/Components/SingleState/SingleState.js';\n\n\nconst useStyles = makeStyles((theme) => ({\n  darkapp:{\n    background : '#161625 !important'\n  }\n}))\n\nconst App = (props) => {\n  const classes = useStyles();\n  return (\n    <BrowserRouter>\n      <div className={(props.darkmode)?classes.darkapp : 'App'}>\n        <NavBar />\n        <Route exact path='/state/:state' component={SingleState}></Route>\n      </div>\n   </BrowserRouter>\n  );\n}\n\nconst mapStateToProps = (state) =>{\n  return {\n      darkmode : state.response.darkmode\n  }\n}\nexport default connect(mapStateToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { DARK_MODE } from '../Actions/type.js';\r\n\r\nconst initialState = {\r\n    darkmode:false\r\n}\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case DARK_MODE:\r\n            return {\r\n                ...state,\r\n                darkmode: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from 'redux';\r\nimport DarkMode from  './DarkModeReducer.js';\r\n\r\nexport default combineReducers({\r\n    response: DarkMode\r\n});","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './Reducers';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(rootReducer, initialState, compose( \r\n    applyMiddleware(...middleware),\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__() || compose\r\n));\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}