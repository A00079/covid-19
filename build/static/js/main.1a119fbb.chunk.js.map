{"version":3,"sources":["Components/StateDetailsSlider/StateDetails.js","Components/StateMap/StateMap.js","Components/StateDetailsSlider/StateChart.js","Components/TabPanel/Tabs.js","Components/CountryStats/CountryStat.js","utils/commom-functions.js","Components/ApplastUpdated/AppUpdated.js","Components/CovidQuotes/Covidquotes.js","Components/GlobalStats/GlobalStat.js","Components/WorldMap/Worldmap.js","Components/IndiaCovidNews/DaliyCovidNews.js","Components/NavBar/NavBar.js","Actions/Dark_Mode.js","Actions/type.js","App.js","serviceWorker.js","Reducers/DarkModeReducer.js","Reducers/index.js","store.js","index.js"],"names":["StateDetails","props","state","dynamicClassname","sliderLog","clearhandleautoslide","StateWiseData","StateTotalCases","this","fetchStatesDetails","fetch","then","res","json","statewisedetails","setState","statesTotalCount","Districts","stateDistCountKerala","stateDistCountDelhi","stateDistCountTelangana","stateDistCountRajasthan","stateDistCountHaryana","UttarPradesh","Ladakh","TamilNadu","JammuandKashmir","Karnataka","Maharashtra","Punjab","AndhraPradesh","Uttarakhand","Odisha","Puducherry","WestBengal","Chandigarh","Gujarat","HimachalPradesh","MadhyaPradesh","Bihar","Manipur","Mizoram","Goa","AndamanandNicobarIslands","Jharkhand","Assam","ArunachalPradesh","DadraandNagarHaveli","Tripura","Nagaland","Meghalaya","push","districtData","i","length","district","confirmed","StateArray","totalcases","topStates","total","map","item","Fragment","Grid","container","justify","alignItems","md","Card","variant","CardContent","style","className","spacing","stateWiseDetails","index","xs","key","Typography","end","duration","separator","Component","useStyles","makeStyles","theme","root","display","flexWrap","justifyContent","margin","width","height","breakpoints","down","notavailable","fontSize","confirm_paper","background","active_paper","recovered_paper","deceased_paper","color","textAlign","fontWeight","fontFamily","confirm","marginTop","active","recovered","deceased","confirmCount","activeCount","recoveredCount","decreasedCount","GridRow","INDIA_TOPO_JSON","require","PROJECTION_CONFIG","scale","center","COLOR_RANGE","geographyStyle","default","outline","hover","fill","transition","pressed","App","classes","useState","setTooltipContent","stateContent","setstateContent","stateTotal","setstateTotal","stateactiveTotal","setstateactiveTotal","staterecoveredTotal","setstaterecoveredTotal","statedeceasedTotal","setstatedeceasedTotal","id","value","data","setData","useEffect","StateMapData","activetotal","recoveredtotal","deceasedtotal","console","log","reduce","max","colorScale","scaleQuantile","domain","d","range","onMouseEnter","geo","current","properties","name","onMouseLeave","sm","lg","xl","Paper","elevation","gutterBottom","parseInt","projectionConfig","projection","data-tip","geography","geographies","find","s","rsmKey","StateChart","isVertical","StateData","labels","datasets","label","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","handelGraphToggle","bind","stateDistCountKeralaactive","stateDistCountKeralarecoverd","stateDistCountKeraladeceased","stateDistCountDelhiactive","stateDistCountDelhirecoverd","stateDistCountDelhideceased","stateDistCountTelanganaactive","stateDistCountTelanganarecoverd","stateDistCountTelanganadeceased","stateDistCountRajasthanactive","stateDistCountRajasthanrecoverd","stateDistCountRajasthandeceased","stateDistCountHaryanaactive","stateDistCountHaryanarecoverd","stateDistCountHaryanadeceased","stateDistCountUttarPradeshactive","stateDistCountUttarPradeshrecoverd","stateDistCountUttarPradeshdeceased","stateDistCountLadakhactive","stateDistCountLadakhrecoverd","stateDistCountLadakhdeceased","stateDistCountTamilNaduactive","stateDistCountTamilNadurecoverd","stateDistCountTamilNadudeceased","stateDistCountJammuandKashmiractive","stateDistCountJammuandKashmirrecoverd","stateDistCountJammuandKashmirdeceased","stateDistCountKarnatakaactive","stateDistCountKarnatakarecoverd","stateDistCountKarnatakadeceased","stateDistCountMaharashtraactive","stateDistCountMaharashtrarecoverd","stateDistCountMaharashtradeceased","stateDistCountPunjabactive","stateDistCountPunjabrecoverd","stateDistCountPunjabdeceased","stateDistCountAndhraPradeshactive","stateDistCountAndhraPradeshrecoverd","stateDistCountAndhraPradeshdeceased","stateDistCountUttarakhandactive","stateDistCountUttarakhandrecoverd","stateDistCountUttarakhanddeceased","stateDistCountOdishaactive","stateDistCountOdisharecoverd","stateDistCountOdishadeceased","stateDistCountPuducherryactive","stateDistCountPuducherryrecoverd","stateDistCountPuducherrydeceased","stateDistCountWestBengalactive","stateDistCountWestBengalrecoverd","stateDistCountWestBengaldeceased","stateDistCountChandigarhactive","stateDistCountChandigarhrecoverd","stateDistCountChandigarhdeceased","stateDistCountGujaratactive","stateDistCountGujaratrecoverd","stateDistCountGujaratdeceased","stateDistCountHimachalPradeshactive","stateDistCountHimachalPradeshrecoverd","stateDistCountHimachalPradeshdeceased","stateDistCountMadhyaPradeshactive","stateDistCountMadhyaPradeshrecoverd","stateDistCountMadhyaPradeshdeceased","stateDistCountBiharactive","stateDistCountBiharrecoverd","stateDistCountBihardeceased","stateDistCountManipuractive","stateDistCountManipurrecoverd","stateDistCountManipurdeceased","stateDistCountMizoramactive","stateDistCountMizoramrecoverd","stateDistCountMizoramdeceased","stateDistCountGoaactive","stateDistCountGoarecoverd","stateDistCountGoadeceased","stateDistCountAndamanandNicobarIslandsactive","stateDistCountAndamanandNicobarIslandsrecoverd","stateDistCountAndamanandNicobarIslandsdeceased","stateDistCountJharkhandactive","stateDistCountJharkhandrecoverd","stateDistCountJharkhanddeceased","stateDistCountAssamactive","stateDistCountAssamrecoverd","stateDistCountAssamdeceased","stateDistCountArunachalPradeshactive","stateDistCountArunachalPradeshrecoverd","stateDistCountArunachalPradeshdeceased","stateDistCountDadraandNagarHaveliactive","stateDistCountDadraandNagarHavelirecoverd","stateDistCountDadraandNagarHavelideceased","stateDistCountTripuraactive","stateDistCountTripurarecoverd","stateDistCountTripuradeceased","stateDistCountNagalandaactive","stateDistCountNagalandarecoverd","stateDistCountNagalandadeceased","stateDistCountMeghalayaactive","stateDistCountMeghalayarecoverd","stateDistCountMeghalayadeceased","chartlabels","React","TabPanel","children","other","component","role","hidden","aria-labelledby","Box","p","a11yProps","flexGrow","palette","paper","ScrollableTabsButtonForce","setValue","AppBar","position","Tabs","onChange","event","newValue","scrollButtons","indicatorColor","textColor","centered","aria-label","Tab","icon","textTransform","confirmChild1","alignItem","confirmChild2","up","marginLeft","activeChild1","activeChild2","recoveredChild1","recoveredChild2","deceasedChild1","deceasedChild2","FirstGridRow","SecondGridRow","ThirdGridRow","FourthGridRow","statewisedata","marginRight","statechild","statechild2","covidsymbol","highsysmbol","padding","avgsysmbol","lowsysmbol","CountryStat","countryStat","setCountryStat","ConfirmCount","setConfirmCount","ActivityCount","setActivityCount","RecoveredCount","setRecoveredCount","DeceasedCount","setDeceasedCount","stat","statewise","deaths","deltaconfirmed","deltarecovered","deltadeaths","months","formatDate","unformattedDate","day","slice","month","year","time","appUpdateDiv","appUpdateFont1","appUpdateFont2","appUpdateFont3","appUpdateFont4","appUpdateFont5","ApplastUpdated","setStates","fetched","setFetched","lastUpdated","setLastUpdated","getStates","a","Promise","all","axios","get","response","lastupdatedtime","isNaN","Date","parse","formatDistance","formatDateAbsolute","banner_parent","banner","banner_text","Covidquotes","Quotes","setQuotes","setInterval","quotes","randomNum","Math","abs","floor","random","factoids","onClick","GlobalStat","isModelVisible","WorldCountries","WorldCountriesCopy","getWorldCountryCases","nextProp","isCountryModalVisible","catch","err","error","e","target","searchedResult","filter","country","toLowerCase","includes","InputBase","handleCountrySearch","placeholder","inputProps","IconButton","Divider","orientation","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","eachCountry","scope","countryInfo","iso2","countryCode","svg","todayCases","todayDeaths","cases","WorldMap","isMapModalVisible","DailyCovidNews","DailyCovid19News","getCovidNews","isNewsModalVisible","myHeaders","Headers","append","method","headers","redirect","news","List","News","ListItem","ListItemAvatar","Avatar","alt","src","ListItemText","primary","title","secondary","excerpt","href","ampWebUrl","navbar","boxShadow","darkmode_bg","globalstat","cursor","darkglobalstat","darknotibell","notibell","modeswitch","transform","darkmodeswitch","grow","text","inherit","darktitle","sectionDesktop","sectionMobile","connect","darkmode","DarkModeAction","dispatch","type","payload","NewsCount","setNewsCount","setModalVisible","setNewsModalVisible","mobileMoreAnchorEl","setMobileMoreAnchorEl","isMobileMenuOpen","Boolean","handleDarkMode","handleCountryRecords","handleCovidNews","renderMobileMenu","Menu","anchorEl","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","open","onClose","MenuItem","Badge","badgeContent","Toolbar","noWrap","aria-controls","aria-haspopup","currentTarget","darkapp","NavBar","window","location","hostname","match","initialState","combineReducers","action","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.1a119fbb.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './StateDetails.css';\r\nimport $ from 'jquery';\r\nimport Card from '@material-ui/core/Card';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport _ from 'lodash';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CountUp from 'react-countup';\r\n\r\n\r\nclass StateDetails extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      dynamicClassname:'extraCls',\r\n      sliderLog:'',\r\n      clearhandleautoslide:'',\r\n      StateWiseData:[],\r\n      StateTotalCases:[]\r\n    }\r\n  }\r\n  componentDidMount(){\r\n    this.fetchStatesDetails();\r\n  }\r\n  fetchStatesDetails(){\r\n    fetch('https://api.covid19india.org/state_district_wise.json')\r\n    .then(res => res.json())\r\n    .then(statewisedetails =>{ \r\n      this.setState({ StateWiseData : {...statewisedetails} })\r\n      const statesTotalCount = [\r\n        {\r\n          state: '',\r\n          Districts:{}\r\n        }\r\n      ];\r\n      const stateTotalCases = [\r\n        {\r\n          state:'',\r\n          TotalCases:0\r\n        }\r\n      ]\r\n      let stateDistCountKerala = 0;\r\n      let stateDistCountDelhi = 0;\r\n      let stateDistCountTelangana = 0;\r\n      let stateDistCountRajasthan = 0;\r\n      let stateDistCountHaryana =0;\r\n      let UttarPradesh =0;\r\n      let Ladakh =0;\r\n      let TamilNadu =0;\r\n      let JammuandKashmir =0;\r\n      let Karnataka =0;\r\n      let Maharashtra =0;\r\n      let Punjab =0;\r\n      let AndhraPradesh =0;\r\n      let Uttarakhand =0;\r\n      let Odisha =0;\r\n      let Puducherry =0;\r\n      let WestBengal =0;\r\n      let Chandigarh =0;\r\n      let Gujarat =0;\r\n      let HimachalPradesh =0;\r\n      let MadhyaPradesh =0;\r\n      let Bihar =0;\r\n      let Manipur =0;\r\n      let Mizoram =0;\r\n      let Goa =0;\r\n      let AndamanandNicobarIslands =0;\r\n      let Jharkhand =0;\r\n      let Assam =0;\r\n      let ArunachalPradesh =0;\r\n      let DadraandNagarHaveli =0;\r\n      let Tripura =0;\r\n      let Nagaland =0;\r\n      let Meghalaya =0;\r\n\r\n      for(let state in statewisedetails){\r\n        statesTotalCount.push({state:state,Districts:statewisedetails[state].districtData})\r\n      }\r\n      for(let i=1; i<statesTotalCount.length; i++){\r\n        for(let district in statesTotalCount[i].Districts){\r\n          if(statesTotalCount[i].state == statesTotalCount[i].state){\r\n              if(statesTotalCount[i].state == 'Kerala'){\r\n                stateDistCountKerala += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'Delhi'){\r\n                stateDistCountDelhi += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'Telangana'){\r\n                stateDistCountTelangana += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'Rajasthan'){\r\n                stateDistCountRajasthan += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'Haryana'){\r\n                stateDistCountHaryana += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'Uttar Pradesh'){\r\n                UttarPradesh += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'Ladakh'){\r\n                Ladakh += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'Tamil Nadu'){\r\n                TamilNadu += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'Jammu and Kashmir'){\r\n                JammuandKashmir += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'Karnataka'){\r\n                Karnataka += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'Maharashtra'){\r\n                Maharashtra += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'Punjab'){\r\n                Punjab += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'Andhra Pradesh'){\r\n                AndhraPradesh += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'Uttarakhand'){\r\n                Uttarakhand += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'Odisha'){\r\n                Odisha += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'Puducherry'){\r\n                Puducherry += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'West Bengal'){\r\n                WestBengal += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'Chandigarh'){\r\n                Chandigarh += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'Gujarat'){\r\n                Gujarat += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'Himachal Pradesh'){\r\n                HimachalPradesh += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'Madhya Pradesh'){\r\n                MadhyaPradesh += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'Bihar'){\r\n                Bihar += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'Manipur'){\r\n                Manipur += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'Mizoram'){\r\n                Mizoram += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'Goa'){\r\n                Goa += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'Andaman and Nicobar Islands'){\r\n                AndamanandNicobarIslands += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'Jharkhand'){\r\n                Jharkhand += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'Assam'){\r\n                Assam += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'Arunachal Pradesh'){\r\n                ArunachalPradesh += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'Dadra and Nagar Haveli'){\r\n                DadraandNagarHaveli += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'Tripura'){\r\n                Tripura += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'Nagaland'){\r\n                Nagaland += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'Meghalaya'){\r\n                Meghalaya += statesTotalCount[i].Districts[district].confirmed\r\n              }\r\n          }\r\n        }\r\n      }\r\n\r\n      const StateArray = [\r\n        {state:'Kerala',totalcases:stateDistCountKerala},\r\n        {state:'Delhi',totalcases:stateDistCountDelhi},\r\n        {state:'Telangana',totalcases:stateDistCountTelangana},\r\n        {state:'Rajasthan',totalcases:stateDistCountRajasthan},\r\n        {state:'Haryana',totalcases:stateDistCountHaryana},\r\n        {state:'UttarPradesh',totalcases:UttarPradesh},\r\n        {state:'Ladakh',totalcases:Ladakh},\r\n        {state:'TamilNadu',totalcases:TamilNadu},\r\n        {state:'JammuandKashmir',totalcases:JammuandKashmir},\r\n        {state:'Karnataka',totalcases:Karnataka},\r\n        {state:'Maharashtra',totalcases:Maharashtra},\r\n        {state:'Punjab',totalcases:Punjab},\r\n        {state:'AndhraPradesh',totalcases:AndhraPradesh},\r\n        {state:'Uttarakhand',totalcases:Uttarakhand},\r\n        {state:'Odisha',totalcases:Odisha},\r\n        {state:'Puducherry',totalcases:Puducherry},\r\n        {state:'WestBengal',totalcases:WestBengal},\r\n        {state:'Chandigarh',totalcases:Chandigarh},\r\n        {state:'Gujarat',totalcases:Gujarat},\r\n        {state:'HimachalPradesh',totalcases:HimachalPradesh},\r\n        {state:'MadhyaPradesh',totalcases:MadhyaPradesh},\r\n        {state:'Bihar',totalcases:Bihar},\r\n        {state:'Manipur',totalcases:Manipur},\r\n        {state:'Mizoram',totalcases:Mizoram},\r\n        {state:'Goa',totalcases:Goa},\r\n        {state:'AndamanandNicobarIslands',totalcases:AndamanandNicobarIslands},\r\n        {state:'Jharkhand',totalcases:Jharkhand},\r\n        {state:'Assam',totalcases:Assam},\r\n        {state:'ArunachalPradesh',totalcases:ArunachalPradesh},\r\n        {state:'DadraandNagarHaveli',totalcases:DadraandNagarHaveli},\r\n        {state:'Tripura',totalcases:Tripura},\r\n        {state:'Nagaland',totalcases:Nagaland},\r\n        {state:'Meghalaya',totalcases:Meghalaya},\r\n      ]\r\n      const topStates = [\r\n        {\r\n        state:'',\r\n        total:0\r\n        }\r\n      ];\r\n      this.setState({ StateTotalCases: StateArray})\r\n      this.state.StateTotalCases.map((item) =>{\r\n         if(item.totalcases > 1000)\r\n         {\r\n          topStates.push({state:item.state,total:item.totalcases})\r\n         }\r\n      })\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Grid container\r\n        justify=\"space-evenly\"\r\n        alignItems=\"center\"\r\n        >\r\n          <Grid item md={11}>\r\n            <Card variant=\"outlined\">\r\n              <CardContent>\r\n              <div style={{'display':'grid'}}>\r\n          <span style={{'width': '101%'}} className='covidsymbol'><span className='highsysmbol'></span>States above <big  className='stateTotal'>1000</big> covid cases.</span><span className='covidsymbol'><span className='avgsysmbol'></span>States above <big className='stateTotal'>500</big> covid cases.</span><span className='covidsymbol'><span className='lowsysmbol'></span>States below <big className='stateTotal'>100</big> covid cases.</span>\r\n        </div>\r\n                <Grid container  spacing={2}>\r\n\r\n                  {\r\n                    this.state.StateTotalCases.map((stateWiseDetails, index) =>{\r\n                        return <Grid item xs={6} md={2} key={index}>\r\n                                  <Card variant=\"outlined\">\r\n                                    <CardContent className={(stateWiseDetails.totalcases > 1000 )? 'highCases': (stateWiseDetails.totalcases < 100)? 'safeZone' : 'avrageCases'}>\r\n                                      <div>\r\n                                      <Typography  className='stateCards'>\r\n                                        {stateWiseDetails.state}\r\n                                      </Typography>\r\n                                      </div>\r\n                                      <div>\r\n                                      <Typography  className='statetotal'>\r\n                                      <CountUp end={stateWiseDetails.totalcases} duration={3.75} separator=\",\"></CountUp> \r\n                                      </Typography>\r\n                                      </div>\r\n                                    </CardContent>\r\n                                  </Card>\r\n                                </Grid>\r\n                    })\r\n                  }\r\n                </Grid>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default StateDetails;","import React, { useState,useEffect } from 'react';\r\nimport { ComposableMap, Geographies, Geography } from 'react-simple-maps';\r\nimport { scaleQuantile } from 'd3-scale';\r\nimport ReactTooltip from 'react-tooltip';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CountUp from 'react-countup';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst useStyles = makeStyles((theme) =>({\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    justifyContent : 'center',\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n      width: theme.spacing(12),\r\n      height: theme.spacing(10),\r\n      [theme.breakpoints.down('xs')]: {\r\n        margin: theme.spacing(1),\r\n        width: theme.spacing(7),\r\n        height: theme.spacing(7),\r\n      }\r\n\r\n    },\r\n  },\r\n  notavailable:{\r\n    fontSize: '12px !important'\r\n  },\r\n  confirm_paper:{\r\n    background: 'rgba(255,7,58,.12549) !important'\r\n  },\r\n  active_paper:{\r\n    background: '#E7F9FE'\r\n  },\r\n  recovered_paper:{\r\n    background: '#CDFFCD'\r\n  },\r\n  deceased_paper:{\r\n    background: '#E6E6E2'\r\n  },\r\n  state:{\r\n    color: '#007bff',\r\n    textAlign: 'center',\r\n    fontWeight: 900,\r\n    fontFamily: 'archia'\r\n  },\r\n  confirm:{\r\n    fontSize: '12px',\r\n    textAlign: 'center',\r\n    fontWeight: 900,\r\n    fontFamily: 'archia',\r\n    color: 'rgba(255,7,58,.6)',\r\n    marginTop: '12px',\r\n    [theme.breakpoints.down('xs')]: {\r\n      fontSize: '8px',\r\n    }\r\n  },\r\n  active:{\r\n    fontSize: '12px',\r\n    textAlign: 'center',\r\n    fontWeight: 900,\r\n    fontFamily: 'archia',\r\n    color: 'rgba(0,123,255,.6)',\r\n    marginTop: '12px',\r\n    [theme.breakpoints.down('xs')]: {\r\n      fontSize: '8px',\r\n    }\r\n  },\r\n  recovered:{\r\n    fontSize: '12px',\r\n    textAlign: 'center',\r\n    fontWeight: 900,\r\n    fontFamily: 'archia',\r\n    color: 'rgba(40,167,69,.6)',\r\n    marginTop: '12px',\r\n    [theme.breakpoints.down('xs')]: {\r\n      fontSize: '8px',\r\n    }\r\n  },\r\n  deceased:{\r\n    fontSize: '12px',\r\n    textAlign: 'center',\r\n    fontWeight: 900,\r\n    fontFamily: 'archia',\r\n    color: 'rgba(108,117,125,.6)',\r\n    marginTop: '12px',\r\n    [theme.breakpoints.down('xs')]: {\r\n      fontSize: '8px',\r\n    }\r\n  },\r\n  confirmCount:{\r\n    color: '#ff073a',\r\n    textAlign: 'center',\r\n    fontWeight: 900,\r\n    fontFamily: 'archia',\r\n    fontSize: '20px',\r\n    [theme.breakpoints.down('xs')]: {\r\n      fontSize: '14px',\r\n    }\r\n  },\r\n  activeCount:{\r\n    color: '#007bff',\r\n    textAlign: 'center',\r\n    fontWeight: 900,\r\n    fontFamily: 'archia',\r\n    fontSize: '20px',\r\n    [theme.breakpoints.down('xs')]: {\r\n      fontSize: '14px',\r\n    }\r\n  },\r\n  recoveredCount:{\r\n    color: '#28a745',\r\n    textAlign: 'center',\r\n    fontWeight: 900,\r\n    fontFamily: 'archia',\r\n    fontSize: '20px',\r\n    [theme.breakpoints.down('xs')]: {\r\n      fontSize: '14px',\r\n    }\r\n  },\r\n  decreasedCount:{\r\n    color: '#6c757d',\r\n    textAlign: 'center',\r\n    fontWeight: 900,\r\n    fontFamily: 'archia',\r\n    fontSize: '20px',\r\n    [theme.breakpoints.down('xs')]: {\r\n      fontSize: '14px',\r\n    }\r\n  },\r\n  GridRow: {\r\n    marginTop: '10px !important'\r\n  }\r\n}))\r\nconst INDIA_TOPO_JSON = require('./india.topo.json');\r\n\r\nconst PROJECTION_CONFIG = {\r\n  scale: 350,\r\n  center: [78.9629, 22.5937] \r\n};\r\n\r\n// Red Variants\r\nconst COLOR_RANGE = [\r\n  '#ffedea',\r\n  '#ffcec5',\r\n  '#ffad9f',\r\n  '#ff8a75',\r\n  '#ff5533',\r\n  '#e2492d',\r\n  '#be3d26',\r\n  '#9a311f',\r\n  '#782618'\r\n];\r\n\r\nconst DEFAULT_COLOR = '#EEE';\r\n\r\nconst getRandomInt = () => {\r\n  return parseInt(Math.random() * 100);\r\n};\r\n\r\nconst geographyStyle = {\r\n  default: {\r\n    outline: 'none'\r\n  },\r\n  hover: {\r\n    fill: '#ccc',\r\n    transition: 'all 250ms',\r\n    outline: 'none'\r\n  },\r\n  pressed: {\r\n    outline: 'none'\r\n  }\r\n};\r\n\r\nconst getHeatMapData = () => {\r\n  return [\r\n    { id: 'AP', state: 'Andhra Pradesh', value: 0 },\r\n    { id: 'AR', state: 'Arunachal Pradesh', value: 0 },\r\n    { id: 'AS', state: 'Assam', value: 0 },\r\n    { id: 'BR', state: 'Bihar', value: 0 },\r\n    { id: 'CT', state: 'Chhattisgarh', value: 0 },\r\n    { id: 'GA', state: 'Goa', value: 0 },\r\n    { id: 'GJ', state: 'Gujarat', value: 0 },\r\n    { id: 'HR', state: 'Haryana', value: 0 },\r\n    { id: 'HP', state: 'Himachal Pradesh', value: 0 },\r\n    { id: 'JH', state: 'Jharkhand', value: 0 },\r\n    { id: 'KA', state: 'Karnataka', value: 0 },\r\n    { id: 'KL', state: 'Kerala', value: 0 },\r\n    { id: 'MP', state: 'Madhya Pradesh', value: 0 },\r\n    { id: 'MH', state: 'Maharashtra', value: 0 },\r\n    { id: 'MN', state: 'Manipur', value: 0 },\r\n    { id: 'ML', state: 'Meghalaya', value: 0 },\r\n    { id: 'MZ', state: 'Mizoram', value: 0 },\r\n    { id: 'NL', state: 'Nagaland', value: 0 },\r\n    { id: 'OR', state: 'Odisha', value: 0 },\r\n    { id: 'PB', state: 'Punjab', value: 0 },\r\n    { id: 'RJ', state: 'Rajasthan', value: 0 },\r\n    { id: 'SK', state: 'Sikkim', value: 0 },\r\n    { id: 'TN', state: 'Tamil Nadu', value: 0 },\r\n    { id: 'TG', state: 'Telangana', value: 0 },\r\n    { id: 'TR', state: 'Tripura', value: 0 },\r\n    { id: 'UT', state: 'Uttarakhand', value: 0 },\r\n    { id: 'UP', state: 'Uttar Pradesh', value: 0 },\r\n    { id: 'WB', state: 'West Bengal', value: 0 },\r\n    { id: 'WB', state: 'West Bengal', value: 0 },\r\n    { id: 'AN', state: 'Andaman and Nicobar Islands', value: 0 },\r\n    { id: 'CH', state: 'Chandigarh', value: 0 },\r\n    { id: 'DN', state: 'Dadra and Nagar Haveli', value: 0 },\r\n    { id: 'DD', state: 'Daman and Diu', value: 0 },\r\n    { id: 'DL', state: 'Delhi', value: 0 },\r\n    { id: 'JK', state: 'Jammu and Kashmir', value: 0 },\r\n    { id: 'LA', state: 'Ladakh', value: 0 },\r\n    { id: 'LD', state: 'Lakshadweep', value: 0 },\r\n    { id: 'PY', state: 'Puducherry', value: 0 }\r\n  ];\r\n};\r\n\r\nfunction App(props) {\r\n\r\n  const classes = useStyles();\r\n  const [tooltipContent, setTooltipContent] = useState('');\r\n  const [stateContent, setstateContent] = useState('');\r\n  const [stateTotal,setstateTotal] = useState(0);\r\n  const [stateactiveTotal,setstateactiveTotal] = useState(0);\r\n  const [staterecoveredTotal,setstaterecoveredTotal] = useState(0);\r\n  const [statedeceasedTotal,setstatedeceasedTotal] = useState(0);\r\n\r\n\r\n  const [data, setData] = useState(getHeatMapData());\r\n\r\n  useEffect(()=>{\r\n      if(props.StateMapData.length !== 0){\r\n    const getHeatMapData2 = () => {\r\n        return [\r\n          { id: 'AP', state: 'Andhra Pradesh', value: props.StateMapData[12].totalcases,active:props.StateMapData[12].activetotal,recovered:props.StateMapData[12].recoveredtotal,deceased:props.StateMapData[12].deceasedtotal },\r\n          { id: 'AR', state: 'Arunachal Pradesh', value: props.StateMapData[28].totalcases,active:props.StateMapData[28].activetotal,recovered:props.StateMapData[28].recoveredtotal,deceased:props.StateMapData[28].deceasedtotal },\r\n          { id: 'AS', state: 'Assam', value: props.StateMapData[27].totalcases,active: props.StateMapData[27].activetotal,recovered: props.StateMapData[27].recoveredtotal,deceased: props.StateMapData[27].deceasedtotal },\r\n          { id: 'BR', state: 'Bihar', value: props.StateMapData[21].totalcases,active:props.StateMapData[21].activetotal,recovered:props.StateMapData[21].recoveredtotal,deceased:props.StateMapData[21].deceasedtotal },\r\n          // { id: 'CT', state: 'Chhattisgarh', value: props.StateMapData[17].totalcases,active:props.StateMapData[17].activetotal,recovered:props.StateMapData[17].recoveredtotal,deceased:props.StateMapData[17].deceasedtotal },\r\n          { id: 'GA', state: 'Goa', value: props.StateMapData[24].totalcases,active:props.StateMapData[24].activetotal,recovered:props.StateMapData[24].recoveredtotal,deceased:props.StateMapData[24].deceasedtotal },\r\n          { id: 'GJ', state: 'Gujarat', value: props.StateMapData[18].totalcases,active:props.StateMapData[18].activetotal,recovered:props.StateMapData[18].recoveredtotal,deceased:props.StateMapData[18].deceasedtotal },\r\n          { id: 'HR', state: 'Haryana', value: props.StateMapData[4].totalcases,active:props.StateMapData[4].activetotal,recovered:props.StateMapData[4].recoveredtotal,deceased:props.StateMapData[4].deceasedtotal },\r\n          { id: 'HP', state: 'Himachal Pradesh', value: props.StateMapData[19].totalcases,active:props.StateMapData[19].activetotal,recovered:props.StateMapData[19].recoveredtotal,deceased:props.StateMapData[19].deceasedtotal },\r\n          { id: 'JH', state: 'Jharkhand', value: props.StateMapData[26].totalcases,active:props.StateMapData[26].activetotal,recovered:props.StateMapData[26].recoveredtotal,deceased:props.StateMapData[26].deceasedtotal },\r\n          { id: 'KA', state: 'Karnataka', value: props.StateMapData[9].totalcases,active:props.StateMapData[9].activetotal,recovered:props.StateMapData[9].recoveredtotal,deceased:props.StateMapData[9].deceasedtotal },\r\n          { id: 'KL', state: 'Kerala', value: props.StateMapData[0].totalcases, active: props.StateMapData[0].activetotal, recovered: props.StateMapData[0].recoveredtotal,deceased: props.StateMapData[0].deceasedtotal},\r\n          { id: 'MP', state: 'Madhya Pradesh', value: props.StateMapData[20].totalcases,active:props.StateMapData[20].activetotal,recovered:props.StateMapData[20].recoveredtotal,deceased:props.StateMapData[20].deceasedtotal },\r\n          { id: 'MH', state: 'Maharashtra', value: props.StateMapData[10].totalcases,active:props.StateMapData[10].activetotal,recovered:props.StateMapData[10].recoveredtotal,deceased: props.StateMapData[10].deceasedtotal},\r\n          { id: 'MN', state: 'Manipur', value: props.StateMapData[22].totalcases,active:props.StateMapData[22].activetotal,recovered:props.StateMapData[22].recoveredtotal,deceased:props.StateMapData[22].deceasedtotal },\r\n          { id: 'ML', state: 'Meghalaya', value: props.StateMapData[32].totalcases,active:props.StateMapData[32].activetotal,recovered:props.StateMapData[32].recoveredtotal,deceased:props.StateMapData[32].deceasedtotal },\r\n          { id: 'MZ', state: 'Mizoram', value: props.StateMapData[23].totalcases,active:props.StateMapData[23].activetotal,recovered:props.StateMapData[23].recoveredtotal,deceased:props.StateMapData[23].deceasedtotal },\r\n          { id: 'NL', state: 'Nagaland', value: props.StateMapData[31].totalcases,active:props.StateMapData[31].activetotal,recovered:props.StateMapData[31].recoveredtotal,deceased:props.StateMapData[31].deceasedtotal },\r\n          { id: 'OR', state: 'Odisha', value: props.StateMapData[14].totalcases,active:props.StateMapData[14].activetotal,recovered:props.StateMapData[14].recoveredtotal,deceased:props.StateMapData[14].deceasedtotal || 0 },\r\n          { id: 'PB', state: 'Punjab', value: props.StateMapData[11].totalcases,active:props.StateMapData[11].activetotal,recovered:props.StateMapData[11].recoveredtotal,deceased:props.StateMapData[11].deceasedtotal },\r\n          { id: 'RJ', state: 'Rajasthan', value: props.StateMapData[3].totalcases,active:props.StateMapData[3].activetotal,recovered:props.StateMapData[3].recoveredtotal,deceased:props.StateMapData[3].deceasedtotal },\r\n          { id: 'SK', state: 'Sikkim', value: 'NA' },\r\n          { id: 'TN', state: 'Tamil Nadu', value: props.StateMapData[7].totalcases,active:props.StateMapData[7].activetotal,recovered:props.StateMapData[7].recoveredtotal,deceased:props.StateMapData[7].deceasedtotal },\r\n          { id: 'TG', state: 'Telangana', value: props.StateMapData[2].totalcases,active:props.StateMapData[2].activetotal,recovered:props.StateMapData[2].recoveredtotal,deceased:props.StateMapData[2].deceasedtotal },\r\n          { id: 'TR', state: 'Tripura', value: props.StateMapData[30].totalcases,active:props.StateMapData[30].activetotal,recovered:props.StateMapData[30].recoveredtotal,deceased: props.StateMapData[30].deceasedtotal},\r\n          { id: 'UT', state: 'Uttarakhand', value: props.StateMapData[13].totalcases,active:props.StateMapData[13].activetotal,recovered:props.StateMapData[13].recoveredtotal,deceased:props.StateMapData[13].deceasedtotal },\r\n          { id: 'UP', state: 'Uttar Pradesh', value: props.StateMapData[5].totalcases,active:props.StateMapData[5].activetotal,recovered:props.StateMapData[5].recoveredtotal,deceased:props.StateMapData[5].deceasedtotal },\r\n          { id: 'WB', state: 'West Bengal', value: props.StateMapData[16].totalcases,active:props.StateMapData[16].activetotal,recovered:props.StateMapData[16].recoveredtotal,deceased:props.StateMapData[16].deceasedtotal },\r\n          { id: 'AN', state: 'Andaman and Nicobar Islands', value: props.StateMapData[25].totalcases,active:props.StateMapData[25].activetotal,recovered:props.StateMapData[25].recoveredtotal,deceased:props.StateMapData[25].deceasedtotal },\r\n          { id: 'CH', state: 'Chandigarh', value: props.StateMapData[17].totalcases,active:props.StateMapData[17].activetotal,recovered:props.StateMapData[17].recoveredtotal,deceased:props.StateMapData[17].deceasedtotal },\r\n          { id: 'DN', state: 'Dadra and Nagar Haveli', value: props.StateMapData[29].totalcases,active:props.StateMapData[29].activetotal,recovered:props.StateMapData[29].recoveredtotal,deceased:props.StateMapData[29].deceasedtotal },\r\n          { id: 'DD', state: 'Daman and Diu', value: 'NA' },\r\n          { id: 'DL', state: 'Delhi', value: props.StateMapData[1].totalcases,active:props.StateMapData[1].activetotal,recovered:props.StateMapData[1].recoveredtotal,deceased:props.StateMapData[1].deceasedtotal },\r\n          { id: 'JK', state: 'Jammu and Kashmir', value: props.StateMapData[8].totalcases,active:props.StateMapData[8].activetotal,recovered:props.StateMapData[8].recoveredtotal,deceased:props.StateMapData[8].deceasedtotal },\r\n          { id: 'LA', state: 'Ladakh', value: props.StateMapData[6].totalcases,active:props.StateMapData[6].activetotal,recovered:props.StateMapData[6].recoveredtotal,deceased:props.StateMapData[6].deceasedtotal },\r\n          { id: 'LD', state: 'Lakshadweep', value: \"NA\" },\r\n          { id: 'PY', state: 'Puducherry', value: props.StateMapData[15].totalcases,active:props.StateMapData[15].activetotal,recovered:props.StateMapData[15].recoveredtotal,deceased:props.StateMapData[15].deceasedtotal }\r\n        ]\r\n      }\r\n      setData(getHeatMapData2());\r\n    }else{\r\n        console.log('undefined')\r\n    }\r\n  },[props]);\r\n\r\n  const gradientData = {\r\n    fromColor: COLOR_RANGE[0],\r\n    toColor: COLOR_RANGE[COLOR_RANGE.length - 1],\r\n    min: 0,\r\n    max: data.reduce((max, item) => (item.value > max ? item.value : max), 0)\r\n  };\r\n\r\n  const colorScale = scaleQuantile()\r\n    .domain(data.map(d => d.value))\r\n    .range(COLOR_RANGE);\r\n\r\n  const onMouseEnter = (geo, current = { value: 'NA' }) => {\r\n    return () => {\r\n      console.log('Mapped state',current)\r\n      setTooltipContent(`${geo.properties.name}: ${current.value}`);\r\n      setstateContent(`${geo.properties.name}`);\r\n      setstateTotal(`${current.value}`);\r\n      setstateactiveTotal(`${current.active}`);\r\n      setstaterecoveredTotal(`${current.recovered}`);\r\n      setstatedeceasedTotal(`${current.deceased}`);\r\n    };\r\n  };\r\n\r\n  const onMouseLeave = () => {\r\n    setTooltipContent('');\r\n  };\r\n\r\n  const onChangeButtonClick = () => {\r\n    setData(getHeatMapData());\r\n  };\r\n\r\n  return (\r\n    <div className=\"full-width-height container\">\r\n      <Grid container className={classes.GridRow}>\r\n        <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n        <div className={classes.root}>\r\n          <Paper elevation={0} className={classes.confirm_paper}>\r\n          <Typography variant=\"subtitle1\" className={classes.confirm} gutterBottom>Confirmed</Typography>\r\n          <Typography variant=\"subtitle1\" className={classes.confirmCount} gutterBottom>\r\n            {\r\n            (stateTotal == 'NA')?<span className={classes.notavailable}>Not Available</span>:<CountUp end={parseInt(stateTotal)} duration={3.75} separator=\",\"></CountUp> \r\n            }\r\n          </Typography>\r\n          </Paper>\r\n          <Paper elevation={0} className={classes.active_paper}>\r\n          <Typography variant=\"subtitle1\" className={classes.active} gutterBottom>Active</Typography>\r\n          <Typography variant=\"subtitle1\" className={classes.activeCount} gutterBottom>\r\n          {\r\n            (stateTotal == 'NA')?<span className={classes.notavailable}>Not Available</span>:<CountUp end={parseInt(stateactiveTotal)} duration={3.75} separator=\",\"></CountUp> \r\n          }\r\n            </Typography>\r\n          </Paper>\r\n          <Paper elevation={0} className={classes.recovered_paper}>\r\n          <Typography variant=\"subtitle1\" className={classes.recovered} gutterBottom>Recovered</Typography>\r\n          <Typography variant=\"subtitle1\" className={classes.recoveredCount} gutterBottom>\r\n          {\r\n            (stateTotal == 'NA')?<span className={classes.notavailable}>Not Available</span>:<CountUp end={parseInt(staterecoveredTotal)} duration={3.75} separator=\",\"></CountUp> \r\n          }\r\n            </Typography>\r\n          </Paper>\r\n          <Paper elevation={0} className={classes.deceased_paper}>\r\n          <Typography variant=\"subtitle1\" className={classes.deceased} gutterBottom>Deceased</Typography>\r\n          <Typography variant=\"subtitle1\" className={classes.decreasedCount} gutterBottom>\r\n          {\r\n            (stateTotal == 'NA')?<span className={classes.notavailable}>Not Available</span>:<CountUp end={parseInt(statedeceasedTotal)} duration={3.75} separator=\",\"></CountUp>  \r\n          }\r\n            </Typography>\r\n          </Paper>\r\n        </div>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid container className={classes.GridRow}>\r\n        <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n          <Typography variant=\"subtitle1\" className={classes.state} gutterBottom>{stateContent || 'No State Selected'}</Typography>\r\n        </Grid>\r\n      </Grid>\r\n      {/* <ReactTooltip>{tooltipContent}</ReactTooltip> */}\r\n        <ComposableMap\r\n          projectionConfig={PROJECTION_CONFIG}\r\n          projection=\"geoMercator\"\r\n          width={350}\r\n          height={190}\r\n          data-tip=\"\"\r\n        >\r\n          <Geographies geography={INDIA_TOPO_JSON}>\r\n            {({ geographies }) =>\r\n              geographies.map(geo => {\r\n                const current = data.find(s => s.id === geo.id);\r\n                return (\r\n                  <Geography\r\n                    key={geo.rsmKey}\r\n                    geography={geo}\r\n                    fill={current ? colorScale(current.value) : DEFAULT_COLOR}\r\n                    style={geographyStyle}\r\n                    onMouseEnter={onMouseEnter(geo, current)}\r\n                    onMouseLeave={onMouseLeave}\r\n                  />\r\n                );\r\n              })\r\n            }\r\n          </Geographies>\r\n        </ComposableMap>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport './StateDetails.css';\r\nimport { HorizontalBar,Bar } from 'react-chartjs-2';\r\nimport StatMap from '../StateMap/StateMap.js';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\n\r\nclass StateChart extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n          isVertical: true,\r\n          StateData:[],\r\n          data : {\r\n            labels: [],\r\n            datasets: [\r\n              {\r\n                label: 'States',\r\n                backgroundColor: '#FF4141',\r\n                borderColor: 'none',\r\n                borderWidth: 1,\r\n                hoverBackgroundColor: 'rgba(255,9,12,0.4)',\r\n                hoverBorderColor: 'rgba(255,9,12,1)',\r\n                data: []\r\n              }\r\n            ]\r\n          }\r\n        }\r\n        this.handelGraphToggle = this.handelGraphToggle.bind(this);\r\n    }\r\n    componentDidMount(){\r\n      this.fetchStatesDetails();\r\n    }\r\n    handelGraphToggle(){\r\n      if(this.state.isVertical == true){\r\n        this.setState({ isVertical: false })\r\n      }else if(this.state.isVertical == false){\r\n        this.setState({ isVertical: true })\r\n      }\r\n    }\r\n    fetchStatesDetails(){\r\n      fetch('https://api.covid19india.org/state_district_wise.json')\r\n      .then(res => res.json())\r\n      .then(statewisedetails =>{ \r\n        console.log('State records...',statewisedetails)\r\n        this.setState({ StateWiseData : {...statewisedetails} })\r\n        const statesTotalCount = [\r\n          {\r\n            state: '',\r\n            Districts:{}\r\n          }\r\n        ];\r\n        const stateTotalCases = [\r\n          {\r\n            state:'',\r\n            TotalCases:0\r\n          }\r\n        ]\r\n        //Kerela\r\n        let stateDistCountKerala = 0;\r\n        let stateDistCountKeralaactive = 0;\r\n        let stateDistCountKeralarecoverd = 0;\r\n        let stateDistCountKeraladeceased = 0;\r\n        //Delhi\r\n        let stateDistCountDelhi = 0;\r\n        let stateDistCountDelhiactive = 0;\r\n        let stateDistCountDelhirecoverd = 0;\r\n        let stateDistCountDelhideceased = 0;\r\n        //Telangana\r\n        let stateDistCountTelangana = 0;\r\n        let stateDistCountTelanganaactive = 0;\r\n        let stateDistCountTelanganarecoverd = 0;\r\n        let stateDistCountTelanganadeceased = 0;\r\n        //Rajasthan\r\n        let stateDistCountRajasthan = 0;\r\n        let stateDistCountRajasthanactive = 0; \r\n        let stateDistCountRajasthanrecoverd = 0; \r\n        let stateDistCountRajasthandeceased = 0; \r\n\r\n        //Haryana\r\n        let stateDistCountHaryana =0;\r\n        let stateDistCountHaryanaactive =0; \r\n        let stateDistCountHaryanarecoverd =0; \r\n        let stateDistCountHaryanadeceased =0; \r\n\r\n        //UttarPradesh\r\n        let UttarPradesh =0;\r\n        let stateDistCountUttarPradeshactive =0; \r\n        let stateDistCountUttarPradeshrecoverd =0; \r\n        let stateDistCountUttarPradeshdeceased =0; \r\n\r\n        //Ladakh\r\n        let Ladakh =0;\r\n        let stateDistCountLadakhactive =0; \r\n        let stateDistCountLadakhrecoverd =0; \r\n        let stateDistCountLadakhdeceased =0;\r\n        \r\n        //TamilNadu\r\n        let TamilNadu =0;\r\n        let stateDistCountTamilNaduactive =0; \r\n        let stateDistCountTamilNadurecoverd =0; \r\n        let stateDistCountTamilNadudeceased =0; \r\n\r\n        //JammuandKashmir\r\n        let JammuandKashmir =0;\r\n        let stateDistCountJammuandKashmiractive =0; \r\n        let stateDistCountJammuandKashmirrecoverd =0; \r\n        let stateDistCountJammuandKashmirdeceased =0; \r\n\r\n        //Karnataka\r\n        let Karnataka =0;\r\n        let stateDistCountKarnatakaactive =0; \r\n        let stateDistCountKarnatakarecoverd =0; \r\n        let stateDistCountKarnatakadeceased =0; \r\n\r\n        //Maharashtra\r\n        let Maharashtra =0;\r\n        let stateDistCountMaharashtraactive =0; \r\n        let stateDistCountMaharashtrarecoverd =0; \r\n        let stateDistCountMaharashtradeceased =0; \r\n\r\n        //Punjab\r\n        let Punjab =0;\r\n        let stateDistCountPunjabactive =0; \r\n        let stateDistCountPunjabrecoverd =0; \r\n        let stateDistCountPunjabdeceased =0; \r\n\r\n        //AndhraPradesh\r\n        let AndhraPradesh =0;\r\n        let stateDistCountAndhraPradeshactive =0; \r\n        let stateDistCountAndhraPradeshrecoverd =0; \r\n        let stateDistCountAndhraPradeshdeceased =0; \r\n\r\n        //Uttarakhand\r\n        let Uttarakhand =0;\r\n        let stateDistCountUttarakhandactive =0; \r\n        let stateDistCountUttarakhandrecoverd =0; \r\n        let stateDistCountUttarakhanddeceased =0;\r\n\r\n        //Odisha\r\n        let Odisha =0;\r\n        let stateDistCountOdishaactive =0; \r\n        let stateDistCountOdisharecoverd =0; \r\n        let stateDistCountOdishadeceased =0; \r\n\r\n        //Puducherry\r\n        let Puducherry =0;\r\n        let stateDistCountPuducherryactive =0; \r\n        let stateDistCountPuducherryrecoverd =0; \r\n        let stateDistCountPuducherrydeceased =0; \r\n\r\n        //WestBengal\r\n        let WestBengal =0;\r\n        let stateDistCountWestBengalactive =0;\r\n        let stateDistCountWestBengalrecoverd =0; \r\n        let stateDistCountWestBengaldeceased =0;\r\n\r\n        //Chandigarh\r\n        let Chandigarh =0;\r\n        let stateDistCountChandigarhactive =0; \r\n        let stateDistCountChandigarhrecoverd =0; \r\n        let stateDistCountChandigarhdeceased =0; \r\n\r\n        //Gujarat\r\n        let Gujarat =0;\r\n        let stateDistCountGujaratactive =0; \r\n        let stateDistCountGujaratrecoverd =0; \r\n        let stateDistCountGujaratdeceased =0;\r\n\r\n        //HimachalPradesh\r\n        let HimachalPradesh =0;\r\n        let stateDistCountHimachalPradeshactive =0; \r\n        let stateDistCountHimachalPradeshrecoverd =0; \r\n        let stateDistCountHimachalPradeshdeceased =0; \r\n\r\n        //MadhyaPradesh\r\n        let MadhyaPradesh =0;\r\n        let stateDistCountMadhyaPradeshactive =0; \r\n        let stateDistCountMadhyaPradeshrecoverd =0; \r\n        let stateDistCountMadhyaPradeshdeceased =0; \r\n\r\n        //Bihar\r\n        let Bihar =0;\r\n        let stateDistCountBiharactive =0; \r\n        let stateDistCountBiharrecoverd =0; \r\n        let stateDistCountBihardeceased =0; \r\n\r\n        //Manipur\r\n        let Manipur =0;\r\n        let stateDistCountManipuractive =0; \r\n        let stateDistCountManipurrecoverd =0; \r\n        let stateDistCountManipurdeceased =0;\r\n\r\n        //Mizoram\r\n        let Mizoram =0;\r\n        let stateDistCountMizoramactive =0; \r\n        let stateDistCountMizoramrecoverd =0; \r\n        let stateDistCountMizoramdeceased =0; \r\n\r\n        //Goa\r\n        let Goa =0;\r\n        let stateDistCountGoaactive =0; \r\n        let stateDistCountGoarecoverd =0; \r\n        let stateDistCountGoadeceased =0;\r\n\r\n        //AndamanandNicobarIslands\r\n        let AndamanandNicobarIslands =0;\r\n        let stateDistCountAndamanandNicobarIslandsactive =0; \r\n        let stateDistCountAndamanandNicobarIslandsrecoverd =0; \r\n        let stateDistCountAndamanandNicobarIslandsdeceased =0; \r\n\r\n        //Jharkhand\r\n        let Jharkhand =0;\r\n        let stateDistCountJharkhandactive =0; \r\n        let stateDistCountJharkhandrecoverd =0; \r\n        let stateDistCountJharkhanddeceased =0;\r\n\r\n        //Assam\r\n        let Assam =0;\r\n        let stateDistCountAssamactive =0; \r\n        let stateDistCountAssamrecoverd =0; \r\n        let stateDistCountAssamdeceased =0;\r\n\r\n        //ArunachalPradesh\r\n        let ArunachalPradesh =0;\r\n        let stateDistCountArunachalPradeshactive =0;\r\n        let stateDistCountArunachalPradeshrecoverd =0;\r\n        let stateDistCountArunachalPradeshdeceased =0;\r\n\r\n        //DadraandNagarHaveli\r\n        let DadraandNagarHaveli =0;\r\n        let stateDistCountDadraandNagarHaveliactive =0; \r\n        let stateDistCountDadraandNagarHavelirecoverd =0; \r\n        let stateDistCountDadraandNagarHavelideceased =0; \r\n\r\n        //Tripura\r\n        let Tripura =0;\r\n        let stateDistCountTripuraactive =0;\r\n        let stateDistCountTripurarecoverd =0;\r\n        let stateDistCountTripuradeceased =0;\r\n        //Nagaland\r\n        let Nagaland =0;\r\n        let stateDistCountNagalandaactive =0;\r\n        let stateDistCountNagalandarecoverd =0;\r\n        let stateDistCountNagalandadeceased =0;\r\n\r\n        //Meghalaya\r\n        let Meghalaya =0;\r\n        let stateDistCountMeghalayaactive =0; \r\n        let stateDistCountMeghalayarecoverd =0; \r\n        let stateDistCountMeghalayadeceased =0; \r\n  \r\n        for(let state in statewisedetails){\r\n          statesTotalCount.push({state:state,Districts:statewisedetails[state].districtData})\r\n        }\r\n        for(let i=1; i<statesTotalCount.length; i++){\r\n          for(let district in statesTotalCount[i].Districts){\r\n            if(statesTotalCount[i].state == statesTotalCount[i].state){\r\n                if(statesTotalCount[i].state == 'Kerala'){\r\n                  stateDistCountKerala += statesTotalCount[i].Districts[district].confirmed\r\n                  stateDistCountKeralaactive += statesTotalCount[i].Districts[district].active\r\n                  stateDistCountKeralarecoverd += statesTotalCount[i].Districts[district].recovered\r\n                  stateDistCountKeraladeceased += statesTotalCount[i].Districts[district].deceased\r\n                }else if(statesTotalCount[i].state == 'Delhi'){\r\n                  stateDistCountDelhi += statesTotalCount[i].Districts[district].confirmed\r\n                  stateDistCountDelhiactive += statesTotalCount[i].Districts[district].active\r\n                  stateDistCountDelhirecoverd += statesTotalCount[i].Districts[district].recovered\r\n                  stateDistCountDelhideceased += statesTotalCount[i].Districts[district].deceased\r\n                }else if(statesTotalCount[i].state == 'Telangana'){\r\n                  stateDistCountTelangana += statesTotalCount[i].Districts[district].confirmed\r\n                  stateDistCountTelanganaactive += statesTotalCount[i].Districts[district].active\r\n                  stateDistCountTelanganarecoverd += statesTotalCount[i].Districts[district].recovered\r\n                  stateDistCountTelanganadeceased += statesTotalCount[i].Districts[district].deceased\r\n                }else if(statesTotalCount[i].state == 'Rajasthan'){\r\n                  stateDistCountRajasthan += statesTotalCount[i].Districts[district].confirmed\r\n                  stateDistCountRajasthanactive += statesTotalCount[i].Districts[district].active\r\n                  stateDistCountRajasthanrecoverd += statesTotalCount[i].Districts[district].recovered\r\n                  stateDistCountRajasthandeceased += statesTotalCount[i].Districts[district].deceased\r\n                }else if(statesTotalCount[i].state == 'Haryana'){\r\n                  stateDistCountHaryana += statesTotalCount[i].Districts[district].confirmed\r\n                  stateDistCountHaryanaactive += statesTotalCount[i].Districts[district].active\r\n                  stateDistCountHaryanarecoverd += statesTotalCount[i].Districts[district].recovered\r\n                  stateDistCountHaryanadeceased += statesTotalCount[i].Districts[district].deceased\r\n                }else if(statesTotalCount[i].state == 'Uttar Pradesh'){\r\n                  UttarPradesh += statesTotalCount[i].Districts[district].confirmed\r\n                  stateDistCountUttarPradeshactive += statesTotalCount[i].Districts[district].active\r\n                  stateDistCountUttarPradeshrecoverd += statesTotalCount[i].Districts[district].recovered\r\n                  stateDistCountUttarPradeshdeceased += statesTotalCount[i].Districts[district].deceased\r\n                }else if(statesTotalCount[i].state == 'Ladakh'){\r\n                  Ladakh += statesTotalCount[i].Districts[district].confirmed\r\n                  stateDistCountLadakhactive += statesTotalCount[i].Districts[district].active\r\n                  stateDistCountLadakhrecoverd += statesTotalCount[i].Districts[district].recovered\r\n                  stateDistCountLadakhdeceased += statesTotalCount[i].Districts[district].deceased\r\n                }else if(statesTotalCount[i].state == 'Tamil Nadu'){\r\n                  TamilNadu += statesTotalCount[i].Districts[district].confirmed\r\n                  stateDistCountTamilNaduactive += statesTotalCount[i].Districts[district].active\r\n                  stateDistCountTamilNadurecoverd += statesTotalCount[i].Districts[district].recovered\r\n                  stateDistCountTamilNadudeceased += statesTotalCount[i].Districts[district].deceased\r\n                }else if(statesTotalCount[i].state == 'Jammu and Kashmir'){\r\n                  JammuandKashmir += statesTotalCount[i].Districts[district].confirmed\r\n                  stateDistCountJammuandKashmiractive += statesTotalCount[i].Districts[district].active\r\n                  stateDistCountJammuandKashmirrecoverd += statesTotalCount[i].Districts[district].recovered\r\n                  stateDistCountJammuandKashmirdeceased += statesTotalCount[i].Districts[district].deceased\r\n                }else if(statesTotalCount[i].state == 'Karnataka'){\r\n                  Karnataka += statesTotalCount[i].Districts[district].confirmed\r\n                  stateDistCountKarnatakaactive += statesTotalCount[i].Districts[district].active\r\n                  stateDistCountKarnatakarecoverd += statesTotalCount[i].Districts[district].recovered\r\n                  stateDistCountKarnatakadeceased += statesTotalCount[i].Districts[district].deceased\r\n                }else if(statesTotalCount[i].state == 'Maharashtra'){\r\n                  Maharashtra += statesTotalCount[i].Districts[district].confirmed\r\n                  stateDistCountMaharashtraactive += statesTotalCount[i].Districts[district].active\r\n                  stateDistCountMaharashtrarecoverd += statesTotalCount[i].Districts[district].recovered\r\n                  stateDistCountMaharashtradeceased += statesTotalCount[i].Districts[district].deceased\r\n                }else if(statesTotalCount[i].state == 'Punjab'){\r\n                  Punjab += statesTotalCount[i].Districts[district].confirmed\r\n                  stateDistCountPunjabactive += statesTotalCount[i].Districts[district].active\r\n                  stateDistCountPunjabrecoverd += statesTotalCount[i].Districts[district].recovered\r\n                  stateDistCountPunjabdeceased += statesTotalCount[i].Districts[district].deceased\r\n                }else if(statesTotalCount[i].state == 'Andhra Pradesh'){\r\n                  AndhraPradesh += statesTotalCount[i].Districts[district].confirmed\r\n                  stateDistCountAndhraPradeshactive += statesTotalCount[i].Districts[district].active\r\n                  stateDistCountAndhraPradeshrecoverd += statesTotalCount[i].Districts[district].recovered\r\n                  stateDistCountAndhraPradeshdeceased += statesTotalCount[i].Districts[district].deceased\r\n                }else if(statesTotalCount[i].state == 'Uttarakhand'){\r\n                  Uttarakhand += statesTotalCount[i].Districts[district].confirmed\r\n                  stateDistCountUttarakhandactive += statesTotalCount[i].Districts[district].active\r\n                  stateDistCountUttarakhandrecoverd += statesTotalCount[i].Districts[district].recovered\r\n                  stateDistCountUttarakhanddeceased += statesTotalCount[i].Districts[district].deceased\r\n                }else if(statesTotalCount[i].state == 'Odisha'){\r\n                  Odisha += statesTotalCount[i].Districts[district].confirmed\r\n                  stateDistCountOdishaactive += statesTotalCount[i].Districts[district].active\r\n                  stateDistCountOdisharecoverd += statesTotalCount[i].Districts[district].recovered\r\n                  stateDistCountOdishadeceased += statesTotalCount[i].Districts[district].deceased\r\n                }else if(statesTotalCount[i].state == 'Puducherry'){\r\n                  Puducherry += statesTotalCount[i].Districts[district].confirmed\r\n                  stateDistCountPuducherryactive += statesTotalCount[i].Districts[district].active\r\n                  stateDistCountPuducherryrecoverd += statesTotalCount[i].Districts[district].recovered\r\n                  stateDistCountPuducherrydeceased += statesTotalCount[i].Districts[district].deceased\r\n                }else if(statesTotalCount[i].state == 'West Bengal'){\r\n                  WestBengal += statesTotalCount[i].Districts[district].confirmed\r\n                  stateDistCountWestBengalactive += statesTotalCount[i].Districts[district].active\r\n                  stateDistCountWestBengalrecoverd += statesTotalCount[i].Districts[district].recovered\r\n                  stateDistCountWestBengaldeceased += statesTotalCount[i].Districts[district].deceased\r\n                }else if(statesTotalCount[i].state == 'Chandigarh'){\r\n                  Chandigarh += statesTotalCount[i].Districts[district].confirmed\r\n                  stateDistCountChandigarhactive += statesTotalCount[i].Districts[district].active\r\n                  stateDistCountChandigarhrecoverd += statesTotalCount[i].Districts[district].recovered\r\n                  stateDistCountChandigarhdeceased += statesTotalCount[i].Districts[district].deceased\r\n                }else if(statesTotalCount[i].state == 'Gujarat'){\r\n                  Gujarat += statesTotalCount[i].Districts[district].confirmed\r\n                  stateDistCountGujaratactive += statesTotalCount[i].Districts[district].active\r\n                  stateDistCountGujaratrecoverd += statesTotalCount[i].Districts[district].recovered\r\n                  stateDistCountGujaratdeceased += statesTotalCount[i].Districts[district].deceased\r\n                }else if(statesTotalCount[i].state == 'Himachal Pradesh'){\r\n                  HimachalPradesh += statesTotalCount[i].Districts[district].confirmed\r\n                  stateDistCountHimachalPradeshactive += statesTotalCount[i].Districts[district].active\r\n                  stateDistCountHimachalPradeshrecoverd += statesTotalCount[i].Districts[district].recovered\r\n                  stateDistCountHimachalPradeshdeceased += statesTotalCount[i].Districts[district].deceased\r\n                }else if(statesTotalCount[i].state == 'Madhya Pradesh'){\r\n                  MadhyaPradesh += statesTotalCount[i].Districts[district].confirmed\r\n                  stateDistCountMadhyaPradeshactive += statesTotalCount[i].Districts[district].active\r\n                  stateDistCountMadhyaPradeshrecoverd += statesTotalCount[i].Districts[district].recovered\r\n                  stateDistCountMadhyaPradeshdeceased += statesTotalCount[i].Districts[district].deceased\r\n                }else if(statesTotalCount[i].state == 'Bihar'){\r\n                  Bihar += statesTotalCount[i].Districts[district].confirmed\r\n                  stateDistCountBiharactive += statesTotalCount[i].Districts[district].active\r\n                  stateDistCountBiharrecoverd += statesTotalCount[i].Districts[district].recovered\r\n                  stateDistCountBihardeceased += statesTotalCount[i].Districts[district].deceased\r\n                }else if(statesTotalCount[i].state == 'Manipur'){\r\n                  Manipur += statesTotalCount[i].Districts[district].confirmed\r\n                  stateDistCountManipuractive += statesTotalCount[i].Districts[district].active\r\n                  stateDistCountManipurrecoverd += statesTotalCount[i].Districts[district].recovered\r\n                  stateDistCountManipurdeceased += statesTotalCount[i].Districts[district].deceased\r\n                }else if(statesTotalCount[i].state == 'Mizoram'){\r\n                  Mizoram += statesTotalCount[i].Districts[district].confirmed\r\n                  stateDistCountMizoramactive += statesTotalCount[i].Districts[district].active\r\n                  stateDistCountMizoramrecoverd += statesTotalCount[i].Districts[district].recovered\r\n                  stateDistCountMizoramdeceased += statesTotalCount[i].Districts[district].deceased\r\n                }else if(statesTotalCount[i].state == 'Goa'){\r\n                  Goa += statesTotalCount[i].Districts[district].confirmed\r\n                  stateDistCountGoaactive += statesTotalCount[i].Districts[district].active\r\n                  stateDistCountGoarecoverd += statesTotalCount[i].Districts[district].recovered\r\n                  stateDistCountGoadeceased += statesTotalCount[i].Districts[district].deceased\r\n                }else if(statesTotalCount[i].state == 'Andaman and Nicobar Islands'){\r\n                  AndamanandNicobarIslands += statesTotalCount[i].Districts[district].confirmed\r\n                  stateDistCountAndamanandNicobarIslandsactive += statesTotalCount[i].Districts[district].active\r\n                  stateDistCountAndamanandNicobarIslandsrecoverd += statesTotalCount[i].Districts[district].recovered\r\n                  stateDistCountAndamanandNicobarIslandsdeceased += statesTotalCount[i].Districts[district].deceased\r\n                }else if(statesTotalCount[i].state == 'Jharkhand'){\r\n                  Jharkhand += statesTotalCount[i].Districts[district].confirmed\r\n                  stateDistCountJharkhandactive += statesTotalCount[i].Districts[district].active\r\n                  stateDistCountJharkhandrecoverd += statesTotalCount[i].Districts[district].recovered\r\n                  stateDistCountJharkhanddeceased += statesTotalCount[i].Districts[district].deceased\r\n                }else if(statesTotalCount[i].state == 'Assam'){\r\n                  Assam += statesTotalCount[i].Districts[district].confirmed\r\n                  stateDistCountAssamactive += statesTotalCount[i].Districts[district].active\r\n                  stateDistCountAssamrecoverd += statesTotalCount[i].Districts[district].recovered\r\n                  stateDistCountAssamdeceased += statesTotalCount[i].Districts[district].deceased\r\n                }else if(statesTotalCount[i].state == 'Arunachal Pradesh'){\r\n                  ArunachalPradesh += statesTotalCount[i].Districts[district].confirmed\r\n                  stateDistCountArunachalPradeshactive += statesTotalCount[i].Districts[district].active\r\n                  stateDistCountArunachalPradeshrecoverd += statesTotalCount[i].Districts[district].recovered\r\n                  stateDistCountArunachalPradeshdeceased += statesTotalCount[i].Districts[district].deceased\r\n                }else if(statesTotalCount[i].state == 'Dadra and Nagar Haveli'){\r\n                  DadraandNagarHaveli += statesTotalCount[i].Districts[district].confirmed\r\n                  stateDistCountDadraandNagarHaveliactive += statesTotalCount[i].Districts[district].active\r\n                  stateDistCountDadraandNagarHavelirecoverd += statesTotalCount[i].Districts[district].recovered\r\n                  stateDistCountDadraandNagarHavelideceased += statesTotalCount[i].Districts[district].deceased\r\n                }else if(statesTotalCount[i].state == 'Tripura'){\r\n                  Tripura += statesTotalCount[i].Districts[district].confirmed\r\n                  stateDistCountTripuraactive += statesTotalCount[i].Districts[district].active\r\n                  stateDistCountTripurarecoverd += statesTotalCount[i].Districts[district].recovered\r\n                  stateDistCountTripuradeceased += statesTotalCount[i].Districts[district].deceased\r\n                }else if(statesTotalCount[i].state == 'Nagaland'){\r\n                  Nagaland += statesTotalCount[i].Districts[district].confirmed\r\n                  stateDistCountNagalandaactive += statesTotalCount[i].Districts[district].active\r\n                  stateDistCountNagalandarecoverd += statesTotalCount[i].Districts[district].recovered\r\n                  stateDistCountNagalandadeceased += statesTotalCount[i].Districts[district].deceased\r\n                }else if(statesTotalCount[i].state == 'Meghalaya'){\r\n                  Meghalaya += statesTotalCount[i].Districts[district].confirmed\r\n                  stateDistCountMeghalayaactive += statesTotalCount[i].Districts[district].active\r\n                  stateDistCountMeghalayarecoverd += statesTotalCount[i].Districts[district].recovered\r\n                  stateDistCountMeghalayadeceased += statesTotalCount[i].Districts[district].deceased\r\n                }\r\n            }\r\n          }\r\n        }\r\n        \r\n        const StateArray = [\r\n          {state:'Kerala',totalcases:stateDistCountKerala,activetotal:stateDistCountKeralaactive,recoveredtotal:stateDistCountKeralarecoverd,deceasedtotal:stateDistCountKeraladeceased},\r\n          {state:'Delhi',totalcases:stateDistCountDelhi,activetotal:stateDistCountDelhiactive,recoveredtotal:stateDistCountDelhirecoverd,deceasedtotal:stateDistCountDelhideceased},\r\n          {state:'Telangana',totalcases:stateDistCountTelangana,activetotal:stateDistCountTelanganaactive,recoveredtotal:stateDistCountTelanganarecoverd,deceasedtotal:stateDistCountTelanganadeceased},\r\n          {state:'Rajasthan',totalcases:stateDistCountRajasthan,activetotal:stateDistCountRajasthanactive,recoveredtotal:stateDistCountRajasthanrecoverd,deceasedtotal:stateDistCountRajasthandeceased},\r\n          {state:'Haryana',totalcases:stateDistCountHaryana,activetotal:stateDistCountHaryanaactive,recoveredtotal:stateDistCountHaryanarecoverd,deceasedtotal:stateDistCountHaryanadeceased},\r\n          {state:'UttarPradesh',totalcases:UttarPradesh,activetotal:stateDistCountUttarPradeshactive,recoveredtotal:stateDistCountUttarPradeshrecoverd,deceasedtotal:stateDistCountUttarPradeshdeceased},\r\n          {state:'Ladakh',totalcases:Ladakh,activetotal:stateDistCountLadakhactive,recoveredtotal:stateDistCountLadakhrecoverd,deceasedtotal:stateDistCountLadakhdeceased},\r\n          {state:'TamilNadu',totalcases:TamilNadu,activetotal:stateDistCountTamilNaduactive,recoveredtotal:stateDistCountTamilNadurecoverd,deceasedtotal:stateDistCountTamilNadudeceased},\r\n          {state:'JammuandKashmir',totalcases:JammuandKashmir,activetotal:stateDistCountJammuandKashmiractive,recoveredtotal:stateDistCountJammuandKashmirrecoverd,deceasedtotal:stateDistCountJammuandKashmirdeceased},\r\n          {state:'Karnataka',totalcases:Karnataka,activetotal:stateDistCountKarnatakaactive,recoveredtotal:stateDistCountKarnatakarecoverd,deceasedtotal:stateDistCountKarnatakadeceased},\r\n          {state:'Maharashtra',totalcases:Maharashtra,activetotal:stateDistCountMaharashtraactive,recoveredtotal:stateDistCountMaharashtrarecoverd,deceasedtotal:stateDistCountMaharashtradeceased},\r\n          {state:'Punjab',totalcases:Punjab,activetotal:stateDistCountPunjabactive,recoveredtotal:stateDistCountPunjabrecoverd,deceasedtotal:stateDistCountPunjabdeceased},\r\n          {state:'AndhraPradesh',totalcases:AndhraPradesh,activetotal:stateDistCountAndhraPradeshactive,recoveredtotal:stateDistCountAndhraPradeshrecoverd,deceasedtotal:stateDistCountAndhraPradeshdeceased},\r\n          {state:'Uttarakhand',totalcases:Uttarakhand,activetotal:stateDistCountUttarakhandactive,recoveredtotal:stateDistCountUttarakhandrecoverd,deceasedtotal:stateDistCountUttarakhanddeceased},\r\n          {state:'Odisha',totalcases:Odisha,activetotal:stateDistCountOdishaactive,recoveredtotal:stateDistCountOdisharecoverd,deceasedtotal:stateDistCountOdishadeceased},\r\n          {state:'Puducherry',totalcases:Puducherry,activetotal:stateDistCountPuducherryactive,recoveredtotal:stateDistCountPuducherryrecoverd,deceasedtotal:stateDistCountPuducherrydeceased},\r\n          {state:'WestBengal',totalcases:WestBengal,activetotal:stateDistCountWestBengalactive,recoveredtotal:stateDistCountWestBengalrecoverd,deceasedtotal:stateDistCountWestBengaldeceased},\r\n          {state:'Chandigarh',totalcases:Chandigarh,activetotal:stateDistCountChandigarhactive,recoveredtotal:stateDistCountChandigarhrecoverd,deceasedtotal:stateDistCountChandigarhdeceased},\r\n          {state:'Gujarat',totalcases:Gujarat,activetotal:stateDistCountGujaratactive,recoveredtotal:stateDistCountGujaratrecoverd,deceasedtotal:stateDistCountGujaratdeceased},\r\n          {state:'HimachalPradesh',totalcases:HimachalPradesh,activetotal:stateDistCountHimachalPradeshactive,recoveredtotal:stateDistCountHimachalPradeshrecoverd,deceasedtotal:stateDistCountHimachalPradeshdeceased},\r\n          {state:'MadhyaPradesh',totalcases:MadhyaPradesh,activetotal:stateDistCountMadhyaPradeshactive,recoveredtotal:stateDistCountMadhyaPradeshrecoverd,deceasedtotal:stateDistCountMadhyaPradeshdeceased},\r\n          {state:'Bihar',totalcases:Bihar,activetotal:stateDistCountBiharactive,recoveredtotal:stateDistCountBiharrecoverd,deceasedtotal:stateDistCountBihardeceased},\r\n          {state:'Manipur',totalcases:Manipur,activetotal:stateDistCountManipuractive,recoveredtotal:stateDistCountManipurrecoverd,deceasedtotal:stateDistCountManipurdeceased},\r\n          {state:'Mizoram',totalcases:Mizoram,activetotal:stateDistCountMizoramactive,recoveredtotal:stateDistCountMizoramrecoverd,deceasedtotal:stateDistCountMizoramdeceased},\r\n          {state:'Goa',totalcases:Goa,activetotal:stateDistCountGoaactive,recoveredtotal:stateDistCountGoarecoverd,deceasedtotal:stateDistCountGoadeceased},\r\n          {state:'AndamanandNicobarIslands',totalcases:AndamanandNicobarIslands,activetotal:stateDistCountAndamanandNicobarIslandsactive,recoveredtotal:stateDistCountAndamanandNicobarIslandsrecoverd,deceasedtotal:stateDistCountAndamanandNicobarIslandsdeceased},\r\n          {state:'Jharkhand',totalcases:Jharkhand,activetotal:stateDistCountJharkhandactive,recoveredtotal:stateDistCountJharkhandrecoverd,deceasedtotal:stateDistCountJharkhanddeceased},\r\n          {state:'Assam',totalcases:Assam,activetotal:stateDistCountAssamactive,recoveredtotal:stateDistCountAssamrecoverd,deceasedtotal:stateDistCountAssamdeceased},\r\n          {state:'ArunachalPradesh',totalcases:ArunachalPradesh,activetotal:stateDistCountArunachalPradeshactive,recoveredtotal:stateDistCountArunachalPradeshrecoverd,deceasedtotal:stateDistCountArunachalPradeshdeceased},\r\n          {state:'DadraandNagarHaveli',totalcases:DadraandNagarHaveli,activetotal:stateDistCountDadraandNagarHaveliactive,recoveredtotal:stateDistCountDadraandNagarHavelirecoverd,deceasedtotal:stateDistCountDadraandNagarHavelideceased},\r\n          {state:'Tripura',totalcases:Tripura,activetotal:stateDistCountTripuraactive,recoveredtotal:stateDistCountTripurarecoverd,deceasedtotal:stateDistCountTripuradeceased},\r\n          {state:'Nagaland',totalcases:Nagaland,activetotal:stateDistCountNagalandaactive,recoveredtotal:stateDistCountNagalandarecoverd,deceasedtotal:stateDistCountNagalandadeceased},\r\n          {state:'Meghalaya',totalcases:Meghalaya,activetotal:stateDistCountMeghalayaactive,recoveredtotal:stateDistCountMeghalayarecoverd,deceasedtotal:stateDistCountMeghalayadeceased},\r\n        ]\r\n        this.setState({ StateData: StateArray});\r\n        console.log('All Details State...',this.state.StateData)\r\n\r\n        let labels = [];\r\n        let totalcases = [];\r\n        StateArray.map((state) =>{\r\n          labels.push(state.state);\r\n          totalcases.push(state.totalcases);\r\n        })\r\n        var chartlabels = {...this.state.data}\r\n        chartlabels.labels = [...labels]\r\n        chartlabels.datasets[0].data = [...totalcases]\r\n        this.setState({ data : chartlabels})\r\n      })\r\n    }\r\n    render() {\r\n        return (\r\n          <React.Fragment>\r\n          <Grid item xs={12} sm={12} md={8} lg={12} xl={12}>  \r\n              <Typography variant=\"subtitle1\" className='statewisedata'  gutterBottom>\r\n                <div style={{'fontWeight': '600'}}>INDIA Map\r\n                  <span className='childtext'>Hover over a state/UT for more details</span>\r\n                </div>\r\n              </Typography>\r\n          </Grid>\r\n          {/* <span className='switch1'>INDIA Map</span> */}\r\n            <div className=\"BarGraph\">\r\n              <StatMap StateMapData={this.state.StateData} />\r\n            </div>\r\n          {/* <div className=\"switch\">\r\n            <input id=\"switch-1\" type=\"checkbox\" className=\"switch-input\" onChange={this.handelGraphToggle} />\r\n              <label htmlFor=\"switch-1\" className=\"switch-label\">Switch</label>\r\n              </div><span className='switch2'>Horizontal</span>\r\n              {\r\n                (this.state.isVertical)?\r\n                 <div className=\"BarGraph\">\r\n                  <StatMap StateMapData={this.state.StateData} />\r\n                <Bar\r\n                  data={this.state.data}\r\n                  width={1000}\r\n                  height={300}\r\n                  options={{\r\n                    scales :{\r\n                      yAxes:[{\r\n                        gridLines: {\r\n                          display : false\r\n                        }\r\n                      }],\r\n                      xAxes:[{\r\n                        gridLines: {\r\n                          display : false\r\n                        },\r\n                        display: false\r\n                      }]\r\n                    },\r\n                    maintainAspectRatio: false\r\n                  }}\r\n            />\r\n               </div> : <div className=\"BarGraph\"><HorizontalBar data={this.state.data} options={{\r\n                    scales :{\r\n                      yAxes:[{\r\n                        gridLines: {\r\n                          display : false\r\n                        }\r\n                      }],\r\n                      xAxes:[{\r\n                        gridLines: {\r\n                          display : false\r\n                        }\r\n                      }]\r\n                    },\r\n                    maintainAspectRatio: false\r\n                  }} /> \r\n                  </div>\r\n              } */}\r\n        \r\n          </React.Fragment>\r\n        );\r\n      }\r\n}\r\n\r\nexport default StateChart;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport NewReleasesIcon from '@material-ui/icons/NewReleases';\r\nimport NetworkCellIcon from '@material-ui/icons/NetworkCell';\r\nimport SignalCellularAltIcon from '@material-ui/icons/SignalCellularAlt';\r\nimport StateDetails from '../StateDetailsSlider/StateDetails.js';\r\nimport StateChart from '../StateDetailsSlider/StateChart.js';\r\nimport './Tab.css';\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <Typography\r\n      component=\"div\"\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`scrollable-force-tabpanel-${index}`}\r\n      aria-labelledby={`scrollable-force-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && <Box p={3}>{children}</Box>}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `scrollable-force-tab-${index}`,\r\n    'aria-controls': `scrollable-force-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    width: '100%',\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n}));\r\n\r\nexport default function ScrollableTabsButtonForce() {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(0);\r\n  const [ishorizontal, setHorizontal] = React.useState(false);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\" color=\"default\">\r\n        <Tabs\r\n          value={value}\r\n          onChange={handleChange}\r\n          scrollButtons=\"on\"\r\n          indicatorColor=\"primary\"\r\n          textColor=\"primary\"\r\n          centered\r\n          aria-label=\"scrollable force tabs example\"\r\n        >\r\n          <Tab label=\"Demographic\" icon={<NetworkCellIcon />} {...a11yProps(0)} />\r\n          <Tab label=\"Statistical\" icon={<SignalCellularAltIcon />} {...a11yProps(1)} />\r\n          <Tab label=\"Comming Soon...\" icon={<NewReleasesIcon />} {...a11yProps(2)} />\r\n        </Tabs>\r\n      </AppBar>\r\n      <TabPanel value={value} index={0}>\r\n        <StateChart />\r\n      </TabPanel>\r\n      <TabPanel value={value} index={1}>\r\n        <StateDetails />\r\n      </TabPanel>\r\n      <TabPanel value={value} index={2}>\r\n        Comming Soon...\r\n      </TabPanel>\r\n    </div>\r\n  );\r\n}","import React, { useState, useEffect } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport StateDetails from '../StateDetailsSlider/StateDetails.js';\r\nimport CountUp from 'react-countup';\r\nimport Tabs from '../TabPanel/Tabs.js';\r\nimport StatMap from '../StateMap/StateMap.js';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  confirm: {\r\n    color: 'rgba(255,7,58,.6)',\r\n    fontFamily: 'archia',\r\n    fontWeight: '900',\r\n    textTransform: 'uppercase',\r\n    fontSize: '12px !important',\r\n  },\r\n  confirmChild1: {\r\n    textAlign: 'center',\r\n    alignItem: 'center',\r\n    justifyContent: 'center',\r\n    marginTop: '.5rem',\r\n    color: 'rgba(255,7,58,.6)',\r\n    fontFamily: 'archia',\r\n    fontWeight: 900,\r\n    fontSize: '12px !important',\r\n    textTransform: 'uppercase'\r\n  },\r\n  confirmChild2: {\r\n    color: '#ff073a',\r\n    fontWeight: '600',\r\n    textAlign: 'center',\r\n    fontFamily: 'archia',\r\n    fontSize: '24px !important',\r\n    fontWeight: '900',\r\n    textTransform: 'uppercase'\r\n\r\n  },\r\n  active: {\r\n    color: 'rgba(0,123,255,.6)',\r\n    fontFamily: 'archia',\r\n    fontWeight: '900',\r\n    textTransform: 'uppercase',\r\n    fontSize: '12px !important',\r\n    [theme.breakpoints.up('xs')]: {\r\n      marginLeft: '20px'\r\n    }\r\n  },\r\n  activeChild1: {\r\n    textAlign: 'center',\r\n    alignItem: 'center',\r\n    justifyContent: 'center',\r\n    marginTop: '.5rem',\r\n    color: '#ffffff',\r\n    fontFamily: 'archia',\r\n    fontWeight: 900,\r\n    fontSize: '12px !important',\r\n    textTransform: 'uppercase'\r\n  },\r\n  activeChild2: {\r\n    color: '#007bff',\r\n    fontWeight: '600',\r\n    textAlign: 'center',\r\n    fontFamily: 'archia',\r\n    fontSize: '24px !important',\r\n    fontWeight: '900',\r\n    textTransform: 'uppercase'\r\n  },\r\n  recovered: {\r\n    color: 'rgba(40,167,69,.6)',\r\n    fontFamily: 'archia',\r\n    fontWeight: '900',\r\n    textTransform: 'uppercase',\r\n    fontSize: '12px !important',\r\n  },\r\n  recoveredChild1: {\r\n    textAlign: 'center',\r\n    alignItem: 'center',\r\n    justifyContent: 'center',\r\n    marginTop: '.5rem',\r\n    color: 'rgba(40,167,69,.6)',\r\n    fontFamily: 'archia',\r\n    fontWeight: 900,\r\n    fontSize: '12px !important',\r\n    textTransform: 'uppercase'\r\n  },\r\n  recoveredChild2: {\r\n    color: '#28a745',\r\n    fontWeight: '600',\r\n    textAlign: 'center',\r\n    fontFamily: 'archia',\r\n    fontSize: '24px !important',\r\n    fontWeight: '900',\r\n    textTransform: 'uppercase'\r\n\r\n  },\r\n  deceased: {\r\n    color: 'rgba(108,117,125,.6)',\r\n    fontFamily: 'archia',\r\n    fontWeight: '900',\r\n    textTransform: 'uppercase',\r\n    fontSize: '12px !important',\r\n  },\r\n  deceasedChild1: {\r\n    textAlign: 'center',\r\n    alignItem: 'center',\r\n    justifyContent: 'center',\r\n    marginTop: '.5rem',\r\n    color: 'rgba(108,117,125,.6)',\r\n    fontFamily: 'archia',\r\n    fontWeight: 900,\r\n    fontSize: '12px !important',\r\n    textTransform: 'uppercase'\r\n  },\r\n  deceasedChild2: {\r\n    color: '#6c757d',\r\n    fontWeight: '600',\r\n    textAlign: 'center',\r\n    fontFamily: 'archia',\r\n    fontSize: '24px !important',\r\n    fontWeight: '900',\r\n    textTransform: 'uppercase'\r\n\r\n  },\r\n  FirstGridRow: {\r\n    marginTop: '40px !important'\r\n  },\r\n  SecondGridRow: {\r\n    marginTop: '40px !important'\r\n  },\r\n  ThirdGridRow: {\r\n    marginTop: '40px !important'\r\n  },\r\n  FourthGridRow: {\r\n    marginTop: '0px',\r\n    [theme.breakpoints.up('xs')]: {\r\n      marginTop: '10px'\r\n    }\r\n  },\r\n  statewisedata:{\r\n      marginRight: '40px',\r\n      textAlign: 'center',\r\n      fontFamily: 'archia !important',\r\n      fontWeight: '900',\r\n      fontSize: '24px !important',\r\n      textTransform: 'uppercase',\r\n      color: '#343a40',\r\n      [theme.breakpoints.up('xs')]: {\r\n          marginTop: '20px'\r\n      }\r\n  },\r\n  statechild:{\r\n    color: 'rgba(108,117,125,.6)',\r\n    fontSize: '12px !important',\r\n    fontFamily: 'archia',\r\n    fontWeight: '900',\r\n    textTransform: 'uppercase',\r\n    marginLeft: '37px'\r\n  },\r\n  statechild2:{\r\n    color: '#4c75f2',\r\n    fontSize: '12px',\r\n    fontFamily: 'archia',\r\n    fontWeight: '900',\r\n    textTransform: 'uppercase',\r\n    marginLeft: '37px',\r\n    [theme.breakpoints.up('xs')]: {\r\n      marginLeft: '0px',\r\n      fontSize:'10px'\r\n  }\r\n  },\r\n  covidsymbol:{\r\n    fontSize: '10px'\r\n  },\r\n  highsysmbol:{\r\n    padding: '0px 6px 0px 6px',\r\n    background: '#FF9999',\r\n    marginRight: '6px'\r\n  },\r\n  avgsysmbol:{\r\n    padding: '0px 6px 0px 6px',\r\n    background: '#FCC88C',\r\n    marginRight: '6px'\r\n  },\r\n  lowsysmbol:{\r\n    padding: '0px 6px 0px 6px',\r\n    background: '#B1DC88',\r\n    marginRight: '6px'\r\n  },\r\n  stateTotal:{\r\n    color: '#46A4D1'\r\n  }\r\n}));\r\n\r\nconst CountryStat = () => {\r\n  const classes = useStyles();\r\n  const [countryStat, setCountryStat] = useState(0);\r\n  const [ConfirmCount, setConfirmCount] = useState(0);\r\n  const [ActivityCount, setActivityCount] = useState(0);\r\n  const [RecoveredCount, setRecoveredCount] = useState(0);\r\n  const [DeceasedCount, setDeceasedCount] = useState(0);\r\n\r\n  useEffect(() => {\r\n    fetch('https://api.covid19india.org/data.json')\r\n      .then(res => res.json())\r\n      .then((stat) =>{\r\n          setCountryStat(stat.statewise[0]);\r\n          setConfirmCount((function () {\r\n            let confirm = parseInt(stat.statewise[0].confirmed);\r\n              return confirm\r\n              // return stat.statewise[0].confirmed.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\r\n          })())\r\n          setActivityCount((function () {\r\n            let active = parseInt(stat.statewise[0].active);\r\n              return active\r\n          })())\r\n          setRecoveredCount((function () {\r\n            let recovered = parseInt(stat.statewise[0].recovered);\r\n              return recovered\r\n          })())\r\n          setDeceasedCount((function () {\r\n            let deaths = parseInt(stat.statewise[0].deaths);\r\n              return deaths\r\n          })())\r\n      })\r\n  }, []);\r\n  return (\r\n    <React.Fragment>\r\n      <Grid container\r\n        justify=\"space-evenly\"\r\n        alignItems=\"center\"\r\n        className={classes.FirstGridRow}\r\n      >\r\n        <Grid item>\r\n          <Typography variant=\"subtitle1\" className={classes.confirm} gutterBottom>\r\n            Confirmed\r\n          </Typography>\r\n          <div>\r\n            <Typography variant=\"subtitle1\" className={classes.confirmChild1} gutterBottom>\r\n              {'[' + '+' + countryStat.deltaconfirmed + ']'}\r\n            </Typography>\r\n          </div>\r\n          <div>\r\n            <Typography variant=\"subtitle1\" className={classes.confirmChild2} gutterBottom>\r\n             <CountUp end={ConfirmCount} duration={3.75} separator=\",\"></CountUp> \r\n            </Typography>\r\n          </div>\r\n        </Grid>\r\n        <Grid item>\r\n          <Typography variant=\"subtitle1\" className={classes.active} gutterBottom>\r\n            Active\r\n                </Typography>\r\n          <div>\r\n            <Typography variant=\"subtitle1\" className={classes.activeChild1} gutterBottom>\r\n              0\r\n                    </Typography>\r\n          </div>\r\n          <div>\r\n            <Typography variant=\"subtitle1\" className={classes.activeChild2} gutterBottom>\r\n              <CountUp end={ActivityCount} duration={3.75} separator=\",\"></CountUp> \r\n            </Typography>\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Grid container\r\n        justify=\"space-evenly\"\r\n        alignItems=\"center\"\r\n        className={classes.SecondGridRow}\r\n      >\r\n        <Grid item>\r\n          <Typography variant=\"subtitle1\" className={classes.recovered} gutterBottom>\r\n            Recovered\r\n                </Typography>\r\n          <div>\r\n            <Typography variant=\"subtitle1\" className={classes.recoveredChild1} gutterBottom>\r\n              {'[' + '+' + countryStat.deltarecovered + ']'}\r\n            </Typography>\r\n          </div>\r\n          <div>\r\n            <Typography variant=\"subtitle1\" className={classes.recoveredChild2} gutterBottom>\r\n              <CountUp end={RecoveredCount} duration={3.75} separator=\",\"></CountUp> \r\n            </Typography>\r\n          </div>\r\n        </Grid>\r\n        <Grid item>\r\n          <Typography variant=\"subtitle1\" className={classes.deceased} gutterBottom>\r\n            Deceased\r\n                </Typography>\r\n          <div>\r\n            <Typography variant=\"subtitle1\" className={classes.deceasedChild1} gutterBottom>\r\n              {'[' + '+' + countryStat.deltadeaths + ']'}\r\n            </Typography>\r\n          </div>\r\n          <div>\r\n            <Typography variant=\"subtitle1\" className={classes.deceasedChild2} gutterBottom>\r\n              <CountUp end={DeceasedCount} duration={3.75} separator=\",\"></CountUp> \r\n            </Typography>\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid container\r\n      className={classes.FourthGridRow}\r\n      >\r\n        <Grid item xs={12} sm={12} md={8} lg={12} xl={12}>  \r\n        <Typography variant=\"subtitle1\" className={classes.statewisedata}  gutterBottom>\r\n            <div>State Wise Data</div>\r\n            <div className={classes.statechild}>COMPILED FROM STATE GOVT. NUMBERS\r\n            {/* <div className={classes.statechild2}>CLICK ON ANY BELOW STATE TO KNOW MORE.</div> */}\r\n            </div>\r\n        </Typography>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid container className={classes.ThirdGridRow}>\r\n        <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n          <Tabs />\r\n        </Grid>\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default CountryStat;","import moment from 'moment';\r\n\r\nconst months = {\r\n  '01': 'Jan',\r\n  '02': 'Feb',\r\n  '03': 'Mar',\r\n  '04': 'Apr',\r\n  '05': 'May',\r\n  '06': 'Jun',\r\n  '07': 'Jul',\r\n  '08': 'Aug',\r\n  '09': 'Sep',\r\n  '10': 'Oct',\r\n  '11': 'Nov',\r\n  '12': 'Dec',\r\n};\r\n\r\nconst stateCodes = {\r\n  AP: 'Andhra Pradesh',\r\n  AR: 'Arunachal Pradesh',\r\n  AS: 'Assam',\r\n  BR: 'Bihar',\r\n  CT: 'Chhattisgarh',\r\n  GA: 'Goa',\r\n  GJ: 'Gujarat',\r\n  HR: 'Haryana',\r\n  HP: 'Himachal Pradesh',\r\n  JH: 'Jharkhand',\r\n  KA: 'Karnataka',\r\n  KL: 'Kerala',\r\n  MP: 'Madhya Pradesh',\r\n  MH: 'Maharashtra',\r\n  MN: 'Manipur',\r\n  ML: 'Meghalaya',\r\n  MZ: 'Mizoram',\r\n  NL: 'Nagaland',\r\n  OR: 'Odisha',\r\n  PB: 'Punjab',\r\n  RJ: 'Rajasthan',\r\n  SK: 'Sikkim',\r\n  TN: 'Tamil Nadu',\r\n  TG: 'Telangana',\r\n  TR: 'Tripura',\r\n  UT: 'Uttarakhand',\r\n  UP: 'Uttar Pradesh',\r\n  WB: 'West Bengal',\r\n  AN: 'Andaman and Nicobar Islands',\r\n  CH: 'Chandigarh',\r\n  DN: 'Dadra and Nagar Haveli',\r\n  DD: 'Daman and Diu',\r\n  DL: 'Delhi',\r\n  JK: 'Jammu and Kashmir',\r\n  LA: 'Ladakh',\r\n  LD: 'Lakshadweep',\r\n  PY: 'Puducherry',\r\n};\r\n\r\nexport const getStateName = (code) => {\r\n  return stateCodes[code.toUpperCase()];\r\n};\r\n\r\nexport const formatDate = (unformattedDate) => {\r\n  const day = unformattedDate.slice(0, 2);\r\n  const month = unformattedDate.slice(3, 5);\r\n  const year = unformattedDate.slice(6, 10);\r\n  const time = unformattedDate.slice(11);\r\n  return `${year}-${month}-${day}T${time}+05:30`;\r\n};\r\n\r\nexport const formatDateAbsolute = (unformattedDate) => {\r\n  const day = unformattedDate.slice(0, 2);\r\n  const month = unformattedDate.slice(3, 5);\r\n  const time = unformattedDate.slice(11);\r\n  return `${day} ${months[month]}, ${time.slice(0, 5)} IST`;\r\n};\r\n\r\nconst validateCTS = (data = []) => {\r\n  const today = new Date();\r\n  today.setHours(0, 0, 0, 0);\r\n  const dataTypes = [\r\n    'dailyconfirmed',\r\n    'dailydeceased',\r\n    'dailyrecovered',\r\n    'totalconfirmed',\r\n    'totaldeceased',\r\n    'totalrecovered',\r\n  ];\r\n  return data\r\n    .filter((d) => dataTypes.every((dt) => d[dt]) && d.date)\r\n    .filter((d) => dataTypes.every((dt) => Number(d[dt]) >= 0))\r\n    .filter((d) => {\r\n      const year = today.getFullYear();\r\n      return new Date(d.date + year) < today;\r\n    });\r\n};\r\n\r\nexport const preprocessTimeseries = (timeseries) => {\r\n  return validateCTS(timeseries).map((stat) => ({\r\n    date: new Date(stat.date + ' 2020'),\r\n    totalconfirmed: +stat.totalconfirmed,\r\n    totalrecovered: +stat.totalrecovered,\r\n    totaldeceased: +stat.totaldeceased,\r\n    dailyconfirmed: +stat.dailyconfirmed,\r\n    dailyrecovered: +stat.dailyrecovered,\r\n    dailydeceased: +stat.dailydeceased,\r\n  }));\r\n};\r\n\r\n/**\r\n * Returns the last `days` entries\r\n * @param {Array<Object>} timeseries\r\n * @param {number} days\r\n *\r\n * @return {Array<Object>}\r\n */\r\nexport function sliceTimeseriesFromEnd(timeseries, days) {\r\n  return timeseries.slice(-days);\r\n}\r\n\r\nexport const formatNumber = (value) => {\r\n  const numberFormatter = new Intl.NumberFormat('en-IN');\r\n  return isNaN(value) ? '-' : numberFormatter.format(value);\r\n};\r\n\r\nexport const parseStateTimeseries = ({states_daily: data}) => {\r\n  const statewiseSeries = Object.keys(stateCodes).reduce((a, c) => {\r\n    a[c] = [];\r\n    return a;\r\n  }, {});\r\n\r\n  const today = moment();\r\n  for (let i = 0; i < data.length; i += 3) {\r\n    const date = moment(data[i].date, 'DD-MMM-YY');\r\n    // Skip data from the current day\r\n    if (date.isBefore(today, 'Date')) {\r\n      Object.entries(statewiseSeries).forEach(([k, v]) => {\r\n        const stateCode = k.toLowerCase();\r\n        const prev = v[v.length - 1] || {};\r\n        v.push({\r\n          date: date.toDate(),\r\n          dailyconfirmed: +data[i][stateCode] || 0,\r\n          dailyrecovered: +data[i + 1][stateCode] || 0,\r\n          dailydeceased: +data[i + 2][stateCode] || 0,\r\n          totalconfirmed: +data[i][stateCode] + (prev.totalconfirmed || 0),\r\n          totalrecovered: +data[i + 1][stateCode] + (prev.totalrecovered || 0),\r\n          totaldeceased: +data[i + 2][stateCode] + (prev.totaldeceased || 0),\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n  return statewiseSeries;\r\n};","import React, {useState, useEffect, useRef, useCallback} from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport CountryStat from '../CountryStats/CountryStat.js';\r\nimport axios from 'axios';\r\nimport {formatDistance, format} from 'date-fns';\r\n\r\nimport {\r\n    formatDate,\r\n    formatDateAbsolute,\r\n  } from '../../utils/commom-functions.js';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    appUpdateDiv:{\r\n        alignItems: 'center',\r\n        justifyContent: 'center'\r\n    },\r\n    appUpdateFont1:{\r\n        fontFamily: 'archia !important',\r\n        fontWeight: '900',\r\n        textTransform: 'uppercase',\r\n        color: '#343a40',\r\n        [theme.breakpoints.up('xs')]: {\r\n            marginTop: '20px'\r\n          }\r\n    },\r\n    appUpdateFont2:{\r\n        fontFamily: 'archia !important',\r\n        fontWeight: '600',\r\n        fontSize: '11px!important',\r\n        textTransform: 'uppercase',\r\n        color: '#6c757d'\r\n    },\r\n    appUpdateFont3:{\r\n        fontFamily: 'archia !important',\r\n        color: 'rgba(40,167,69,.6) !important',\r\n        fontWeight: '900',\r\n        fontSize: '12px !important',\r\n        textTransform: 'uppercase',\r\n        [theme.breakpoints.up('md')]: {\r\n            marginLeft: '81px !important',\r\n            marginTop: '40px !important'\r\n          },\r\n        [theme.breakpoints.up('xs')]: {\r\n            marginTop: '5px',\r\n            marginLeft: '25px'\r\n          }\r\n    },\r\n    appUpdateFont4:{\r\n        fontFamily: 'archia !important',\r\n        color: 'rgb(40, 167, 69)',\r\n        fontWeight: '900',\r\n        fontSize: '14px !important',\r\n        textTransform: 'uppercase',\r\n        fontSize: '11px !important',\r\n        [theme.breakpoints.up('md')]: {\r\n            marginLeft: '74px !important',\r\n          },\r\n        [theme.breakpoints.up('xs')]: {\r\n            marginLeft: '-4px',\r\n            fontSize: '10px',\r\n          }\r\n    },\r\n    appUpdateFont5:{\r\n        fontFamily: 'archia !important',\r\n        color: 'rgb(40, 167, 69)',\r\n        fontWeight: '900',\r\n        textTransform: 'uppercase',\r\n        fontSize: '12px !important',\r\n        [theme.breakpoints.up('md')]: {\r\n            marginLeft: '68px !important'\r\n          },\r\n        [theme.breakpoints.up('xs')]: {\r\n            marginLeft: '10px',\r\n            fontSize: '10px',\r\n          }\r\n    }\r\n}));\r\n\r\nconst ApplastUpdated = () => {\r\n  const [states, setStates] = useState([]);\r\n  const [fetched, setFetched] = useState(false);\r\n  const [lastUpdated, setLastUpdated] = useState('');\r\n\r\n  useEffect(() => {\r\n    if (fetched === false) {\r\n      getStates();\r\n    }\r\n  }, [fetched]);\r\n\r\n  const getStates = async () => {\r\n    try {\r\n      const [\r\n        response,\r\n      ] = await Promise.all([\r\n        axios.get('https://api.covid19india.org/data.json'),\r\n      ]);\r\n      setStates(response.data.statewise);\r\n      setLastUpdated(response.data.statewise[0].lastupdatedtime);\r\n      setFetched(true);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n    const classes = useStyles();\r\n    return ( \r\n        <React.Fragment>\r\n            <Grid container className={classes.appUpdateDiv}>\r\n                <Grid item xs={7} sm={6} md={4} lg={6} xl={6}\r\n                >\r\n                    <Typography variant=\"h5\" className={classes.appUpdateFont1}>\r\n                        India COVID-19 Tracker\r\n                    </Typography>\r\n                    <Typography variant=\"h6\" className={classes.appUpdateFont2}>\r\n                        A Crowdsourced Initiative\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item xs={4} sm={6} md={3} lg={6} xl={6}> \r\n                    <Typography variant=\"h5\" className={classes.appUpdateFont3}>\r\n                        Last Updated\r\n                    </Typography>\r\n                    <Typography variant=\"h6\" className={classes.appUpdateFont4}>\r\n                    {isNaN(Date.parse(formatDate(lastUpdated)))\r\n                    ? ''\r\n                    : formatDistance(\r\n                        new Date(formatDate(lastUpdated)),\r\n                        new Date()\r\n                      ) + ' Ago'}\r\n                    </Typography>\r\n                    <Typography variant=\"h6\" className={classes.appUpdateFont5}>\r\n                    {isNaN(Date.parse(formatDate(lastUpdated)))\r\n                    ? ''\r\n                    : formatDateAbsolute(lastUpdated)}\r\n                    </Typography>\r\n                </Grid>\r\n            </Grid>\r\n            <CountryStat />\r\n        </React.Fragment>\r\n    );\r\n}\r\n \r\nexport default ApplastUpdated;","import React, { useState, useEffect } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ApplastUpdated from '../ApplastUpdated/AppUpdated.js';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    banner_parent:{\r\n        background: 'rgba(32,26,162,.12549)',\r\n        height: 'auto !important',\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    banner: {\r\n        textAlign: 'center',\r\n        margin: theme.spacing(3),\r\n    },\r\n    banner_text:{\r\n        fontFamily: 'archia !important',\r\n        fontSize: '.8rem !important',\r\n        fontWeight: '600',\r\n        color: 'rgba(32,26,162,.866667)'\r\n    }\r\n}));\r\nconst Covidquotes = (props) => {\r\n    const classes = useStyles();\r\n    const [Quotes, setQuotes] = useState('Stay Home, Stay Safe.');\r\n\r\n    useEffect(() =>{\r\n        setInterval(() =>{\r\n            fetch('https://api.covid19india.org/website_data.json')\r\n            .then(res => res.json())\r\n            .then(quotes => {\r\n                let randomNum = Math.abs(Math.floor(Math.random() * (1 - quotes.factoids.length) + 1));\r\n                setQuotes(quotes.factoids[randomNum].banner)})\r\n        },4000)\r\n    },[]);\r\n    const setNewQuote = () =>{\r\n        fetch('https://api.covid19india.org/website_data.json')\r\n            .then(res => res.json())\r\n            .then(quotes => {\r\n            let randomNum = Math.abs(Math.floor(Math.random() * (1 - quotes.factoids.length) + 1));\r\n            setQuotes(quotes.factoids[randomNum].banner)\r\n        })\r\n    }\r\n    return ( \r\n        <React.Fragment>\r\n            <Grid container className={classes.banner_parent} onClick={() => setNewQuote()}>\r\n                <Grid item xs={12} sm={12} md={12} lg={12} xl={12} className={classes.banner}>\r\n                    <Typography className={classes.banner_text}>\r\n                       {Quotes}\r\n                    </Typography>\r\n                </Grid>\r\n            </Grid>\r\n            <ApplastUpdated />\r\n        </React.Fragment>\r\n     );\r\n}\r\n\r\nexport default Covidquotes;","import React, { Component } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport './GlobalStat.css';\r\nimport ReactCountryFlag from \"react-country-flag\";\r\nimport CountUp from 'react-countup';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\n\r\n\r\n\r\nclass GlobalStat extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isModelVisible: false,\r\n            WorldCountries:[],\r\n            WorldCountriesCopy:[]\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        this.getWorldCountryCases()\r\n    }\r\n    componentWillReceiveProps(nextProp) {\r\n        if (nextProp.isCountryModalVisible) {\r\n            this.setState({ isModelVisible: nextProp.isCountryModalVisible })\r\n        } else {\r\n            this.setState({ isModelVisible: nextProp.isCountryModalVisible })\r\n        }\r\n    }\r\n    getWorldCountryCases(){\r\n        fetch('https://corona.lmao.ninja/v2/countries?sort=country')\r\n        .then(res => res.json())\r\n        .then((data) =>{\r\n            this.setState({ WorldCountries: data})\r\n            this.setState({ WorldCountriesCopy: data})\r\n        }).catch((err) =>{\r\n            console.error('Global Countries Records',err)\r\n        })\r\n    }\r\n    handleCountrySearch(e){\r\n        if(e.target.value !== ''){\r\n            let searchedResult = this.state.WorldCountries.filter((item) =>{\r\n                return item.country.toLowerCase().includes(e.target.value.toLowerCase())\r\n            })\r\n            this.setState({ WorldCountries:searchedResult})\r\n        }else{\r\n            this.setState({ WorldCountries:this.state.WorldCountriesCopy})\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <div className={(this.state.isModelVisible) ? 'CountriesModal ShowModal' : 'CountriesModal HideModal'}>\r\n                    <Grid container\r\n                        justify=\"space-evenly\"\r\n                        alignItems=\"center\"\r\n                    >\r\n                            <Paper component=\"form\" className='root'>\r\n                                <InputBase\r\n                                    onChange={this.handleCountrySearch.bind(this)}\r\n                                    className='input'\r\n                                    placeholder=\"Search Countries...\"\r\n                                    inputProps={{ 'aria-label': 'Search Countries...' }}\r\n                                />\r\n                                <IconButton className='iconButton' aria-label=\"search\">\r\n                                    <SearchIcon />\r\n                                </IconButton>\r\n                                <Divider className='divider' orientation=\"vertical\" />\r\n                            </Paper>\r\n                        <Grid item xs={12} md={12}>\r\n                        <TableContainer component={Paper} >\r\n                            <Table className='table' aria-label=\"simple table\">\r\n                                <TableHead>\r\n                                <TableRow xs={12}>\r\n                                    <TableCell style={{'fontFamily': 'archia'}} className='TableHead'>Sr.No</TableCell>\r\n                                    <TableCell style={{'fontFamily': 'archia'}} className='TableHead'>Countries</TableCell>\r\n                                    <TableCell style={{'fontFamily': 'archia'}} className='TableHead'>Name</TableCell>\r\n                                    <TableCell style={{'fontFamily': 'archia'}} className='TableHead countryTodaycases'>TodayCases</TableCell>\r\n                                    <TableCell style={{'fontFamily': 'archia'}} className='TableHead countryTodaydeathth'>TodayDeaths</TableCell>\r\n                                    <TableCell style={{'fontFamily': 'archia'}} className='TableHead countryConfirmed'>Confirmed</TableCell>\r\n                                    <TableCell style={{'fontFamily': 'archia'}} className='TableHead countryActive'>Active</TableCell>\r\n                                    <TableCell style={{'fontFamily': 'archia'}} style={{'fontFamily': 'archia'}}  className='TableHead countryRecovered'>Recovered</TableCell>\r\n                                    <TableCell style={{'fontFamily': 'archia'}} className='TableHead'>Dead</TableCell>\r\n                                </TableRow>\r\n                                </TableHead>\r\n                                <TableBody>\r\n                                {this.state.WorldCountries.map((eachCountry, index) => (\r\n                                    <TableRow key={index}>\r\n                                    <TableCell style={{'fontFamily': 'archia'}} className='countryNames'>{index + 1}</TableCell>\r\n                                    <TableCell component=\"th\" scope=\"row\">\r\n                                    { (!!eachCountry.countryInfo.iso2)?\r\n                                    <ReactCountryFlag\r\n                                        countryCode={eachCountry.countryInfo.iso2 || ''}\r\n                                        svg\r\n                                        style={{\r\n                                            width: '6em',\r\n                                            height: '1.8em',\r\n                                        }}\r\n                                    /> : <span className='Notavailable'>Not Available</span>\r\n                                    } \r\n                                    </TableCell>\r\n                                    <TableCell style={{'fontFamily': 'archia'}} className='countryNames'>{eachCountry.country}</TableCell>\r\n                                    <TableCell style={{'fontFamily': 'archia'}} className='countryTodaycase        textCenter'>{eachCountry.todayCases}</TableCell>\r\n                                    <TableCell style={{'fontFamily': 'archia'}} className='countryTodaydeath textCenter'>{eachCountry.todayDeaths}</TableCell>\r\n                                    <TableCell style={{'fontFamily': 'archia'}} className='confirmed textCenter'><CountUp end={eachCountry.cases} duration={3.75} separator=\",\"></CountUp></TableCell>\r\n                                    <TableCell style={{'fontFamily': 'archia'}} className='active textCenter'><CountUp end={eachCountry.active} duration={3.75} separator=\",\"></CountUp></TableCell>\r\n                                    <TableCell style={{'fontFamily': 'archia'}} className='recovered textCenter'><CountUp end={eachCountry.recovered} duration={3.75} separator=\",\"></CountUp></TableCell>\r\n                                    <TableCell style={{'fontFamily': 'archia'}} className='dead textCenter'><CountUp end={eachCountry.deaths} duration={3.75} separator=\",\"></CountUp></TableCell>\r\n                                    </TableRow>\r\n                                ))}\r\n                                </TableBody>\r\n                            </Table>\r\n                            </TableContainer>\r\n                        </Grid>\r\n                    </Grid>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default GlobalStat;","import React, { Component } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\n\r\n\r\nclass WorldMap extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            isModelVisible: false,\r\n         }\r\n    }\r\n    componentWillReceiveProps(nextProp){\r\n        if (nextProp.isMapModalVisible) {\r\n            this.setState({ isModelVisible: nextProp.isMapModalVisible })\r\n        } else {\r\n            this.setState({ isModelVisible: nextProp.isMapModalVisible })\r\n        }\r\n    }\r\n    render() { \r\n        return ( \r\n            <React.Fragment>\r\n                <div className={(this.state.isModelVisible) ? 'CountriesModal ShowModal' : 'CountriesModal HideModal'}>\r\n                    <Grid container\r\n                    justify=\"space-evenly\"\r\n                    alignItems=\"center\"\r\n                    >\r\n                        <Grid item xs={12} sm={12} md={11} lg={11} xl={11} >\r\n                            <Card variant=\"outlined\">\r\n                                <CardContent>\r\n                                   WorldMap\r\n                                </CardContent>\r\n                            </Card>\r\n                        </Grid>\r\n                    </Grid>\r\n                </div>\r\n            </React.Fragment>\r\n         );\r\n    }\r\n}\r\n \r\nexport default WorldMap;\r\n","import React, { Component } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport './DailyCovidNews.css';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { FixedSizeList } from 'react-window';\r\n\r\nclass DailyCovidNews extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isModelVisible: false,\r\n            DailyCovid19News:[]\r\n          }\r\n    }\r\n    componentDidMount(){\r\n        this.getCovidNews()\r\n    }\r\n    componentWillReceiveProps(nextProp){\r\n        if (nextProp.isNewsModalVisible) {\r\n            this.setState({ isModelVisible: nextProp.isNewsModalVisible })\r\n        } else {\r\n            this.setState({ isModelVisible: nextProp.isNewsModalVisible })\r\n        }\r\n    }\r\n    getCovidNews(){\r\n        var myHeaders = new Headers();\r\n        myHeaders.append(\"Subscription-Key\", \"3009d4ccc29e4808af1ccc25c69b4d5d\");\r\n\r\n        var requestOptions = {\r\n            method: 'GET',\r\n            headers: myHeaders,\r\n            redirect: 'follow'\r\n        };\r\n\r\n        fetch(\"https://api.smartable.ai/coronavirus/news/IN\", requestOptions)\r\n        .then(response => response.json())\r\n        .then((data) =>{\r\n            this.setState({ DailyCovid19News: data.news})\r\n        })\r\n        .catch(error => console.log('error', error));\r\n\r\n    }\r\n    render() { \r\n        return ( \r\n            <React.Fragment>\r\n                <div className={(this.state.isModelVisible) ? 'CountriesModal ShowModal' : 'CountriesModal HideModal'}>\r\n                    <Grid container \r\n                    justify=\"flex-end\"\r\n                    alignItems=\"center\"\r\n                    >\r\n                        <Grid item xs={12} sm={12} md={5} lg={11} xl={11} >\r\n                            <Card variant=\"outlined\" style={{'marginRight': '45px'}}>\r\n                                <CardContent>\r\n                                    <Typography className='cardheading' variant=\"subtitle2\" gutterBottom color=\"textSecondary\">\r\n                                        Daily Covid19 News.\r\n                                    </Typography>\r\n                                    <Divider />\r\n                                    <List className='root Newscard'  >\r\n                                        {(this.state.DailyCovid19News.length > 0)?\r\n                                            this.state.DailyCovid19News.map((News, index) =>(\r\n                                                <span key={index} >\r\n                                                <ListItem key={index} alignItems=\"flex-start\">\r\n                                                    <ListItemAvatar>\r\n                                                        <Avatar alt=\"Remy Sharp\" src=\"https://media1.s-nbcnews.com/j/newscms/2020_16/331…16p_23fe61bb653e3f82510a4d7face3a142.fit-560w.jpg\" />\r\n                                                    </ListItemAvatar>\r\n                                                    <ListItemText className='NewsTitle'\r\n                                                        primary={News.title}\r\n                                                        secondary={\r\n                                                            <React.Fragment>\r\n                                                                <Typography\r\n                                                                    component=\"span\"\r\n                                                                    variant=\"body2\"\r\n                                                                    className='inline'\r\n                                                                    color=\"textPrimary\"\r\n                                                                >\r\n                                                                    Excerpt\r\n                                                                </Typography>\r\n                                                                <span className='MainNews'>{' - '+News.excerpt}</span>\r\n                                                                <span className='NewsSource'>Sourcses -</span>\r\n                                                                <span><a href={News.ampWebUrl}>{(!!News.ampWebUrl)? News.ampWebUrl:'Not available'}</a></span>\r\n                                                            </React.Fragment>\r\n                                                        }\r\n                                                        \r\n                                                    />\r\n                                                </ListItem>\r\n                                                <Divider variant=\"inset\" component=\"li\" />\r\n                                                </span>\r\n                                            )) : <span>New not Available</span>\r\n                                        }\r\n                                    </List>\r\n                                </CardContent>\r\n                            </Card>\r\n                        </Grid>\r\n                    </Grid>\r\n                </div>\r\n            </React.Fragment>\r\n         );\r\n    }\r\n}\r\n \r\nexport default DailyCovidNews;\r\n\r\n\r\n","import React, { useState,useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport MoreIcon from '@material-ui/icons/MoreVert';\r\nimport Covidquotes from '../CovidQuotes/Covidquotes.js';\r\nimport LanguageSharpIcon from '@material-ui/icons/LanguageSharp';\r\nimport GlobalStat from '../../Components/GlobalStats/GlobalStat.js';\r\nimport PublicIcon from '@material-ui/icons/Public';\r\nimport WorldMap from '../../Components/WorldMap/Worldmap.js';\r\nimport DailyCovidNews from '../../Components/IndiaCovidNews/DaliyCovidNews.js';\r\nimport Brightness3Icon from '@material-ui/icons/Brightness2';\r\nimport WbSunnyIcon from '@material-ui/icons/WbSunny';\r\nimport { DarkModeAction } from '../../Actions/Dark_Mode.js';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  navbar:{\r\n    boxShadow: '1px 0px 1px black !important'\r\n  },\r\n  darkmode_bg:{\r\n    background : '#1e1e30 !important'\r\n  },\r\n  globalstat:{\r\n    marginTop: '12px',\r\n    cursor: 'pointer'\r\n  },\r\n  darkglobalstat:{\r\n    marginTop: '12px',\r\n    cursor: 'pointer',\r\n    color: '#fff'\r\n  },\r\n  darknotibell:{\r\n    color : 'yellow'\r\n  },\r\n  notibell:{\r\n    color : '#000'\r\n  },\r\n  modeswitch:{\r\n    transform: 'scaleX(-1)',\r\n    marginTop: '12px',\r\n    cursor: 'pointer',\r\n    marginRight: '14px'\r\n  },\r\n  darkmodeswitch:{\r\n    transform: 'scaleX(-1)',\r\n    marginTop: '12px',\r\n    cursor: 'pointer',\r\n    marginRight: '14px',\r\n    color: 'rgb(255, 193, 7)',\r\n  },\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  title: {\r\n    fontFamily: 'archia !important',\r\n    display: 'block',\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'block',\r\n    },\r\n    color: theme.palette.text.inherit,\r\n  },\r\n  darktitle:{\r\n    fontFamily: 'archia !important',\r\n    display: 'block',\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'block',\r\n    },\r\n    color: '#4c75f2 !important'\r\n  },\r\n  sectionDesktop: {\r\n    display: 'none',\r\n    [theme.breakpoints.up('md')]: {\r\n      display: 'flex',\r\n    },\r\n  },\r\n  sectionMobile: {\r\n    display: 'flex',\r\n    [theme.breakpoints.up('md')]: {\r\n      display: 'none',\r\n    },\r\n  },\r\n}));\r\nconst PrimarySearchAppBar =  (props) => {\r\n  const classes = useStyles();\r\n  const [NewsCount, setNewsCount] = useState(0);\r\n  const [isCountryModalVisible, setModalVisible] = useState(false);\r\n  const [isMapModalVisible, setMapModalVisible] = useState(false);\r\n  const [isNewsModalVisible, setNewsModalVisible] = useState(false);\r\n\r\n  useEffect(() =>{\r\n    var myHeaders = new Headers();\r\n    myHeaders.append(\"Subscription-Key\", \"3009d4ccc29e4808af1ccc25c69b4d5d\");\r\n    var requestOptions = {\r\n        method: 'GET',\r\n        headers: myHeaders,\r\n        redirect: 'follow'\r\n    };\r\n    fetch(\"https://api.smartable.ai/coronavirus/news/IN\", requestOptions)\r\n    .then(response => response.json())\r\n    .then((data) =>{\r\n      setNewsCount(data.news.length)\r\n    })\r\n    .catch(error => console.log('error', error));\r\n  },[])\r\n\r\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\r\n\r\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\r\n\r\n  const handleMobileMenuClose = () => {\r\n    setMobileMoreAnchorEl(null);\r\n  };\r\n\r\n  const handleMobileMenuOpen = (event) => {\r\n    setMobileMoreAnchorEl(event.currentTarget);\r\n  };\r\n  const handleMapVisible = () =>{\r\n    if(isMapModalVisible){\r\n      setMapModalVisible(false)\r\n    }else{\r\n      setMapModalVisible(true)\r\n    }\r\n  }\r\n  const handleDarkMode = () =>{\r\n    if(props.darkmode == false){\r\n      props.DarkModeAction(true)\r\n    }else if(props.darkmode == true){\r\n      props.DarkModeAction(false)\r\n    }\r\n  }\r\n  const handleCountryRecords = () =>{\r\n    if(isCountryModalVisible){\r\n      setModalVisible(false)\r\n    }else{\r\n      setModalVisible(true)\r\n    }\r\n  }\r\n  const handleCovidNews = () =>{\r\n    if(isNewsModalVisible){\r\n      setNewsModalVisible(false)\r\n    }else{\r\n      setNewsModalVisible(true)\r\n    }\r\n  }\r\n  const mobileMenuId = 'primary-search-account-menu-mobile';\r\n  const renderMobileMenu = (\r\n    <Menu\r\n      anchorEl={mobileMoreAnchorEl}\r\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      id={mobileMenuId}\r\n      keepMounted\r\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      open={isMobileMenuOpen}\r\n      onClose={handleMobileMenuClose}\r\n    >\r\n      <MenuItem>\r\n        <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\r\n          <Badge badgeContent={4} color=\"secondary\">\r\n            <MailIcon />\r\n          </Badge>\r\n        </IconButton>\r\n        <p>Messages</p>\r\n      </MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  return (\r\n    <div className={classes.grow}>\r\n      <AppBar position=\"static\" color=\"inherit\" className={classes.navbar}>\r\n        <Toolbar className={(props.darkmode)?classes.darkmode_bg : ''}>\r\n          <Typography className={(props.darkmode)?classes.darktitle : classes.title}  variant=\"h6\" noWrap>\r\n            Covid-19\r\n          </Typography>\r\n          <div className={classes.grow} />\r\n          <div className={classes.sectionDesktop}>\r\n            <div onClick={()=>handleDarkMode()} className={(props.darkmode)?classes.darkmodeswitch : classes.modeswitch}  >\r\n              {\r\n                (props.darkmode == false)?<Brightness3Icon /> : <WbSunnyIcon />\r\n              }      \r\n            </div>\r\n            <div onClick={()=>handleCountryRecords()} className={(props.darkmode)?classes.darkglobalstat : classes.globalstat}>\r\n              <LanguageSharpIcon />\r\n            </div>\r\n            <div onClick={()=>handleCovidNews()} >\r\n              <IconButton aria-label=\"show new notifications\" className={(props.darkmode)?classes.darknotibell : classes.notibell}>\r\n                <Badge badgeContent={NewsCount} color=\"secondary\">\r\n                  <NotificationsIcon />\r\n                </Badge>\r\n              </IconButton>\r\n            </div>\r\n          </div>\r\n          <div className={classes.sectionMobile}>\r\n          <div onClick={()=>handleDarkMode()} className={(props.darkmode)?classes.darkmodeswitch : classes.modeswitch}  >\r\n              <Brightness3Icon />\r\n            </div>\r\n            <div onClick={()=>handleCountryRecords()} className={(props.darkmode)?classes.darkglobalstat : classes.globalstat}  >\r\n              <LanguageSharpIcon />\r\n            </div>\r\n            <div onClick={()=>handleCovidNews()}>\r\n            <IconButton aria-label=\"show 11 new notifications\" className={(props.darkmode)?classes.darknotibell : classes.notibell}>\r\n              <Badge badgeContent={11} color=\"secondary\">\r\n                <NotificationsIcon />\r\n              </Badge>\r\n            </IconButton>\r\n          </div>\r\n            <IconButton\r\n              aria-label=\"show more\"\r\n              aria-controls={mobileMenuId}\r\n              aria-haspopup=\"true\"\r\n              onClick={handleMobileMenuOpen}\r\n              color=\"inherit\"\r\n            >\r\n              <MoreIcon />\r\n            </IconButton>\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <DailyCovidNews isNewsModalVisible={isNewsModalVisible} />\r\n      <WorldMap isMapModalVisible={isMapModalVisible} />\r\n      <GlobalStat isCountryModalVisible={isCountryModalVisible} />\r\n      <Covidquotes />\r\n      {renderMobileMenu}\r\n    </div>\r\n  );\r\n}\r\nconst mapStateToProps = (state) =>{\r\n  return {\r\n      darkmode : state.response.darkmode\r\n  }\r\n}\r\nexport default connect(mapStateToProps, { DarkModeAction })(PrimarySearchAppBar);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import { DARK_MODE } from './type.js';\r\n\r\nexport const DarkModeAction = (darkmode) => dispatch =>{\r\n    console.log('Dark Mode Action...',darkmode)\r\n    dispatch({type: DARK_MODE, payload: darkmode})\r\n}","export const FETCH_QUOTES = 'FETCH_QUOTES';\r\nexport const FETCH_COVID19_NEWS =  'FETCH_COVID19_NEWS';\r\nexport const DARK_MODE = 'DARK_MODE';\r\n","import React from 'react';\nimport './App.css';\nimport NavBar  from '../src/Components/NavBar/NavBar.js';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { connect } from 'react-redux';\n\n\nconst useStyles = makeStyles((theme) => ({\n  darkapp:{\n    background : '#161625 !important'\n  }\n}))\n\nconst App = (props) => {\n  console.log('Dark mode in app',props)\n  const classes = useStyles();\n  return (\n    <div className={(props.darkmode)?classes.darkapp : 'App'}>\n      <NavBar />\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) =>{\n  return {\n      darkmode : state.response.darkmode\n  }\n}\nexport default connect(mapStateToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { DARK_MODE } from '../Actions/type.js';\r\n\r\nconst initialState = {\r\n    darkmode:false\r\n}\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case DARK_MODE:\r\n            console.log(\"Dark mode Reducer...\")\r\n            return {\r\n                ...state,\r\n                darkmode: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from 'redux';\r\nimport DarkMode from  './DarkModeReducer.js';\r\n\r\nexport default combineReducers({\r\n    response: DarkMode\r\n});","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './Reducers';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(rootReducer, initialState, compose( \r\n    applyMiddleware(...middleware),\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__() || compose\r\n));\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}