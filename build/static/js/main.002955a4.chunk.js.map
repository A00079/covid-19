{"version":3,"sources":["Components/StateDetailsSlider/StateDetails.js","Components/CountryStats/CountryStat.js","utils/commom-functions.js","Components/ApplastUpdated/AppUpdated.js","Components/CovidQuotes/Covidquotes.js","Components/NavBar/NavBar.js","App.js","serviceWorker.js","Reducers/index.js","store.js","index.js"],"names":["StateDetails","props","state","dynamicClassname","sliderLog","clearhandleautoslide","StateWiseData","StateTotalCases","this","fetchStatesDetails","fetch","then","res","json","statewisedetails","setState","statesTotalCount","Districts","stateDistCountKerala","stateDistCountDelhi","stateDistCountTelangana","stateDistCountRajasthan","stateDistCountHaryana","UttarPradesh","Ladakh","TamilNadu","JammuandKashmir","Karnataka","Maharashtra","Punjab","AndhraPradesh","Uttarakhand","Odisha","Puducherry","WestBengal","Chandigarh","Gujarat","HimachalPradesh","MadhyaPradesh","Bihar","Manipur","Mizoram","Goa","AndamanandNicobarIslands","Jharkhand","Assam","ArunachalPradesh","DadraandNagarHaveli","Tripura","Nagaland","Meghalaya","push","districtData","i","length","district","confirmed","StateArray","totalcases","console","log","Fragment","Grid","container","justify","alignItems","item","md","Card","variant","CardContent","spacing","map","stateWiseDetails","index","xs","key","className","Typography","end","duration","separator","Component","useStyles","makeStyles","theme","root","flexGrow","confirm","color","fontFamily","fontWeight","textTransform","fontSize","confirmChild1","textAlign","alignItem","justifyContent","marginTop","confirmChild2","active","breakpoints","up","marginLeft","activeChild1","activeChild2","recovered","recoveredChild1","recoveredChild2","deceased","deceasedChild1","deceasedChild2","FirstGridRow","SecondGridRow","ThirdGridRow","FourthGridRow","statewisedata","marginRight","statechild","statechild2","CountryStat","classes","useState","countryStat","setCountryStat","ConfirmCount","setConfirmCount","ActivityCount","setActivityCount","RecoveredCount","setRecoveredCount","DeceasedCount","setDeceasedCount","useEffect","stat","statewise","parseInt","deaths","gutterBottom","deltaconfirmed","deltarecovered","deltadeaths","sm","lg","xl","months","formatDate","unformattedDate","day","slice","month","year","time","appUpdateDiv","appUpdateFont1","appUpdateFont2","appUpdateFont3","appUpdateFont4","appUpdateFont5","ApplastUpdated","setStates","fetched","setFetched","lastUpdated","setLastUpdated","getStates","a","Promise","all","axios","get","response","data","lastupdatedtime","isNaN","Date","parse","formatDistance","formatDateAbsolute","banner_parent","background","height","banner","margin","banner_text","Covidquotes","Quotes","setQuotes","setInterval","quotes","randomNum","Math","abs","floor","random","factoids","onClick","navbar","boxShadow","grow","title","display","palette","text","inherit","sectionDesktop","sectionMobile","PrimarySearchAppBar","React","mobileMoreAnchorEl","setMobileMoreAnchorEl","isMobileMenuOpen","Boolean","renderMobileMenu","Menu","anchorEl","anchorOrigin","vertical","horizontal","id","keepMounted","transformOrigin","open","onClose","MenuItem","IconButton","aria-label","Badge","badgeContent","AppBar","position","Toolbar","noWrap","aria-controls","aria-haspopup","event","currentTarget","App","NavBar","window","location","hostname","match","combineReducers","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.002955a4.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './StateDetails.css';\r\nimport $ from 'jquery';\r\nimport Card from '@material-ui/core/Card';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport _ from 'lodash';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CountUp from 'react-countup';\r\n\r\n\r\nclass StateDetails extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      dynamicClassname:'extraCls',\r\n      sliderLog:'',\r\n      clearhandleautoslide:'',\r\n      StateWiseData:[],\r\n      StateTotalCases:[]\r\n    }\r\n  }\r\n  componentDidMount(){\r\n    this.fetchStatesDetails();\r\n  }\r\n  fetchStatesDetails(){\r\n    fetch('https://api.covid19india.org/state_district_wise.json')\r\n    .then(res => res.json())\r\n    .then(statewisedetails =>{ \r\n      this.setState({ StateWiseData : {...statewisedetails} })\r\n      const statesTotalCount = [\r\n        {\r\n          state: '',\r\n          Districts:{}\r\n        }\r\n      ];\r\n      const stateTotalCases = [\r\n        {\r\n          state:'',\r\n          TotalCases:0\r\n        }\r\n      ]\r\n      let stateDistCountKerala = 0;\r\n      let stateDistCountDelhi = 0;\r\n      let stateDistCountTelangana = 0;\r\n      let stateDistCountRajasthan = 0;\r\n      let stateDistCountHaryana =0;\r\n      let UttarPradesh =0;\r\n      let Ladakh =0;\r\n      let TamilNadu =0;\r\n      let JammuandKashmir =0;\r\n      let Karnataka =0;\r\n      let Maharashtra =0;\r\n      let Punjab =0;\r\n      let AndhraPradesh =0;\r\n      let Uttarakhand =0;\r\n      let Odisha =0;\r\n      let Puducherry =0;\r\n      let WestBengal =0;\r\n      let Chandigarh =0;\r\n      let Gujarat =0;\r\n      let HimachalPradesh =0;\r\n      let MadhyaPradesh =0;\r\n      let Bihar =0;\r\n      let Manipur =0;\r\n      let Mizoram =0;\r\n      let Goa =0;\r\n      let AndamanandNicobarIslands =0;\r\n      let Jharkhand =0;\r\n      let Assam =0;\r\n      let ArunachalPradesh =0;\r\n      let DadraandNagarHaveli =0;\r\n      let Tripura =0;\r\n      let Nagaland =0;\r\n      let Meghalaya =0;\r\n\r\n      for(let state in statewisedetails){\r\n        statesTotalCount.push({state:state,Districts:statewisedetails[state].districtData})\r\n      }\r\n      for(let i=1; i<statesTotalCount.length; i++){\r\n        for(let district in statesTotalCount[i].Districts){\r\n          if(statesTotalCount[i].state == statesTotalCount[i].state){\r\n              if(statesTotalCount[i].state == 'Kerala'){\r\n                stateDistCountKerala += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'Delhi'){\r\n                stateDistCountDelhi += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'Telangana'){\r\n                stateDistCountTelangana += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'Rajasthan'){\r\n                stateDistCountRajasthan += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'Haryana'){\r\n                stateDistCountHaryana += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'Uttar Pradesh'){\r\n                UttarPradesh += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'Ladakh'){\r\n                Ladakh += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'Tamil Nadu'){\r\n                TamilNadu += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'Jammu and Kashmir'){\r\n                JammuandKashmir += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'Karnataka'){\r\n                Karnataka += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'Maharashtra'){\r\n                Maharashtra += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'Punjab'){\r\n                Punjab += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'Andhra Pradesh'){\r\n                AndhraPradesh += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'Uttarakhand'){\r\n                Uttarakhand += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'Odisha'){\r\n                Odisha += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'Puducherry'){\r\n                Puducherry += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'West Bengal'){\r\n                WestBengal += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'Chandigarh'){\r\n                Chandigarh += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'Gujarat'){\r\n                Gujarat += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'Himachal Pradesh'){\r\n                HimachalPradesh += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'Madhya Pradesh'){\r\n                MadhyaPradesh += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'Bihar'){\r\n                Bihar += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'Manipur'){\r\n                Manipur += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'Mizoram'){\r\n                Mizoram += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'Goa'){\r\n                Goa += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'Andaman and Nicobar Islands'){\r\n                AndamanandNicobarIslands += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'Jharkhand'){\r\n                Jharkhand += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'Assam'){\r\n                Assam += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'Arunachal Pradesh'){\r\n                ArunachalPradesh += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'Dadra and Nagar Haveli'){\r\n                DadraandNagarHaveli += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'Tripura'){\r\n                Tripura += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'Nagaland'){\r\n                Nagaland += statesTotalCount[i].Districts[district].confirmed\r\n              }else if(statesTotalCount[i].state == 'Meghalaya'){\r\n                Meghalaya += statesTotalCount[i].Districts[district].confirmed\r\n              }\r\n          }\r\n        }\r\n      }\r\n\r\n      const StateArray = [\r\n        {state:'Kerala',totalcases:stateDistCountKerala},\r\n        {state:'Delhi',totalcases:stateDistCountDelhi},\r\n        {state:'Telangana',totalcases:stateDistCountTelangana},\r\n        {state:'Rajasthan',totalcases:stateDistCountRajasthan},\r\n        {state:'Haryana',totalcases:stateDistCountHaryana},\r\n        {state:'UttarPradesh',totalcases:UttarPradesh},\r\n        {state:'Ladakh',totalcases:Ladakh},\r\n        {state:'TamilNadu',totalcases:TamilNadu},\r\n        {state:'JammuandKashmir',totalcases:JammuandKashmir},\r\n        {state:'Karnataka',totalcases:Karnataka},\r\n        {state:'Maharashtra',totalcases:Maharashtra},\r\n        {state:'Punjab',totalcases:Punjab},\r\n        {state:'AndhraPradesh',totalcases:AndhraPradesh},\r\n        {state:'Uttarakhand',totalcases:Uttarakhand},\r\n        {state:'Odisha',totalcases:Odisha},\r\n        {state:'Puducherry',totalcases:Puducherry},\r\n        {state:'WestBengal',totalcases:WestBengal},\r\n        {state:'Chandigarh',totalcases:Chandigarh},\r\n        {state:'Gujarat',totalcases:Gujarat},\r\n        {state:'HimachalPradesh',totalcases:HimachalPradesh},\r\n        {state:'MadhyaPradesh',totalcases:MadhyaPradesh},\r\n        {state:'Bihar',totalcases:Bihar},\r\n        {state:'Manipur',totalcases:Manipur},\r\n        {state:'Mizoram',totalcases:Mizoram},\r\n        {state:'Goa',totalcases:Goa},\r\n        {state:'AndamanandNicobarIslands',totalcases:AndamanandNicobarIslands},\r\n        {state:'Jharkhand',totalcases:Jharkhand},\r\n        {state:'Assam',totalcases:Assam},\r\n        {state:'ArunachalPradesh',totalcases:ArunachalPradesh},\r\n        {state:'DadraandNagarHaveli',totalcases:DadraandNagarHaveli},\r\n        {state:'Tripura',totalcases:Tripura},\r\n        {state:'Nagaland',totalcases:Nagaland},\r\n        {state:'Meghalaya',totalcases:Meghalaya},\r\n      ]\r\n      this.setState({ StateTotalCases: StateArray})\r\n      console.log('State Total Cases Count',this.state.StateTotalCases)\r\n    })\r\n  }\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Grid container\r\n        justify=\"space-evenly\"\r\n        alignItems=\"center\"\r\n        >\r\n          <Grid item md={11}>\r\n            <Card variant=\"outlined\">\r\n              <CardContent>\r\n                <Grid container  spacing={2}>\r\n\r\n                  {\r\n                    this.state.StateTotalCases.map((stateWiseDetails, index) =>{\r\n                        return <Grid item xs={4} md={2} key={index}>\r\n                                  <Card variant=\"outlined\">\r\n                                    <CardContent className={(stateWiseDetails.totalcases > 1000 )? 'highCases': (stateWiseDetails.totalcases < 100)? 'safeZone' : 'avrageCases'}>\r\n                                      <div>\r\n                                      <Typography  className='stateCards'>\r\n                                        {stateWiseDetails.state}\r\n                                      </Typography>\r\n                                      </div>\r\n                                      <div>\r\n                                      <Typography  className='statetotal'>\r\n                                      <CountUp end={stateWiseDetails.totalcases} duration={3.75} separator=\",\"></CountUp> \r\n                                      </Typography>\r\n                                      </div>\r\n                                    </CardContent>\r\n                                  </Card>\r\n                                </Grid>\r\n                    })\r\n                  }\r\n                </Grid>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default StateDetails;","import React, { useState, useEffect } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport StateDetails from '../StateDetailsSlider/StateDetails.js';\r\nimport CountUp from 'react-countup';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  confirm: {\r\n    color: 'rgba(255,7,58,.6)',\r\n    fontFamily: 'archia',\r\n    fontWeight: '900',\r\n    textTransform: 'uppercase',\r\n    fontSize: '12px !important',\r\n  },\r\n  confirmChild1: {\r\n    textAlign: 'center',\r\n    alignItem: 'center',\r\n    justifyContent: 'center',\r\n    marginTop: '.5rem',\r\n    color: 'rgba(255,7,58,.6)',\r\n    fontFamily: 'archia',\r\n    fontWeight: 900,\r\n    fontSize: '12px !important',\r\n    textTransform: 'uppercase'\r\n  },\r\n  confirmChild2: {\r\n    color: '#ff073a',\r\n    fontWeight: '600',\r\n    textAlign: 'center',\r\n    fontFamily: 'archia',\r\n    fontSize: '24px !important',\r\n    fontWeight: '900',\r\n    textTransform: 'uppercase'\r\n\r\n  },\r\n  active: {\r\n    color: 'rgba(0,123,255,.6)',\r\n    fontFamily: 'archia',\r\n    fontWeight: '900',\r\n    textTransform: 'uppercase',\r\n    fontSize: '12px !important',\r\n    [theme.breakpoints.up('xs')]: {\r\n      marginLeft: '20px'\r\n    }\r\n  },\r\n  activeChild1: {\r\n    textAlign: 'center',\r\n    alignItem: 'center',\r\n    justifyContent: 'center',\r\n    marginTop: '.5rem',\r\n    color: '#ffffff',\r\n    fontFamily: 'archia',\r\n    fontWeight: 900,\r\n    fontSize: '12px !important',\r\n    textTransform: 'uppercase'\r\n  },\r\n  activeChild2: {\r\n    color: '#007bff',\r\n    fontWeight: '600',\r\n    textAlign: 'center',\r\n    fontFamily: 'archia',\r\n    fontSize: '24px !important',\r\n    fontWeight: '900',\r\n    textTransform: 'uppercase'\r\n  },\r\n  recovered: {\r\n    color: 'rgba(40,167,69,.6)',\r\n    fontFamily: 'archia',\r\n    fontWeight: '900',\r\n    textTransform: 'uppercase',\r\n    fontSize: '12px !important',\r\n  },\r\n  recoveredChild1: {\r\n    textAlign: 'center',\r\n    alignItem: 'center',\r\n    justifyContent: 'center',\r\n    marginTop: '.5rem',\r\n    color: 'rgba(40,167,69,.6)',\r\n    fontFamily: 'archia',\r\n    fontWeight: 900,\r\n    fontSize: '12px !important',\r\n    textTransform: 'uppercase'\r\n  },\r\n  recoveredChild2: {\r\n    color: '#28a745',\r\n    fontWeight: '600',\r\n    textAlign: 'center',\r\n    fontFamily: 'archia',\r\n    fontSize: '24px !important',\r\n    fontWeight: '900',\r\n    textTransform: 'uppercase'\r\n\r\n  },\r\n  deceased: {\r\n    color: 'rgba(108,117,125,.6)',\r\n    fontFamily: 'archia',\r\n    fontWeight: '900',\r\n    textTransform: 'uppercase',\r\n    fontSize: '12px !important',\r\n  },\r\n  deceasedChild1: {\r\n    textAlign: 'center',\r\n    alignItem: 'center',\r\n    justifyContent: 'center',\r\n    marginTop: '.5rem',\r\n    color: 'rgba(108,117,125,.6)',\r\n    fontFamily: 'archia',\r\n    fontWeight: 900,\r\n    fontSize: '12px !important',\r\n    textTransform: 'uppercase'\r\n  },\r\n  deceasedChild2: {\r\n    color: '#6c757d',\r\n    fontWeight: '600',\r\n    textAlign: 'center',\r\n    fontFamily: 'archia',\r\n    fontSize: '24px !important',\r\n    fontWeight: '900',\r\n    textTransform: 'uppercase'\r\n\r\n  },\r\n  FirstGridRow: {\r\n    marginTop: '40px !important'\r\n  },\r\n  SecondGridRow: {\r\n    marginTop: '40px !important'\r\n  },\r\n  ThirdGridRow: {\r\n    marginTop: '70px !important'\r\n  },\r\n  FourthGridRow: {\r\n    marginTop: '0px',\r\n    [theme.breakpoints.up('xs')]: {\r\n      marginTop: '10px'\r\n    }\r\n  },\r\n  statewisedata:{\r\n      marginRight: '40px',\r\n      textAlign: 'center',\r\n      fontFamily: 'archia !important',\r\n      fontWeight: '900',\r\n      fontSize: '24px !important',\r\n      textTransform: 'uppercase',\r\n      color: '#343a40',\r\n      [theme.breakpoints.up('xs')]: {\r\n          marginTop: '20px'\r\n      }\r\n  },\r\n  statechild:{\r\n    color: 'rgba(108,117,125,.6)',\r\n    fontSize: '12px !important',\r\n    fontFamily: 'archia',\r\n    fontWeight: '900',\r\n    textTransform: 'uppercase',\r\n    marginLeft: '37px'\r\n  },\r\n  statechild2:{\r\n    color: '#4c75f2',\r\n    fontSize: '12px',\r\n    fontFamily: 'archia',\r\n    fontWeight: '900',\r\n    textTransform: 'uppercase',\r\n    marginLeft: '37px',\r\n    [theme.breakpoints.up('xs')]: {\r\n      marginLeft: '0px',\r\n      fontSize:'10px'\r\n  }\r\n  }\r\n}));\r\n\r\nconst CountryStat = () => {\r\n  const classes = useStyles();\r\n  const [countryStat, setCountryStat] = useState(0);\r\n  const [ConfirmCount, setConfirmCount] = useState(0);\r\n  const [ActivityCount, setActivityCount] = useState(0);\r\n  const [RecoveredCount, setRecoveredCount] = useState(0);\r\n  const [DeceasedCount, setDeceasedCount] = useState(0);\r\n\r\n  useEffect(() => {\r\n    fetch('https://api.covid19india.org/data.json')\r\n      .then(res => res.json())\r\n      .then((stat) =>{\r\n          setCountryStat(stat.statewise[0]);\r\n          setConfirmCount((function () {\r\n            let confirm = parseInt(stat.statewise[0].confirmed);\r\n              return confirm\r\n              // return stat.statewise[0].confirmed.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\r\n          })())\r\n          setActivityCount((function () {\r\n            let active = parseInt(stat.statewise[0].active);\r\n              return active\r\n          })())\r\n          setRecoveredCount((function () {\r\n            let recovered = parseInt(stat.statewise[0].recovered);\r\n              return recovered\r\n          })())\r\n          setDeceasedCount((function () {\r\n            let deaths = parseInt(stat.statewise[0].deaths);\r\n              return deaths\r\n          })())\r\n      })\r\n  }, []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Grid container\r\n        justify=\"space-evenly\"\r\n        alignItems=\"center\"\r\n        className={classes.FirstGridRow}\r\n      >\r\n        <Grid item>\r\n          <Typography variant=\"subtitle1\" className={classes.confirm} gutterBottom>\r\n            Confirmed\r\n          </Typography>\r\n          <div>\r\n            <Typography variant=\"subtitle1\" className={classes.confirmChild1} gutterBottom>\r\n              {'[' + '+' + countryStat.deltaconfirmed + ']'}\r\n            </Typography>\r\n          </div>\r\n          <div>\r\n            <Typography variant=\"subtitle1\" className={classes.confirmChild2} gutterBottom>\r\n             <CountUp end={ConfirmCount} duration={3.75} separator=\",\"></CountUp> \r\n            </Typography>\r\n          </div>\r\n        </Grid>\r\n        <Grid item>\r\n          <Typography variant=\"subtitle1\" className={classes.active} gutterBottom>\r\n            Active\r\n                </Typography>\r\n          <div>\r\n            <Typography variant=\"subtitle1\" className={classes.activeChild1} gutterBottom>\r\n              0\r\n                    </Typography>\r\n          </div>\r\n          <div>\r\n            <Typography variant=\"subtitle1\" className={classes.activeChild2} gutterBottom>\r\n              <CountUp end={ActivityCount} duration={3.75} separator=\",\"></CountUp> \r\n            </Typography>\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Grid container\r\n        justify=\"space-evenly\"\r\n        alignItems=\"center\"\r\n        className={classes.SecondGridRow}\r\n      >\r\n        <Grid item>\r\n          <Typography variant=\"subtitle1\" className={classes.recovered} gutterBottom>\r\n            Recovered\r\n                </Typography>\r\n          <div>\r\n            <Typography variant=\"subtitle1\" className={classes.recoveredChild1} gutterBottom>\r\n              {'[' + '+' + countryStat.deltarecovered + ']'}\r\n            </Typography>\r\n          </div>\r\n          <div>\r\n            <Typography variant=\"subtitle1\" className={classes.recoveredChild2} gutterBottom>\r\n              <CountUp end={RecoveredCount} duration={3.75} separator=\",\"></CountUp> \r\n            </Typography>\r\n          </div>\r\n        </Grid>\r\n        <Grid item>\r\n          <Typography variant=\"subtitle1\" className={classes.deceased} gutterBottom>\r\n            Deceased\r\n                </Typography>\r\n          <div>\r\n            <Typography variant=\"subtitle1\" className={classes.deceasedChild1} gutterBottom>\r\n              {'[' + '+' + countryStat.deltadeaths + ']'}\r\n            </Typography>\r\n          </div>\r\n          <div>\r\n            <Typography variant=\"subtitle1\" className={classes.deceasedChild2} gutterBottom>\r\n              <CountUp end={DeceasedCount} duration={3.75} separator=\",\"></CountUp> \r\n            </Typography>\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid container\r\n      className={classes.FourthGridRow}\r\n      >\r\n        <Grid item xs={12} sm={12} md={8} lg={12} xl={12}>  \r\n        <Typography variant=\"subtitle1\" className={classes.statewisedata}  gutterBottom>\r\n            <div>State Wise Data</div>\r\n            <div className={classes.statechild}>COMPILED FROM STATE GOVT. NUMBERS\r\n            <div className={classes.statechild2}>CLICK ON ANY BELOW STATE TO KNOW MORE.</div>\r\n            </div>\r\n            \r\n        </Typography>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid container className={classes.ThirdGridRow}>\r\n        <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n          <StateDetails />\r\n        </Grid>\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default CountryStat;","import moment from 'moment';\r\n\r\nconst months = {\r\n  '01': 'Jan',\r\n  '02': 'Feb',\r\n  '03': 'Mar',\r\n  '04': 'Apr',\r\n  '05': 'May',\r\n  '06': 'Jun',\r\n  '07': 'Jul',\r\n  '08': 'Aug',\r\n  '09': 'Sep',\r\n  '10': 'Oct',\r\n  '11': 'Nov',\r\n  '12': 'Dec',\r\n};\r\n\r\nconst stateCodes = {\r\n  AP: 'Andhra Pradesh',\r\n  AR: 'Arunachal Pradesh',\r\n  AS: 'Assam',\r\n  BR: 'Bihar',\r\n  CT: 'Chhattisgarh',\r\n  GA: 'Goa',\r\n  GJ: 'Gujarat',\r\n  HR: 'Haryana',\r\n  HP: 'Himachal Pradesh',\r\n  JH: 'Jharkhand',\r\n  KA: 'Karnataka',\r\n  KL: 'Kerala',\r\n  MP: 'Madhya Pradesh',\r\n  MH: 'Maharashtra',\r\n  MN: 'Manipur',\r\n  ML: 'Meghalaya',\r\n  MZ: 'Mizoram',\r\n  NL: 'Nagaland',\r\n  OR: 'Odisha',\r\n  PB: 'Punjab',\r\n  RJ: 'Rajasthan',\r\n  SK: 'Sikkim',\r\n  TN: 'Tamil Nadu',\r\n  TG: 'Telangana',\r\n  TR: 'Tripura',\r\n  UT: 'Uttarakhand',\r\n  UP: 'Uttar Pradesh',\r\n  WB: 'West Bengal',\r\n  AN: 'Andaman and Nicobar Islands',\r\n  CH: 'Chandigarh',\r\n  DN: 'Dadra and Nagar Haveli',\r\n  DD: 'Daman and Diu',\r\n  DL: 'Delhi',\r\n  JK: 'Jammu and Kashmir',\r\n  LA: 'Ladakh',\r\n  LD: 'Lakshadweep',\r\n  PY: 'Puducherry',\r\n};\r\n\r\nexport const getStateName = (code) => {\r\n  return stateCodes[code.toUpperCase()];\r\n};\r\n\r\nexport const formatDate = (unformattedDate) => {\r\n  const day = unformattedDate.slice(0, 2);\r\n  const month = unformattedDate.slice(3, 5);\r\n  const year = unformattedDate.slice(6, 10);\r\n  const time = unformattedDate.slice(11);\r\n  return `${year}-${month}-${day}T${time}+05:30`;\r\n};\r\n\r\nexport const formatDateAbsolute = (unformattedDate) => {\r\n  const day = unformattedDate.slice(0, 2);\r\n  const month = unformattedDate.slice(3, 5);\r\n  const time = unformattedDate.slice(11);\r\n  return `${day} ${months[month]}, ${time.slice(0, 5)} IST`;\r\n};\r\n\r\nconst validateCTS = (data = []) => {\r\n  const today = new Date();\r\n  today.setHours(0, 0, 0, 0);\r\n  const dataTypes = [\r\n    'dailyconfirmed',\r\n    'dailydeceased',\r\n    'dailyrecovered',\r\n    'totalconfirmed',\r\n    'totaldeceased',\r\n    'totalrecovered',\r\n  ];\r\n  return data\r\n    .filter((d) => dataTypes.every((dt) => d[dt]) && d.date)\r\n    .filter((d) => dataTypes.every((dt) => Number(d[dt]) >= 0))\r\n    .filter((d) => {\r\n      const year = today.getFullYear();\r\n      return new Date(d.date + year) < today;\r\n    });\r\n};\r\n\r\nexport const preprocessTimeseries = (timeseries) => {\r\n  return validateCTS(timeseries).map((stat) => ({\r\n    date: new Date(stat.date + ' 2020'),\r\n    totalconfirmed: +stat.totalconfirmed,\r\n    totalrecovered: +stat.totalrecovered,\r\n    totaldeceased: +stat.totaldeceased,\r\n    dailyconfirmed: +stat.dailyconfirmed,\r\n    dailyrecovered: +stat.dailyrecovered,\r\n    dailydeceased: +stat.dailydeceased,\r\n  }));\r\n};\r\n\r\n/**\r\n * Returns the last `days` entries\r\n * @param {Array<Object>} timeseries\r\n * @param {number} days\r\n *\r\n * @return {Array<Object>}\r\n */\r\nexport function sliceTimeseriesFromEnd(timeseries, days) {\r\n  return timeseries.slice(-days);\r\n}\r\n\r\nexport const formatNumber = (value) => {\r\n  const numberFormatter = new Intl.NumberFormat('en-IN');\r\n  return isNaN(value) ? '-' : numberFormatter.format(value);\r\n};\r\n\r\nexport const parseStateTimeseries = ({states_daily: data}) => {\r\n  const statewiseSeries = Object.keys(stateCodes).reduce((a, c) => {\r\n    a[c] = [];\r\n    return a;\r\n  }, {});\r\n\r\n  const today = moment();\r\n  for (let i = 0; i < data.length; i += 3) {\r\n    const date = moment(data[i].date, 'DD-MMM-YY');\r\n    // Skip data from the current day\r\n    if (date.isBefore(today, 'Date')) {\r\n      Object.entries(statewiseSeries).forEach(([k, v]) => {\r\n        const stateCode = k.toLowerCase();\r\n        const prev = v[v.length - 1] || {};\r\n        v.push({\r\n          date: date.toDate(),\r\n          dailyconfirmed: +data[i][stateCode] || 0,\r\n          dailyrecovered: +data[i + 1][stateCode] || 0,\r\n          dailydeceased: +data[i + 2][stateCode] || 0,\r\n          totalconfirmed: +data[i][stateCode] + (prev.totalconfirmed || 0),\r\n          totalrecovered: +data[i + 1][stateCode] + (prev.totalrecovered || 0),\r\n          totaldeceased: +data[i + 2][stateCode] + (prev.totaldeceased || 0),\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n  return statewiseSeries;\r\n};","import React, {useState, useEffect, useRef, useCallback} from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport CountryStat from '../CountryStats/CountryStat.js';\r\nimport axios from 'axios';\r\nimport {formatDistance, format} from 'date-fns';\r\n\r\nimport {\r\n    formatDate,\r\n    formatDateAbsolute,\r\n  } from '../../utils/commom-functions.js';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    appUpdateDiv:{\r\n        alignItems: 'center',\r\n        justifyContent: 'center'\r\n    },\r\n    appUpdateFont1:{\r\n        fontFamily: 'archia !important',\r\n        fontWeight: '900',\r\n        textTransform: 'uppercase',\r\n        color: '#343a40',\r\n        [theme.breakpoints.up('xs')]: {\r\n            marginTop: '20px'\r\n          }\r\n    },\r\n    appUpdateFont2:{\r\n        fontFamily: 'archia !important',\r\n        fontWeight: '600',\r\n        fontSize: '11px!important',\r\n        textTransform: 'uppercase',\r\n        color: '#6c757d'\r\n    },\r\n    appUpdateFont3:{\r\n        fontFamily: 'archia !important',\r\n        color: 'rgba(40,167,69,.6) !important',\r\n        fontWeight: '900',\r\n        fontSize: '12px !important',\r\n        textTransform: 'uppercase',\r\n        [theme.breakpoints.up('md')]: {\r\n            marginLeft: '81px !important',\r\n            marginTop: '40px !important'\r\n          },\r\n        [theme.breakpoints.up('xs')]: {\r\n            marginTop: '5px',\r\n            marginLeft: '25px'\r\n          }\r\n    },\r\n    appUpdateFont4:{\r\n        fontFamily: 'archia !important',\r\n        color: 'rgb(40, 167, 69)',\r\n        fontWeight: '900',\r\n        fontSize: '14px !important',\r\n        textTransform: 'uppercase',\r\n        fontSize: '11px !important',\r\n        [theme.breakpoints.up('md')]: {\r\n            marginLeft: '74px !important',\r\n          },\r\n        [theme.breakpoints.up('xs')]: {\r\n            marginLeft: '-4px',\r\n            fontSize: '10px',\r\n          }\r\n    },\r\n    appUpdateFont5:{\r\n        fontFamily: 'archia !important',\r\n        color: 'rgb(40, 167, 69)',\r\n        fontWeight: '900',\r\n        textTransform: 'uppercase',\r\n        fontSize: '12px !important',\r\n        [theme.breakpoints.up('md')]: {\r\n            marginLeft: '68px !important'\r\n          },\r\n        [theme.breakpoints.up('xs')]: {\r\n            marginLeft: '10px',\r\n            fontSize: '10px',\r\n          }\r\n    }\r\n}));\r\n\r\nconst ApplastUpdated = () => {\r\n  const [states, setStates] = useState([]);\r\n  const [fetched, setFetched] = useState(false);\r\n  const [lastUpdated, setLastUpdated] = useState('');\r\n\r\n  useEffect(() => {\r\n    if (fetched === false) {\r\n      getStates();\r\n    }\r\n  }, [fetched]);\r\n\r\n  const getStates = async () => {\r\n    try {\r\n      const [\r\n        response,\r\n      ] = await Promise.all([\r\n        axios.get('https://api.covid19india.org/data.json'),\r\n      ]);\r\n      setStates(response.data.statewise);\r\n      setLastUpdated(response.data.statewise[0].lastupdatedtime);\r\n      setFetched(true);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n    const classes = useStyles();\r\n    return ( \r\n        <React.Fragment>\r\n            <Grid container className={classes.appUpdateDiv}>\r\n                <Grid item xs={7} sm={6} md={4} lg={6} xl={6}\r\n                >\r\n                    <Typography variant=\"h5\" className={classes.appUpdateFont1}>\r\n                        India COVID-19 Tracker\r\n                    </Typography>\r\n                    <Typography variant=\"h6\" className={classes.appUpdateFont2}>\r\n                        A Crowdsourced Initiative\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item xs={4} sm={6} md={3} lg={6} xl={6}> \r\n                    <Typography variant=\"h5\" className={classes.appUpdateFont3}>\r\n                        Last Updated\r\n                    </Typography>\r\n                    <Typography variant=\"h6\" className={classes.appUpdateFont4}>\r\n                    {isNaN(Date.parse(formatDate(lastUpdated)))\r\n                    ? ''\r\n                    : formatDistance(\r\n                        new Date(formatDate(lastUpdated)),\r\n                        new Date()\r\n                      ) + ' Ago'}\r\n                    </Typography>\r\n                    <Typography variant=\"h6\" className={classes.appUpdateFont5}>\r\n                    {isNaN(Date.parse(formatDate(lastUpdated)))\r\n                    ? ''\r\n                    : formatDateAbsolute(lastUpdated)}\r\n                    </Typography>\r\n                </Grid>\r\n            </Grid>\r\n            <CountryStat />\r\n        </React.Fragment>\r\n    );\r\n}\r\n \r\nexport default ApplastUpdated;","import React, { useState, useEffect } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ApplastUpdated from '../ApplastUpdated/AppUpdated.js';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    banner_parent:{\r\n        background: 'rgba(32,26,162,.12549)',\r\n        height: 'auto !important',\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    banner: {\r\n        textAlign: 'center',\r\n        margin: theme.spacing(3),\r\n    },\r\n    banner_text:{\r\n        fontFamily: 'archia !important',\r\n        fontSize: '.8rem !important',\r\n        fontWeight: '600',\r\n        color: 'rgba(32,26,162,.866667)'\r\n    }\r\n}));\r\nconst Covidquotes = (props) => {\r\n    const classes = useStyles();\r\n    const [Quotes, setQuotes] = useState('Stay Home, Stay Safe.');\r\n\r\n    useEffect(() =>{\r\n        setInterval(() =>{\r\n            fetch('https://api.covid19india.org/website_data.json')\r\n            .then(res => res.json())\r\n            .then(quotes => {\r\n                let randomNum = Math.abs(Math.floor(Math.random() * (1 - quotes.factoids.length) + 1));\r\n                setQuotes(quotes.factoids[randomNum].banner)})\r\n        },4000)\r\n    },[]);\r\n    const setNewQuote = () =>{\r\n        fetch('https://api.covid19india.org/website_data.json')\r\n            .then(res => res.json())\r\n            .then(quotes => {\r\n            let randomNum = Math.abs(Math.floor(Math.random() * (1 - quotes.factoids.length) + 1));\r\n            setQuotes(quotes.factoids[randomNum].banner)\r\n        })\r\n    }\r\n    return ( \r\n        <React.Fragment>\r\n            <Grid container className={classes.banner_parent} onClick={() => setNewQuote()}>\r\n                <Grid item xs={12} sm={12} md={12} lg={12} xl={12} className={classes.banner}>\r\n                    <Typography className={classes.banner_text}>\r\n                       {Quotes}\r\n                    </Typography>\r\n                </Grid>\r\n            </Grid>\r\n            <ApplastUpdated />\r\n        </React.Fragment>\r\n     );\r\n}\r\n\r\nexport default Covidquotes;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport MoreIcon from '@material-ui/icons/MoreVert';\r\nimport Covidquotes from '../CovidQuotes/Covidquotes.js';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  navbar:{\r\n    boxShadow: '1px 0px 1px black !important'\r\n  },\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  title: {\r\n    fontFamily: 'archia !important',\r\n    display: 'block',\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'block',\r\n    },\r\n    color: theme.palette.text.inherit,\r\n  },\r\n  sectionDesktop: {\r\n    display: 'none',\r\n    [theme.breakpoints.up('md')]: {\r\n      display: 'flex',\r\n    },\r\n  },\r\n  sectionMobile: {\r\n    display: 'flex',\r\n    [theme.breakpoints.up('md')]: {\r\n      display: 'none',\r\n    },\r\n  },\r\n}));\r\nconst PrimarySearchAppBar =  () => {\r\n  const classes = useStyles();\r\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\r\n\r\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\r\n\r\n  const handleMobileMenuClose = () => {\r\n    setMobileMoreAnchorEl(null);\r\n  };\r\n\r\n  const handleMobileMenuOpen = (event) => {\r\n    setMobileMoreAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const mobileMenuId = 'primary-search-account-menu-mobile';\r\n  const renderMobileMenu = (\r\n    <Menu\r\n      anchorEl={mobileMoreAnchorEl}\r\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      id={mobileMenuId}\r\n      keepMounted\r\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      open={isMobileMenuOpen}\r\n      onClose={handleMobileMenuClose}\r\n    >\r\n      <MenuItem>\r\n        <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\r\n          <Badge badgeContent={4} color=\"secondary\">\r\n            <MailIcon />\r\n          </Badge>\r\n        </IconButton>\r\n        <p>Messages</p>\r\n      </MenuItem>\r\n      <MenuItem>\r\n        <IconButton aria-label=\"show 11 new notifications\" color=\"inherit\">\r\n          <Badge badgeContent={11} color=\"secondary\">\r\n            <NotificationsIcon />\r\n          </Badge>\r\n        </IconButton>\r\n        <p>Notifications</p>\r\n      </MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  return (\r\n    <div className={classes.grow}>\r\n      <AppBar position=\"static\" color=\"inherit\" className={classes.navbar}>\r\n        <Toolbar>\r\n          <Typography className={classes.title}  variant=\"h6\" noWrap>\r\n            Covid-19\r\n          </Typography>\r\n          <div className={classes.grow} />\r\n          <div className={classes.sectionDesktop}>\r\n            <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\r\n              <Badge badgeContent={4} color=\"secondary\">\r\n                <MailIcon />\r\n              </Badge>\r\n            </IconButton>\r\n            <IconButton aria-label=\"show 17 new notifications\" color=\"inherit\">\r\n              <Badge badgeContent={17} color=\"secondary\">\r\n                <NotificationsIcon />\r\n              </Badge>\r\n            </IconButton>\r\n          </div>\r\n          <div className={classes.sectionMobile}>\r\n            <IconButton\r\n              aria-label=\"show more\"\r\n              aria-controls={mobileMenuId}\r\n              aria-haspopup=\"true\"\r\n              onClick={handleMobileMenuOpen}\r\n              color=\"inherit\"\r\n            >\r\n              <MoreIcon />\r\n            </IconButton>\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Covidquotes />\r\n      {renderMobileMenu}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PrimarySearchAppBar;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\nimport './App.css';\nimport NavBar  from '../src/Components/NavBar/NavBar.js';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <NavBar />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { combineReducers } from 'redux';\r\n\r\nexport default combineReducers({\r\n});","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './Reducers';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(rootReducer, initialState, compose( \r\n    applyMiddleware(...middleware),\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__() || compose\r\n));\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}